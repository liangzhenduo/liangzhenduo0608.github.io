{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/files/6relayd_2013-10-21_ar71xx.ipk","path":"files/6relayd_2013-10-21_ar71xx.ipk","modified":1,"renderable":0},{"_id":"source/files/luci-app-chinadns_1.4.0-1_all.ipk","path":"files/luci-app-chinadns_1.4.0-1_all.ipk","modified":1,"renderable":0},{"_id":"source/files/ChinaDNS_1.3.2-3_ar71xx.ipk","path":"files/ChinaDNS_1.3.2-3_ar71xx.ipk","modified":1,"renderable":0},{"_id":"source/files/luci-app-ngrokc_git-15.290.16504-8c2fd44-1_all.ipk","path":"files/luci-app-ngrokc_git-15.290.16504-8c2fd44-1_all.ipk","modified":1,"renderable":0},{"_id":"source/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk","path":"files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk","modified":1,"renderable":0},{"_id":"source/files/ngrokc_ba56781152-1_ar71xx.ipk","path":"files/ngrokc_ba56781152-1_ar71xx.ipk","modified":1,"renderable":0},{"_id":"source/img/6rbanner.png","path":"img/6rbanner.png","modified":1,"renderable":0},{"_id":"source/img/appicon.png","path":"img/appicon.png","modified":1,"renderable":0},{"_id":"source/img/arbaiduyun.png","path":"img/arbaiduyun.png","modified":1,"renderable":0},{"_id":"source/img/arsuccess.png","path":"img/arsuccess.png","modified":1,"renderable":0},{"_id":"source/img/breedassistant.png","path":"img/breedassistant.png","modified":1,"renderable":0},{"_id":"source/img/breedbackup.png","path":"img/breedbackup.png","modified":1,"renderable":0},{"_id":"source/img/breedbanner.png","path":"img/breedbanner.png","modified":1,"renderable":0},{"_id":"source/img/breedreset.png","path":"img/breedreset.png","modified":1,"renderable":0},{"_id":"source/img/breedupdate.png","path":"img/breedupdate.png","modified":1,"renderable":0},{"_id":"source/img/dnsbanner.png","path":"img/dnsbanner.png","modified":1,"renderable":0},{"_id":"source/img/dhbanner.png","path":"img/dhbanner.png","modified":1,"renderable":0},{"_id":"source/img/dnschinadns.png","path":"img/dnschinadns.png","modified":1,"renderable":0},{"_id":"source/img/dnsservice.png","path":"img/dnsservice.png","modified":1,"renderable":0},{"_id":"source/img/dnsshadowsocks.png","path":"img/dnsshadowsocks.png","modified":1,"renderable":0},{"_id":"source/img/kccookie.png","path":"img/kccookie.png","modified":1,"renderable":0},{"_id":"source/img/mpbanner.png","path":"img/mpbanner.png","modified":1,"renderable":0},{"_id":"source/img/ngluci.png","path":"img/ngluci.png","modified":1,"renderable":0},{"_id":"source/img/mcbanner.png","path":"img/mcbanner.png","modified":1,"renderable":0},{"_id":"source/img/ngssh.png","path":"img/ngssh.png","modified":1,"renderable":0},{"_id":"source/img/op703n.png","path":"img/op703n.png","modified":1,"renderable":0},{"_id":"source/img/opss.png","path":"img/opss.png","modified":1,"renderable":0},{"_id":"source/img/optftp.png","path":"img/optftp.png","modified":1,"renderable":0},{"_id":"source/img/qt3.png","path":"img/qt3.png","modified":1,"renderable":0},{"_id":"source/img/qt4.png","path":"img/qt4.png","modified":1,"renderable":0},{"_id":"source/img/ssbanner.png","path":"img/ssbanner.png","modified":1,"renderable":0},{"_id":"source/img/sshconfbanner.png","path":"img/sshconfbanner.png","modified":1,"renderable":0},{"_id":"source/img/sspromo.png","path":"img/sspromo.png","modified":1,"renderable":0},{"_id":"source/img/terzsh.png","path":"img/terzsh.png","modified":1,"renderable":0},{"_id":"source/img/teriterm.png","path":"img/teriterm.png","modified":1,"renderable":0},{"_id":"source/img/vpnwin6.png","path":"img/vpnwin6.png","modified":1,"renderable":0},{"_id":"source/img/404.png","path":"img/404.png","modified":1,"renderable":0},{"_id":"source/img/adbbanner.png","path":"img/adbbanner.png","modified":1,"renderable":0},{"_id":"source/img/applaunch.png","path":"img/applaunch.png","modified":1,"renderable":0},{"_id":"source/img/ardownload.png","path":"img/ardownload.png","modified":1,"renderable":0},{"_id":"source/img/arsetting.png","path":"img/arsetting.png","modified":1,"renderable":0},{"_id":"source/img/arbanner.png","path":"img/arbanner.png","modified":1,"renderable":0},{"_id":"source/img/breedweb.png","path":"img/breedweb.png","modified":1,"renderable":0},{"_id":"source/img/breedwrt.png","path":"img/breedwrt.png","modified":1,"renderable":0},{"_id":"source/img/dobanner.png","path":"img/dobanner.png","modified":1,"renderable":0},{"_id":"source/img/ngrequests.png","path":"img/ngrequests.png","modified":1,"renderable":0},{"_id":"source/img/oledbanner.png","path":"img/oledbanner.png","modified":1,"renderable":0},{"_id":"source/img/op2200.png","path":"img/op2200.png","modified":1,"renderable":0},{"_id":"source/img/oplucicn.png","path":"img/oplucicn.png","modified":1,"renderable":0},{"_id":"source/img/oppasswd.png","path":"img/oppasswd.png","modified":1,"renderable":0},{"_id":"source/img/qterror.png","path":"img/qterror.png","modified":1,"renderable":0},{"_id":"source/img/qtruntime.png","path":"img/qtruntime.png","modified":1,"renderable":0},{"_id":"source/img/qtwindows.png","path":"img/qtwindows.png","modified":1,"renderable":0},{"_id":"source/img/shbanner.png","path":"img/shbanner.png","modified":1,"renderable":0},{"_id":"source/img/ssch1.png","path":"img/ssch1.png","modified":1,"renderable":0},{"_id":"source/img/ssl3.png","path":"img/ssl3.png","modified":1,"renderable":0},{"_id":"source/img/tervim.png","path":"img/tervim.png","modified":1,"renderable":0},{"_id":"source/img/vpnnat.png","path":"img/vpnnat.png","modified":1,"renderable":0},{"_id":"source/img/vpnsetup.png","path":"img/vpnsetup.png","modified":1,"renderable":0},{"_id":"source/img/vpnwin1.png","path":"img/vpnwin1.png","modified":1,"renderable":0},{"_id":"source/img/vpnwin2.png","path":"img/vpnwin2.png","modified":1,"renderable":0},{"_id":"source/img/vpnwin3.png","path":"img/vpnwin3.png","modified":1,"renderable":0},{"_id":"source/img/vpnwin4.png","path":"img/vpnwin4.png","modified":1,"renderable":0},{"_id":"source/img/vpnwin7.png","path":"img/vpnwin7.png","modified":1,"renderable":0},{"_id":"source/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk","path":"files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk","modified":1,"renderable":0},{"_id":"source/img/appbanner.png","path":"img/appbanner.png","modified":1,"renderable":0},{"_id":"source/img/appshell.png","path":"img/appshell.png","modified":1,"renderable":0},{"_id":"source/img/appjar.png","path":"img/appjar.png","modified":1,"renderable":0},{"_id":"source/img/aryunsetting.png","path":"img/aryunsetting.png","modified":1,"renderable":0},{"_id":"source/img/dbbanner.png","path":"img/dbbanner.png","modified":1,"renderable":0},{"_id":"source/img/ddbanner.png","path":"img/ddbanner.png","modified":1,"renderable":0},{"_id":"source/img/dnsdhcpdns.png","path":"img/dnsdhcpdns.png","modified":1,"renderable":0},{"_id":"source/img/gabanner.png","path":"img/gabanner.png","modified":1,"renderable":0},{"_id":"source/img/kcen.png","path":"img/kcen.png","modified":1,"renderable":0},{"_id":"source/img/lempbanner.png","path":"img/lempbanner.png","modified":1,"renderable":0},{"_id":"source/img/opfirst.png","path":"img/opfirst.png","modified":1,"renderable":0},{"_id":"source/img/opsss.png","path":"img/opsss.png","modified":1,"renderable":0},{"_id":"source/img/opwifi.png","path":"img/opwifi.png","modified":1,"renderable":0},{"_id":"source/img/ssl2.png","path":"img/ssl2.png","modified":1,"renderable":0},{"_id":"source/img/ssl4.png","path":"img/ssl4.png","modified":1,"renderable":0},{"_id":"source/img/vlbanner.png","path":"img/vlbanner.png","modified":1,"renderable":0},{"_id":"source/img/vlinstall.png","path":"img/vlinstall.png","modified":1,"renderable":0},{"_id":"source/img/vlverilog.png","path":"img/vlverilog.png","modified":1,"renderable":0},{"_id":"source/img/vpnopen.png","path":"img/vpnopen.png","modified":1,"renderable":0},{"_id":"source/img/vpnopenvpn.png","path":"img/vpnopenvpn.png","modified":1,"renderable":0},{"_id":"source/img/vpntunnel.png","path":"img/vpntunnel.png","modified":1,"renderable":0},{"_id":"source/img/vpnset.png","path":"img/vpnset.png","modified":1,"renderable":0},{"_id":"source/img/vpnuser.png","path":"img/vpnuser.png","modified":1,"renderable":0},{"_id":"source/img/vpnwin5.png","path":"img/vpnwin5.png","modified":1,"renderable":0},{"_id":"themes/morris/source/css/nprogress.css","path":"css/nprogress.css","modified":1,"renderable":1},{"_id":"themes/morris/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/morris/source/images/icon.png","path":"images/icon.png","modified":1,"renderable":1},{"_id":"themes/morris/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/morris/source/js/jquery.pjax.js","path":"js/jquery.pjax.js","modified":1,"renderable":1},{"_id":"themes/morris/source/js/jquery.qrcode.min.js","path":"js/jquery.qrcode.min.js","modified":1,"renderable":1},{"_id":"themes/morris/source/js/nprogress.js","path":"js/nprogress.js","modified":1,"renderable":1},{"_id":"themes/morris/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/morris/source/js/typed.js","path":"js/typed.js","modified":1,"renderable":1},{"_id":"source/files/shadowsocks-libev_2.4.8-3_ar71xx.ipk","path":"files/shadowsocks-libev_2.4.8-3_ar71xx.ipk","modified":1,"renderable":0},{"_id":"themes/morris/source/js/ukagaka.js","path":"js/ukagaka.js","modified":1,"renderable":1},{"_id":"source/img/appnew.png","path":"img/appnew.png","modified":1,"renderable":0},{"_id":"source/img/apprun.png","path":"img/apprun.png","modified":1,"renderable":0},{"_id":"source/img/arui.png","path":"img/arui.png","modified":1,"renderable":0},{"_id":"source/img/gagithub.png","path":"img/gagithub.png","modified":1,"renderable":0},{"_id":"source/img/gfwbanner.png","path":"img/gfwbanner.png","modified":1,"renderable":0},{"_id":"source/img/kcadownload.png","path":"img/kcadownload.png","modified":1,"renderable":0},{"_id":"source/img/ngbanner.png","path":"img/ngbanner.png","modified":1,"renderable":0},{"_id":"source/img/opwan6.png","path":"img/opwan6.png","modified":1,"renderable":0},{"_id":"source/img/ssch2.png","path":"img/ssch2.png","modified":1,"renderable":0},{"_id":"source/img/vpnbanner.png","path":"img/vpnbanner.png","modified":1,"renderable":0},{"_id":"source/img/vpnmac1.png","path":"img/vpnmac1.png","modified":1,"renderable":0},{"_id":"source/img/vpnmac2.png","path":"img/vpnmac2.png","modified":1,"renderable":0},{"_id":"source/img/vpnmac3.png","path":"img/vpnmac3.png","modified":1,"renderable":0},{"_id":"source/img/vpnnew.png","path":"img/vpnnew.png","modified":1,"renderable":0},{"_id":"source/img/vpnvirtual.png","path":"img/vpnvirtual.png","modified":1,"renderable":0},{"_id":"themes/morris/source/js/animate.css","path":"js/animate.css","modified":1,"renderable":1},{"_id":"themes/morris/source/js/jquery-2.2.4.min.js","path":"js/jquery-2.2.4.min.js","modified":1,"renderable":1},{"_id":"themes/morris/source/js/jquery.als-1.6.js","path":"js/jquery.als-1.6.js","modified":1,"renderable":1},{"_id":"source/img/opnew.png","path":"img/opnew.png","modified":1,"renderable":0},{"_id":"source/img/ssl1.png","path":"img/ssl1.png","modified":1,"renderable":0},{"_id":"source/img/vpneasy.png","path":"img/vpneasy.png","modified":1,"renderable":0},{"_id":"source/img/vpnhub.png","path":"img/vpnhub.png","modified":1,"renderable":0},{"_id":"themes/morris/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 妖精 1号娘.png","path":"images/kancolle/NPC 妖精 1号娘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 妖精 3号娘.png","path":"images/kancolle/NPC 妖精 3号娘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 猫娘 FinalBoss 报错娘.png","path":"images/kancolle/NPC 猫娘 FinalBoss 报错娘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.1 Nagato 長門.jpg","path":"images/kancolle/no.1 Nagato 長門.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.10 Shimakaze 岛風.jpg","path":"images/kancolle/no.10 Shimakaze 岛風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.10 Shimakaze_Kai 岛風改.jpg","path":"images/kancolle/no.10 Shimakaze_Kai 岛風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.100 Chiyoda_A 千代田甲.jpg","path":"images/kancolle/no.100 Chiyoda_A 千代田甲.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.101 Mogami_Kai 最上改.jpg","path":"images/kancolle/no.101 Mogami_Kai 最上改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.102 Ise_Kai 伊势改.jpg","path":"images/kancolle/no.102 Ise_Kai 伊势改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.103 Hyuuga_Kai 日向改.jpg","path":"images/kancolle/no.103 Hyuuga_Kai 日向改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.104 Chitose_Carrier 千歳航.jpg","path":"images/kancolle/no.104 Chitose_Carrier 千歳航.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.105 Chiyoda_Carrier 千代田航.jpg","path":"images/kancolle/no.105 Chiyoda_Carrier 千代田航.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.105 Chiyoda_Carrier_Kai 千代田航改.jpg","path":"images/kancolle/no.105 Chiyoda_Carrier_Kai 千代田航改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.107 Zuikaku 瑞鶴.jpg","path":"images/kancolle/no.107 Zuikaku 瑞鶴.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.108 Zuikaku_Kai 瑞鶴改.jpg","path":"images/kancolle/no.108 Zuikaku_Kai 瑞鶴改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.109 Kinu 鬼怒.jpg","path":"images/kancolle/no.109 Kinu 鬼怒.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.11 Fubuki 吹雪.jpg","path":"images/kancolle/no.11 Fubuki 吹雪.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.110 Abukuma_Kai 阿武隈改.jpg","path":"images/kancolle/no.110 Abukuma_Kai 阿武隈改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.111 Yuubari_Kai 夕張改.jpg","path":"images/kancolle/no.111 Yuubari_Kai 夕張改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.113 Zuihou_Kai 瑞鳯改.jpg","path":"images/kancolle/no.113 Zuihou_Kai 瑞鳯改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.114 Ooi_Kai_Ni 大井改二.jpg","path":"images/kancolle/no.114 Ooi_Kai_Ni 大井改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.115 Kitakami_Kai_Ni 北上改二.jpg","path":"images/kancolle/no.115 Kitakami_Kai_Ni 北上改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.116 Mikuma 三隈.jpg","path":"images/kancolle/no.116 Mikuma 三隈.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.117 Mikuma_Kai 三隈改.jpg","path":"images/kancolle/no.117 Mikuma_Kai 三隈改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.118 Hatsukaze 初風.jpg","path":"images/kancolle/no.118 Hatsukaze 初風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.118 Hatsukaze_Kai 初風改.jpg","path":"images/kancolle/no.118 Hatsukaze_Kai 初風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.12 Shirayuki 白雪.jpg","path":"images/kancolle/no.12 Shirayuki 白雪.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.120 Kinugasa 衣笠.jpg","path":"images/kancolle/no.120 Kinugasa 衣笠.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二.jpg","path":"images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二.jpg","path":"images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.123 I_19_Kai 伊19改.jpg","path":"images/kancolle/no.123 I_19_Kai 伊19改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.123 I_19 伊19.jpg","path":"images/kancolle/no.123 I_19 伊19.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.124 Suzuya 鈴谷.jpg","path":"images/kancolle/no.124 Suzuya 鈴谷.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.125 Kumano 熊野.jpg","path":"images/kancolle/no.125 Kumano 熊野.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.126 I_168 伊168.jpg","path":"images/kancolle/no.126 I_168 伊168.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.127 I_58 伊58.jpg","path":"images/kancolle/no.127 I_58 伊58.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.128 I_8_Kai 伊8改.jpg","path":"images/kancolle/no.128 I_8_Kai 伊8改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.128 I_8 伊8.jpg","path":"images/kancolle/no.128 I_8 伊8.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.129 Suzuya_Kai 鈴谷改.jpg","path":"images/kancolle/no.129 Suzuya_Kai 鈴谷改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.13 Hatsuyuki 初雪.jpg","path":"images/kancolle/no.13 Hatsuyuki 初雪.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.13 Hatsuyuki_Kai 初雪改.jpg","path":"images/kancolle/no.13 Hatsuyuki_Kai 初雪改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.130 Kumano_Kai 熊野改.jpg","path":"images/kancolle/no.130 Kumano_Kai 熊野改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.131 Yamato 大和.jpg","path":"images/kancolle/no.131 Yamato 大和.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.132 Akugumo_Kai 秋雲改.jpg","path":"images/kancolle/no.132 Akugumo_Kai 秋雲改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.132 Akugumo 秋雲.jpg","path":"images/kancolle/no.132 Akugumo 秋雲.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.133 Yuugumo 夕雲.jpg","path":"images/kancolle/no.133 Yuugumo 夕雲.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.133 Yuugumo_Kai 夕雲改.jpg","path":"images/kancolle/no.133 Yuugumo_Kai 夕雲改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.134 Makigumo 卷雲.jpg","path":"images/kancolle/no.134 Makigumo 卷雲.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.134 Makigumo_Kai 卷雲改.jpg","path":"images/kancolle/no.134 Makigumo_Kai 卷雲改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.135 Naganami_Kai 長波改.jpg","path":"images/kancolle/no.135 Naganami_Kai 長波改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.135 Naganami 長波.jpg","path":"images/kancolle/no.135 Naganami 長波.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.136 Yamato_Kai 大和改.jpg","path":"images/kancolle/no.136 Yamato_Kai 大和改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.137 Agano_Kai 阿賀野改.jpg","path":"images/kancolle/no.137 Agano_Kai 阿賀野改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.138 Noshiro 能代.jpg","path":"images/kancolle/no.138 Noshiro 能代.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.137 Agano 阿賀野.jpg","path":"images/kancolle/no.137 Agano 阿賀野.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.138 Noshiro_Kai 能代改.jpg","path":"images/kancolle/no.138 Noshiro_Kai 能代改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.139 Yahagi 矢矧.jpg","path":"images/kancolle/no.139 Yahagi 矢矧.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.139 Yahagi_Kai 矢矧改.jpg","path":"images/kancolle/no.139 Yahagi_Kai 矢矧改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.14 Miyuki 深雪.jpg","path":"images/kancolle/no.14 Miyuki 深雪.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.14 Miyuki_Kai 深雪改.jpg","path":"images/kancolle/no.14 Miyuki_Kai 深雪改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.140 Sakawa 酒匂.jpg","path":"images/kancolle/no.140 Sakawa 酒匂.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.140 Sakawa_Kai 酒匂改.jpg","path":"images/kancolle/no.140 Sakawa_Kai 酒匂改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二.jpg","path":"images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二.jpg","path":"images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.143 Musashi 武藏.jpg","path":"images/kancolle/no.143 Musashi 武藏.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二.jpg","path":"images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.145 Shigure_Kai_Ni 時雨改二.jpg","path":"images/kancolle/no.145 Shigure_Kai_Ni 時雨改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.146 Kiso_Kai_Ni 木曽改二.jpg","path":"images/kancolle/no.146 Kiso_Kai_Ni 木曽改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.147 Верный.jpg","path":"images/kancolle/no.147 Верный.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.148 Musashi_Kai 武藏改.jpg","path":"images/kancolle/no.148 Musashi_Kai 武藏改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.149 Kongou_Kai_Ni 金刚改二.jpg","path":"images/kancolle/no.149 Kongou_Kai_Ni 金刚改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.15 Murakumo 叢雲.jpg","path":"images/kancolle/no.15 Murakumo 叢雲.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.150 Hiei_Kai_Ni 比叡改二.jpg","path":"images/kancolle/no.150 Hiei_Kai_Ni 比叡改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.151 Haruna_Kai_Ni 榛名改二.jpg","path":"images/kancolle/no.151 Haruna_Kai_Ni 榛名改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二.jpg","path":"images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.153 Taihou 大鳯.jpg","path":"images/kancolle/no.153 Taihou 大鳯.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.155  I_401 伊401.jpg","path":"images/kancolle/no.155  I_401 伊401.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.155 I_401_Kai 伊401 改.jpg","path":"images/kancolle/no.155 I_401_Kai 伊401 改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.156 Taihou_Kai 大鳯改.jpg","path":"images/kancolle/no.156 Taihou_Kai 大鳯改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二.jpg","path":"images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二.jpg","path":"images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.16 Isonami 磯波.jpg","path":"images/kancolle/no.16 Isonami 磯波.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.16 Isonami_Kai 磯波改.jpg","path":"images/kancolle/no.16 Isonami_Kai 磯波改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.160 Naka_Kai_Ni 那珂改二.jpg","path":"images/kancolle/no.160 Naka_Kai_Ni 那珂改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.161 Akitsumaru 秋津丸.jpg","path":"images/kancolle/no.161 Akitsumaru 秋津丸.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.163 Maruyu_Kai まるゆ改.jpg","path":"images/kancolle/no.163 Maruyu_Kai まるゆ改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.163 Maruyu まるゆ.jpg","path":"images/kancolle/no.163 Maruyu まるゆ.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.164 Yayoi_Kai 弥生改.jpg","path":"images/kancolle/no.164 Yayoi_Kai 弥生改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.164 Yayoi 弥生.jpg","path":"images/kancolle/no.164 Yayoi 弥生.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki 卯月.jpg","path":"images/kancolle/no.165 Uzuki 卯月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki_Kai 卯月改.jpg","path":"images/kancolle/no.165 Uzuki_Kai 卯月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.166 Akitsumaru_Kai 秋津丸改.jpg","path":"images/kancolle/no.166 Akitsumaru_Kai 秋津丸改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.167 Isokaze 磯風.jpg","path":"images/kancolle/no.167 Isokaze 磯風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.167 Isokaze_Kai no.167 Isokaze 磯風改.jpg","path":"images/kancolle/no.167 Isokaze_Kai no.167 Isokaze 磯風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.168 Urakaze 浦風.jpg","path":"images/kancolle/no.168 Urakaze 浦風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.168 Urakaze_Kai 浦風改.jpg","path":"images/kancolle/no.168 Urakaze_Kai 浦風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.169 Tanikaze 谷風.jpg","path":"images/kancolle/no.169 Tanikaze 谷風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.17 Ayanami 綾波.jpg","path":"images/kancolle/no.17 Ayanami 綾波.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.17 Ayanami_Kai 綾波改.jpg","path":"images/kancolle/no.17 Ayanami_Kai 綾波改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.170 Hamakaze 浜風.jpg","path":"images/kancolle/no.170 Hamakaze 浜風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.170 Hamakaze_Kai 浜風改.jpg","path":"images/kancolle/no.170 Hamakaze_Kai 浜風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.171 Bismarck 俾斯麦.jpg","path":"images/kancolle/no.171 Bismarck 俾斯麦.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei.jpg","path":"images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei.jpg","path":"images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei.jpg","path":"images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.18 Shikinami 敷波.jpg","path":"images/kancolle/no.18 Shikinami 敷波.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.18 Shikinami_Kai 敷波改.jpg","path":"images/kancolle/no.18 Shikinami_Kai 敷波改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei.jpg","path":"images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze 天津風.jpg","path":"images/kancolle/no.181 Amatsukaze 天津風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze_Kai 天津風改.jpg","path":"images/kancolle/no.181 Amatsukaze_Kai 天津風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.182 Akashi 明石.jpg","path":"images/kancolle/no.182 Akashi 明石.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.183b Ooyodo_Kai大淀改.jpg","path":"images/kancolle/no.183b Ooyodo_Kai大淀改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.184 Taigei 大鯨.jpg","path":"images/kancolle/no.184 Taigei 大鯨.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.186 Tokitsukaze 時津風.jpg","path":"images/kancolle/no.186 Tokitsukaze 時津風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.186 Tokitsukaze_Kai 時津風.jpg","path":"images/kancolle/no.186 Tokitsukaze_Kai 時津風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.187 Akashi_Kai 明石改.jpg","path":"images/kancolle/no.187 Akashi_Kai 明石改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.188 Tone_Kai_Ni 利根改二.jpg","path":"images/kancolle/no.188 Tone_Kai_Ni 利根改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二.jpg","path":"images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.190 Ryuuhou_Kai 龍鳯改.jpg","path":"images/kancolle/no.190 Ryuuhou_Kai 龍鳯改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二.jpg","path":"images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二.jpg","path":"images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二.jpg","path":"images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二.jpg","path":"images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.2 Mutsu 陆奥.jpg","path":"images/kancolle/no.2 Mutsu 陆奥.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.2 Mutsu_Kai 陆奥改.jpg","path":"images/kancolle/no.2 Mutsu_Kai 陆奥改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二.jpg","path":"images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.205 Harusame 春雨.jpg","path":"images/kancolle/no.205 Harusame 春雨.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二.jpg","path":"images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.209 Hayashimo 早霜.jpg","path":"images/kancolle/no.209 Hayashimo 早霜.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.209 Hayashimo_Kai 早霜改.jpg","path":"images/kancolle/no.209 Hayashimo_Kai 早霜改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.21 Kongou_Kai 金刚改.jpg","path":"images/kancolle/no.21 Kongou_Kai 金刚改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.21 Kongou 金刚.jpg","path":"images/kancolle/no.21 Kongou 金刚.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.210 Kiyoshimo 清霜.jpg","path":"images/kancolle/no.210 Kiyoshimo 清霜.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.210 Kiyoshimo_Kai 清霜改.jpg","path":"images/kancolle/no.210 Kiyoshimo_Kai 清霜改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二 立绘.jpg","path":"images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二 立绘.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.22 Hiei 比叡.jpg","path":"images/kancolle/no.22 Hiei 比叡.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.22 Hiei_Kai 比叡改.jpg","path":"images/kancolle/no.22 Hiei_Kai 比叡改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.23 Haruna 榛名.jpg","path":"images/kancolle/no.23 Haruna 榛名.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.23 Haruna_Kai 榛名改.jpg","path":"images/kancolle/no.23 Haruna_Kai 榛名改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.24 Kirishima 雾岛.jpg","path":"images/kancolle/no.24 Kirishima 雾岛.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.24 Kirishima_Kai 雾岛改.jpg","path":"images/kancolle/no.24 Kirishima_Kai 雾岛改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.25 Houshou_Kai 鳯翔改.jpg","path":"images/kancolle/no.25 Houshou_Kai 鳯翔改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.25 Houshou 鳯翔.jpg","path":"images/kancolle/no.25 Houshou 鳯翔.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou 扶桑.jpg","path":"images/kancolle/no.26 Fusou 扶桑.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro 山城.jpg","path":"images/kancolle/no.27 Yamashiro 山城.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou_Kai 扶桑改.jpg","path":"images/kancolle/no.26 Fusou_Kai 扶桑改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro_Kai 山城改.jpg","path":"images/kancolle/no.27 Yamashiro_Kai 山城改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.28 Tenryuu_Kai 天龍改.jpg","path":"images/kancolle/no.28 Tenryuu_Kai 天龍改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.28 Tenryuu 天龍.jpg","path":"images/kancolle/no.28 Tenryuu 天龍.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.29 Tatsuta 龍田.jpg","path":"images/kancolle/no.29 Tatsuta 龍田.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.29 Tatsuta_Kai 龍田改.jpg","path":"images/kancolle/no.29 Tatsuta_Kai 龍田改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.3 Ise 伊势.jpg","path":"images/kancolle/no.3 Ise 伊势.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou 龍驤.jpg","path":"images/kancolle/no.30 Ryuujou 龍驤.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou_Kai 龍驤改-2.jpg","path":"images/kancolle/no.30 Ryuujou_Kai 龍驤改-2.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou_Kai 龍驤改.jpg","path":"images/kancolle/no.30 Ryuujou_Kai 龍驤改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.31 Mutsuki 睦月.jpg","path":"images/kancolle/no.31 Mutsuki 睦月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.32 Kisaragi 如月.jpg","path":"images/kancolle/no.32 Kisaragi 如月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.33 Satsuki 皐月.jpg","path":"images/kancolle/no.33 Satsuki 皐月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.34 Fumizuki 文月.jpg","path":"images/kancolle/no.34 Fumizuki 文月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.35 Nagatsuki 長月.jpg","path":"images/kancolle/no.35 Nagatsuki 長月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.35 Nagatsuki_Kai 長月改.jpg","path":"images/kancolle/no.35 Nagatsuki_Kai 長月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.36 Kikuzuki 菊月.jpg","path":"images/kancolle/no.36 Kikuzuki 菊月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.37 Mikazuki 三日月.jpg","path":"images/kancolle/no.37 Mikazuki 三日月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.38 Mochizuki 望月.jpg","path":"images/kancolle/no.38 Mochizuki 望月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.39 Kuma 球磨.jpg","path":"images/kancolle/no.39 Kuma 球磨.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.40 Tama 多摩.jpg","path":"images/kancolle/no.40 Tama 多摩.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.41 Kiso 木曽.jpg","path":"images/kancolle/no.41 Kiso 木曽.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara 長良.jpg","path":"images/kancolle/no.42 Nagara 長良.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara_Kai 長良改.jpg","path":"images/kancolle/no.42 Nagara_Kai 長良改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.43 Isuzu 五十鈴.jpg","path":"images/kancolle/no.43 Isuzu 五十鈴.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.43 Isuzu_Kai 五十鈴改.jpg","path":"images/kancolle/no.43 Isuzu_Kai 五十鈴改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.44 Natori 名取.jpg","path":"images/kancolle/no.44 Natori 名取.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.45 Yura_Kai 由良改.jpg","path":"images/kancolle/no.45 Yura_Kai 由良改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.45 Yura 由良.jpg","path":"images/kancolle/no.45 Yura 由良.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.47 Jintsuu 神通.jpg","path":"images/kancolle/no.47 Jintsuu 神通.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.48 Cristmas_Naka 圣诞那珂.jpg","path":"images/kancolle/no.48 Cristmas_Naka 圣诞那珂.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.48 Naka 那珂.jpg","path":"images/kancolle/no.48 Naka 那珂.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.49 Chitose 千歳.jpg","path":"images/kancolle/no.49 Chitose 千歳.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.5 Yukikaze 雪風.jpg","path":"images/kancolle/no.5 Yukikaze 雪風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.5 Yukikaze_Kai 雪風改.jpg","path":"images/kancolle/no.5 Yukikaze_Kai 雪風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.50 Chiyoda 千代田.jpg","path":"images/kancolle/no.50 Chiyoda 千代田.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.51 Mogami 最上.jpg","path":"images/kancolle/no.51 Mogami 最上.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.52 Furutaka 古鹰.jpg","path":"images/kancolle/no.52 Furutaka 古鹰.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.53 Kako 加古.jpg","path":"images/kancolle/no.53 Kako 加古.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.54 Aoba 青葉.jpg","path":"images/kancolle/no.54 Aoba 青葉.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.55  Myoukou 妙高.jpg","path":"images/kancolle/no.55  Myoukou 妙高.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.56 Nachi 那智.jpg","path":"images/kancolle/no.56 Nachi 那智.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.57 Ashigara_Kai 足柄改.jpg","path":"images/kancolle/no.57 Ashigara_Kai 足柄改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.58 Haguro 羽黑.jpg","path":"images/kancolle/no.58 Haguro 羽黑.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.57 Ashigara 足柄.jpg","path":"images/kancolle/no.57 Ashigara 足柄.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.58 Haguro_Kai 羽黑改.jpg","path":"images/kancolle/no.58 Haguro_Kai 羽黑改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.59 Takao 高雄.jpg","path":"images/kancolle/no.59 Takao 高雄.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.6 Akagi 赤城.jpg","path":"images/kancolle/no.6 Akagi 赤城.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.60 Atago_Kai 爱宕改.jpg","path":"images/kancolle/no.60 Atago_Kai 爱宕改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.60 Atago 爱宕.jpg","path":"images/kancolle/no.60 Atago 爱宕.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.61 Maya 摩耶.jpg","path":"images/kancolle/no.61 Maya 摩耶.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.62 Choukai 鳥海.jpg","path":"images/kancolle/no.62 Choukai 鳥海.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.63 Tone 利根.jpg","path":"images/kancolle/no.63 Tone 利根.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.64 Chikuma_Kai 筑摩改.jpg","path":"images/kancolle/no.64 Chikuma_Kai 筑摩改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou_Kai 飛鷹改-2.jpg","path":"images/kancolle/no.65 Hiyou_Kai 飛鷹改-2.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou_Kai 飛鷹改.jpg","path":"images/kancolle/no.65 Hiyou_Kai 飛鷹改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.67 Oboro 朧.jpg","path":"images/kancolle/no.67 Oboro 朧.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.69 Akebono_Kai 曙改.jpg","path":"images/kancolle/no.69 Akebono_Kai 曙改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.69 Sazanami_Kai 漣改.jpg","path":"images/kancolle/no.69 Sazanami_Kai 漣改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.7 Kaga 加賀.jpg","path":"images/kancolle/no.7 Kaga 加賀.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.7 Kaga_Kai 加賀改.jpg","path":"images/kancolle/no.7 Kaga_Kai 加賀改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.69 Sazanami 漣.jpg","path":"images/kancolle/no.69 Sazanami 漣.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.70 Ushio 潮.jpg","path":"images/kancolle/no.70 Ushio 潮.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.72 Hibiki 響.jpg","path":"images/kancolle/no.72 Hibiki 響.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.71 Akatsuki 暁.jpg","path":"images/kancolle/no.71 Akatsuki 暁.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.73 Ikazuchi 雷.jpg","path":"images/kancolle/no.73 Ikazuchi 雷.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.74 Inazuma 電.jpg","path":"images/kancolle/no.74 Inazuma 電.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.75 Hatsuharu_Kai 初春改.jpg","path":"images/kancolle/no.75 Hatsuharu_Kai 初春改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.75 Hatsuharu 初春.jpg","path":"images/kancolle/no.75 Hatsuharu 初春.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.76 Nenohi 子日.jpg","path":"images/kancolle/no.76 Nenohi 子日.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.76 Nenohi_Kai 子日改.jpg","path":"images/kancolle/no.76 Nenohi_Kai 子日改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.77 Wakaba 若葉.jpg","path":"images/kancolle/no.77 Wakaba 若葉.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.77 Wakaba_Kai 若葉改.jpg","path":"images/kancolle/no.77 Wakaba_Kai 若葉改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.78 Hatsushimo 初霜.jpg","path":"images/kancolle/no.78 Hatsushimo 初霜.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu 白露.jpg","path":"images/kancolle/no.79 Shiratsuyu 白露.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu_Kai 白露改.jpg","path":"images/kancolle/no.79 Shiratsuyu_Kai 白露改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.8 Souryuu 蒼龍.jpg","path":"images/kancolle/no.8 Souryuu 蒼龍.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.8 Souryuu_Kai 蒼龍改.jpg","path":"images/kancolle/no.8 Souryuu_Kai 蒼龍改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.80 Shigure_Kai 時雨改.jpg","path":"images/kancolle/no.80 Shigure_Kai 時雨改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.80 Shigure 時雨.jpg","path":"images/kancolle/no.80 Shigure 時雨.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame_Kai 村雨改.jpg","path":"images/kancolle/no.81 Murasame_Kai 村雨改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame 村雨.jpg","path":"images/kancolle/no.81 Murasame 村雨.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.82 Yuudaichi 夕立.jpg","path":"images/kancolle/no.82 Yuudaichi 夕立.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.83 Samidare 五月雨.jpg","path":"images/kancolle/no.83 Samidare 五月雨.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.83 Samidare_Kai 五月雨改.jpg","path":"images/kancolle/no.83 Samidare_Kai 五月雨改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.84 Suzukaze 涼风.jpg","path":"images/kancolle/no.84 Suzukaze 涼风.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.85 Asashio 朝潮.jpg","path":"images/kancolle/no.85 Asashio 朝潮.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.86 Ooshio 大潮.jpg","path":"images/kancolle/no.86 Ooshio 大潮.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.87 Michishio 満潮.jpg","path":"images/kancolle/no.87 Michishio 満潮.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.88 Arashio 荒潮.jpg","path":"images/kancolle/no.88 Arashio 荒潮.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.88 Arashio_Kai 荒潮改.jpg","path":"images/kancolle/no.88 Arashio_Kai 荒潮改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.89 Arare 霰.jpg","path":"images/kancolle/no.89 Arare 霰.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.89 Arare_Kai 霰改.jpg","path":"images/kancolle/no.89 Arare_Kai 霰改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.9 Hiryuu 飛龍.jpg","path":"images/kancolle/no.9 Hiryuu 飛龍.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.9 Hiryuu_Kai 飛龍改.jpg","path":"images/kancolle/no.9 Hiryuu_Kai 飛龍改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.90 Kasumi 霞.jpg","path":"images/kancolle/no.90 Kasumi 霞.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.91 Kagerou 陽炎.jpg","path":"images/kancolle/no.91 Kagerou 陽炎.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.92 Shiranui 不知火.jpg","path":"images/kancolle/no.92 Shiranui 不知火.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.93 Kuroshio 黑潮.jpg","path":"images/kancolle/no.93 Kuroshio 黑潮.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.94 Shouhou 祥鳯.jpg","path":"images/kancolle/no.94 Shouhou 祥鳯.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.95 Chitose_Kai 千歳改.jpg","path":"images/kancolle/no.95 Chitose_Kai 千歳改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.96 Chiyoda_Kai 千代田改.jpg","path":"images/kancolle/no.96 Chiyoda_Kai 千代田改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.97 Ooi_Kai 大井改.jpg","path":"images/kancolle/no.97 Ooi_Kai 大井改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.98 Kitakami_Kai 北上改.jpg","path":"images/kancolle/no.98 Kitakami_Kai 北上改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.99 Chitose_A 千歳甲.jpg","path":"images/kancolle/no.99 Chitose_A 千歳甲.jpg","modified":1,"renderable":1},{"_id":"source/img/kccode.png","path":"img/kccode.png","modified":1,"renderable":0},{"_id":"source/img/opipv6.png","path":"img/opipv6.png","modified":1,"renderable":0},{"_id":"source/img/vpnl2tp.png","path":"img/vpnl2tp.png","modified":1,"renderable":0},{"_id":"source/img/vltest.png","path":"img/vltest.png","modified":1,"renderable":0},{"_id":"themes/morris/source/images/lovelive/eri1.png","path":"images/lovelive/eri1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/eri2.png","path":"images/lovelive/eri2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/eri3.png","path":"images/lovelive/eri3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/hanayo2.png","path":"images/lovelive/hanayo2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/hanayo3.png","path":"images/lovelive/hanayo3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/honoka1.png","path":"images/lovelive/honoka1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/hanayo1.png","path":"images/lovelive/hanayo1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/honoka3.png","path":"images/lovelive/honoka3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/honoka2.png","path":"images/lovelive/honoka2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/kotori1.png","path":"images/lovelive/kotori1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/kotori2.png","path":"images/lovelive/kotori2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/maki1.png","path":"images/lovelive/maki1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/maki2.png","path":"images/lovelive/maki2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/maki3.png","path":"images/lovelive/maki3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/nico1.png","path":"images/lovelive/nico1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/nozomi1.png","path":"images/lovelive/nozomi1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/nico3.png","path":"images/lovelive/nico3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/nico2.png","path":"images/lovelive/nico2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/nozomi2.png","path":"images/lovelive/nozomi2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/rin3.png","path":"images/lovelive/rin3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/rin2.png","path":"images/lovelive/rin2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/rin1.png","path":"images/lovelive/rin1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/umi3.png","path":"images/lovelive/umi3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/umi2.png","path":"images/lovelive/umi2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/umi1.png","path":"images/lovelive/umi1.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 妖精 2号娘.png","path":"images/kancolle/NPC 妖精 2号娘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 給糧艦 Irako 伊良湖.png","path":"images/kancolle/NPC 給糧艦 Irako 伊良湖.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 妖精 4号娘.png","path":"images/kancolle/NPC 妖精 4号娘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 罗盘娘 Compass 2号.png","path":"images/kancolle/NPC 罗盘娘 Compass 2号.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 罗盘娘 Compass 3号.png","path":"images/kancolle/NPC 罗盘娘 Compass 3号.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 罗盘娘 Compass 1号.png","path":"images/kancolle/NPC 罗盘娘 Compass 1号.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.1 Nagato_Kai 長門改.jpg","path":"images/kancolle/no.1 Nagato_Kai 長門改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.104 Chitose_Carrier_Kai 千歳航改.jpg","path":"images/kancolle/no.104 Chitose_Carrier_Kai 千歳航改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.106 Shoukaku 翔鶴.jpg","path":"images/kancolle/no.106 Shoukaku 翔鶴.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.106 Shoukaku_Kai 翔鶴改.jpg","path":"images/kancolle/no.106 Shoukaku_Kai 翔鶴改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.109 Kinu_Kai 鬼怒改.jpg","path":"images/kancolle/no.109 Kinu_Kai 鬼怒改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.110 Abukuma 阿武隈.jpg","path":"images/kancolle/no.110 Abukuma 阿武隈.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.111 Yuubari 夕張.jpg","path":"images/kancolle/no.111 Yuubari 夕張.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.112 Zuihou 瑞鳯.jpg","path":"images/kancolle/no.112 Zuihou 瑞鳯.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.119 Maikaze 舞風.jpg","path":"images/kancolle/no.119 Maikaze 舞風.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.11Fubuki_Kai 吹雪改.jpg","path":"images/kancolle/no.11Fubuki_Kai 吹雪改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.119 Maikaze_Kai 舞風改.jpg","path":"images/kancolle/no.119 Maikaze_Kai 舞風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.12 Shirayuki_Kai 白雪改.jpg","path":"images/kancolle/no.12 Shirayuki_Kai 白雪改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.120 Kinugasa_Kai 衣笠改.jpg","path":"images/kancolle/no.120 Kinugasa_Kai 衣笠改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.126 I_168_Kai 伊168改.jpg","path":"images/kancolle/no.126 I_168_Kai 伊168改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.127 I_58_Kai 伊58改.jpg","path":"images/kancolle/no.127 I_58_Kai 伊58改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.15 Murakumo_Kai 叢雲改.jpg","path":"images/kancolle/no.15 Murakumo_Kai 叢雲改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.158 Sendai_Kai_Ni 川内改二.jpg","path":"images/kancolle/no.158 Sendai_Kai_Ni 川内改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.169 Tanikaze_Kai 谷風改.jpg","path":"images/kancolle/no.169 Tanikaze_Kai 谷風改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.176 Prinz_Eugen 欧根亲王.jpg","path":"images/kancolle/no.176 Prinz_Eugen 欧根亲王.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改.jpg","path":"images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.183a Ooyodo 大淀.jpg","path":"images/kancolle/no.183a Ooyodo 大淀.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.185 Ryuuhou 龍鳯.jpg","path":"images/kancolle/no.185 Ryuuhou 龍鳯.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.19 Ooi 大井.jpg","path":"images/kancolle/no.19 Ooi 大井.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二.jpg","path":"images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.20 Kitakami 北上.jpg","path":"images/kancolle/no.20 Kitakami 北上.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.201 Unryuu 雲龍.jpg","path":"images/kancolle/no.201 Unryuu 雲龍.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.205 Harusame_Kai 春雨改.jpg","path":"images/kancolle/no.205 Harusame_Kai 春雨改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.206 Unryuu_Kai 雲龍改.jpg","path":"images/kancolle/no.206 Unryuu_Kai 雲龍改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.207 Ushio_Kai_Ni潮改二.jpg","path":"images/kancolle/no.207 Ushio_Kai_Ni潮改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo 朝雲.jpg","path":"images/kancolle/no.213 Asagumo 朝雲.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo_Kai 朝雲改.jpg","path":"images/kancolle/no.213 Asagumo_Kai 朝雲改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.215 Nowaki_Kai 野分改.jpg","path":"images/kancolle/no.215 Nowaki_Kai 野分改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.215 Nowaki 野分.jpg","path":"images/kancolle/no.215 Nowaki 野分.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.221 Akizuki 秋月.jpg","path":"images/kancolle/no.221 Akizuki 秋月.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.221 Akizuki_Kai 秋月改.jpg","path":"images/kancolle/no.221 Akizuki_Kai 秋月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.31 Mutsuki_Kai 睦月改.jpg","path":"images/kancolle/no.31 Mutsuki_Kai 睦月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.32 Kisaragi_Kai 如月改.jpg","path":"images/kancolle/no.32 Kisaragi_Kai 如月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.33 Satsuki_Kai 皐月改.jpg","path":"images/kancolle/no.33 Satsuki_Kai 皐月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.34 Fumizuki_Kai 文月改.jpg","path":"images/kancolle/no.34 Fumizuki_Kai 文月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.36 Kikuzuki_Kai 菊月改.jpg","path":"images/kancolle/no.36 Kikuzuki_Kai 菊月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.37 Mikazuki_Kai 三日月改.jpg","path":"images/kancolle/no.37 Mikazuki_Kai 三日月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.39 Kuma_Kai 球磨改.jpg","path":"images/kancolle/no.39 Kuma_Kai 球磨改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.38 Mochizuki_Kai 望月改.jpg","path":"images/kancolle/no.38 Mochizuki_Kai 望月改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.4 Hyuuga 日向.jpg","path":"images/kancolle/no.4 Hyuuga 日向.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.40 Tama_Kai 多摩改.jpg","path":"images/kancolle/no.40 Tama_Kai 多摩改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.41 Kiso_Kai 木曽改.jpg","path":"images/kancolle/no.41 Kiso_Kai 木曽改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.44 Natori_Kai 名取改.jpg","path":"images/kancolle/no.44 Natori_Kai 名取改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.46 Sendai_Kai 川内改.jpg","path":"images/kancolle/no.46 Sendai_Kai 川内改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.46 Sendai 川内.jpg","path":"images/kancolle/no.46 Sendai 川内.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.47 Jintsuu_Kai 神通改.jpg","path":"images/kancolle/no.47 Jintsuu_Kai 神通改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.48 Naka_Kai 那珂改.jpg","path":"images/kancolle/no.48 Naka_Kai 那珂改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.52 Furutaka_Kai 古鹰改.jpg","path":"images/kancolle/no.52 Furutaka_Kai 古鹰改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.53 Kako_Kai 加古改.jpg","path":"images/kancolle/no.53 Kako_Kai 加古改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.54 Aoba_Kai 青葉改.jpg","path":"images/kancolle/no.54 Aoba_Kai 青葉改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.55 Myoukou_Kai 妙高改.jpg","path":"images/kancolle/no.55 Myoukou_Kai 妙高改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.56 Nachi_Kai 那智改.jpg","path":"images/kancolle/no.56 Nachi_Kai 那智改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.59 Takao_Kai 高雄改.jpg","path":"images/kancolle/no.59 Takao_Kai 高雄改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.6 Akagi_Kai 赤城改.jpg","path":"images/kancolle/no.6 Akagi_Kai 赤城改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.61 Maya_Kai 摩耶改.jpg","path":"images/kancolle/no.61 Maya_Kai 摩耶改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.62 Choukai_Kai 鳥海改.jpg","path":"images/kancolle/no.62 Choukai_Kai 鳥海改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.63 Tone_Kai 利根改.jpg","path":"images/kancolle/no.63 Tone_Kai 利根改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.64 Chikuma 筑摩.jpg","path":"images/kancolle/no.64 Chikuma 筑摩.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou 飛鷹.jpg","path":"images/kancolle/no.65 Hiyou 飛鷹.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.66 Junyou 隼鷹.jpg","path":"images/kancolle/no.66 Junyou 隼鷹.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.67 Oboro_Kai 朧改.jpg","path":"images/kancolle/no.67 Oboro_Kai 朧改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.68 Akebono 曙.jpg","path":"images/kancolle/no.68 Akebono 曙.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.66 Junyou_Kai 隼鷹改.jpg","path":"images/kancolle/no.66 Junyou_Kai 隼鷹改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.71 Akatsuki_Kai 暁改.jpg","path":"images/kancolle/no.71 Akatsuki_Kai 暁改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.70 Ushio_Kai 潮改.jpg","path":"images/kancolle/no.70 Ushio_Kai 潮改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.72 Hibiki_Kai 響改.jpg","path":"images/kancolle/no.72 Hibiki_Kai 響改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.73 Ikazuchi_Kai 雷改.jpg","path":"images/kancolle/no.73 Ikazuchi_Kai 雷改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.74 Inazuma_Kai 電.jpg","path":"images/kancolle/no.74 Inazuma_Kai 電.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.78 Hatsushimo_Kai 初霜改.jpg","path":"images/kancolle/no.78 Hatsushimo_Kai 初霜改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.82 Yuudaichi_Kai 夕立改.jpg","path":"images/kancolle/no.82 Yuudaichi_Kai 夕立改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.84 Suzukaze_Kai涼风改.jpg","path":"images/kancolle/no.84 Suzukaze_Kai涼风改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.85 Asashio_Kai 朝潮改.jpg","path":"images/kancolle/no.85 Asashio_Kai 朝潮改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.87 Michishio_Kai 満潮.jpg","path":"images/kancolle/no.87 Michishio_Kai 満潮.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.86 Ooshio_Kai 大潮.jpg","path":"images/kancolle/no.86 Ooshio_Kai 大潮.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.90 Kasumi_Kai 霞改.jpg","path":"images/kancolle/no.90 Kasumi_Kai 霞改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.91 Kagerou_Kai 陽炎改.jpg","path":"images/kancolle/no.91 Kagerou_Kai 陽炎改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.92 Shiranui_Kai 不知火改.jpg","path":"images/kancolle/no.92 Shiranui_Kai 不知火改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.93 Kuroshio_Kai 黑潮改.jpg","path":"images/kancolle/no.93 Kuroshio_Kai 黑潮改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.94 Shouhou_Kai 祥鳯改.jpg","path":"images/kancolle/no.94 Shouhou_Kai 祥鳯改.jpg","modified":1,"renderable":1},{"_id":"source/img/terbanner.png","path":"img/terbanner.png","modified":1,"renderable":0},{"_id":"source/img/vpnmanager.png","path":"img/vpnmanager.png","modified":1,"renderable":0},{"_id":"source/img/vpnovpn.png","path":"img/vpnovpn.png","modified":1,"renderable":0},{"_id":"themes/morris/source/css/fonts/NotoSans/LICENSE_OFL.txt","path":"css/fonts/NotoSans/LICENSE_OFL.txt","modified":1,"renderable":1},{"_id":"themes/morris/source/css/images/banner''.jpg","path":"css/images/banner''.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/kotori3.png","path":"images/lovelive/kotori3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/lovelive/nozomi3.png","path":"images/lovelive/nozomi3.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.158 Sendai_Kai_Ni 川内改二 中破.png","path":"images/kancolle/no.158 Sendai_Kai_Ni 川内改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.161 Akitsumaru 秋津丸 中破.png","path":"images/kancolle/no.161 Akitsumaru 秋津丸 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.160 Naka_Kai_Ni 那珂改二 中破.png","path":"images/kancolle/no.160 Naka_Kai_Ni 那珂改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.161 Akitsumaru 秋津丸 立绘.png","path":"images/kancolle/no.161 Akitsumaru 秋津丸 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.163 Maruyu まるゆ 中破.png","path":"images/kancolle/no.163 Maruyu まるゆ 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.163 Maruyu まるゆ 立绘.png","path":"images/kancolle/no.163 Maruyu まるゆ 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.172 Bismarck_Kai 俾斯麦改.png","path":"images/kancolle/no.172 Bismarck_Kai 俾斯麦改.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.174 Z1_Leberecht_Maass Z1.jpg","path":"images/kancolle/no.174 Z1_Leberecht_Maass Z1.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.174 Z1_Leberecht_Maass_Kai Z1改.jpg","path":"images/kancolle/no.174 Z1_Leberecht_Maass_Kai Z1改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.175 Z3_Max_Schultz Z3.jpg","path":"images/kancolle/no.175 Z3_Max_Schultz Z3.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.175 Z3_Max_Schultz_Kai Z3改.jpg","path":"images/kancolle/no.175 Z3_Max_Schultz_Kai Z3改.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.188 Tone_Kai_Ni 利根改二 中破.png","path":"images/kancolle/no.188 Tone_Kai_Ni 利根改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二 中破.png","path":"images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二 中破.png","path":"images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二 中破.jpg","path":"images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二 中破.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二.jpg","path":"images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.48 Cristmas_Naka 圣诞那珂 中破.png","path":"images/kancolle/no.48 Cristmas_Naka 圣诞那珂 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.58 Haguro 羽黑 中破.png","path":"images/kancolle/no.58 Haguro 羽黑 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.58 Haguro 羽黑 立绘.png","path":"images/kancolle/no.58 Haguro 羽黑 立绘.png","modified":1,"renderable":1},{"_id":"source/img/dubanner.png","path":"img/dubanner.png","modified":1,"renderable":0},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.woff2","path":"css/fonts/FontAwesome/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.woff","path":"css/fonts/FontAwesome/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 任务娘 Quest 大淀.png","path":"images/kancolle/NPC 任务娘 Quest 大淀.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 罗盘娘 Compass 4号.png","path":"images/kancolle/NPC 罗盘娘 Compass 4号.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.114 Ooi_Kai_Ni 大井改二 中破.png","path":"images/kancolle/no.114 Ooi_Kai_Ni 大井改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.115 Kitakami_Kai_Ni 北上改二 中破.png","path":"images/kancolle/no.115 Kitakami_Kai_Ni 北上改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.123 I_19 伊19 立绘.png","path":"images/kancolle/no.123 I_19 伊19 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.130 Kumano_Kai 熊野改 中破.png","path":"images/kancolle/no.130 Kumano_Kai 熊野改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.145 Shigure_Kai_Ni 時雨改二 中破.png","path":"images/kancolle/no.145 Shigure_Kai_Ni 時雨改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.155  I_401 伊401 立绘.png","path":"images/kancolle/no.155  I_401 伊401 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.155  I_401 伊401 中破.png","path":"images/kancolle/no.155  I_401 伊401 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二 中破.png","path":"images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二 中破.png","path":"images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.164 Yayoi 弥生 中破.png","path":"images/kancolle/no.164 Yayoi 弥生 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.166 Akitsumaru_Kai 秋津丸改 中破.png","path":"images/kancolle/no.166 Akitsumaru_Kai 秋津丸改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.169 Tanikaze 谷風 中破.png","path":"images/kancolle/no.169 Tanikaze 谷風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.170 Hamakaze 浜風 中破.png","path":"images/kancolle/no.170 Hamakaze 浜風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.174 Z1_Leberecht_Maass Z1 中破.png","path":"images/kancolle/no.174 Z1_Leberecht_Maass Z1 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.174 Z1_Leberecht_Maass Z1 立绘.png","path":"images/kancolle/no.174 Z1_Leberecht_Maass Z1 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.175 Z3_Max_Schultz Z3 中破.png","path":"images/kancolle/no.175 Z3_Max_Schultz Z3 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.175 Z3_Max_Schultz Z3 立绘.png","path":"images/kancolle/no.175 Z3_Max_Schultz Z3 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei 立绘.png","path":"images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei 中破.png","path":"images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei 中破.png","path":"images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei 立绘.png","path":"images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.184 Taigei 大鯨 中破.png","path":"images/kancolle/no.184 Taigei 大鯨 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.184 Taigei 大鯨 立绘.png","path":"images/kancolle/no.184 Taigei 大鯨 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.186 Tokitsukaze 時津風 中破.png","path":"images/kancolle/no.186 Tokitsukaze 時津風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.186 Tokitsukaze 時津風 立绘.png","path":"images/kancolle/no.186 Tokitsukaze 時津風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.19 Ooi 大井 立绘.png","path":"images/kancolle/no.19 Ooi 大井 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.19 Ooi 大井 中破.png","path":"images/kancolle/no.19 Ooi 大井 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二 中破.png","path":"images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.20 Kitakami 北上 中破.png","path":"images/kancolle/no.20 Kitakami 北上 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.20 Kitakami 北上 立绘.png","path":"images/kancolle/no.20 Kitakami 北上 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.207 Ushio_Kai_Ni潮改二 中破.png","path":"images/kancolle/no.207 Ushio_Kai_Ni潮改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.215 Nowaki 野分 立绘.png","path":"images/kancolle/no.215 Nowaki 野分 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.215 Nowaki 野分 中破.png","path":"images/kancolle/no.215 Nowaki 野分 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.221 Akizuki 秋月 中破.png","path":"images/kancolle/no.221 Akizuki 秋月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.25 Houshou 鳯翔 立绘.png","path":"images/kancolle/no.25 Houshou 鳯翔 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.25 Houshou 鳯翔 中破.png","path":"images/kancolle/no.25 Houshou 鳯翔 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou_Kai 龍驤改-2 中破.png","path":"images/kancolle/no.30 Ryuujou_Kai 龍驤改-2 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.40 Tama 多摩 立绘.png","path":"images/kancolle/no.40 Tama 多摩 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.47 Jintsuu 神通 中破.png","path":"images/kancolle/no.47 Jintsuu 神通 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.47 Jintsuu 神通 立绘.png","path":"images/kancolle/no.47 Jintsuu 神通 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.55  Myoukou 妙高 立绘.png","path":"images/kancolle/no.55  Myoukou 妙高 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.56 Nachi 那智 立绘.png","path":"images/kancolle/no.56 Nachi 那智 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.57 Ashigara 足柄 中破.png","path":"images/kancolle/no.57 Ashigara 足柄 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.57 Ashigara 足柄 立绘.png","path":"images/kancolle/no.57 Ashigara 足柄 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.59 Takao 高雄 立绘.png","path":"images/kancolle/no.59 Takao 高雄 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.61 Maya 摩耶 中破.png","path":"images/kancolle/no.61 Maya 摩耶 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.61 Maya 摩耶 立绘.png","path":"images/kancolle/no.61 Maya 摩耶 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.63 Tone 利根 中破.png","path":"images/kancolle/no.63 Tone 利根 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.63 Tone 利根 立绘.png","path":"images/kancolle/no.63 Tone 利根 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.64 Chikuma 筑摩 立绘.png","path":"images/kancolle/no.64 Chikuma 筑摩 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.94 Shouhou 祥鳯 中破.png","path":"images/kancolle/no.94 Shouhou 祥鳯 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.94 Shouhou 祥鳯 立绘.png","path":"images/kancolle/no.94 Shouhou 祥鳯 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.97 Ooi_Kai 大井改 立绘.png","path":"images/kancolle/no.97 Ooi_Kai 大井改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.98 Kitakami_Kai 北上改 中破.png","path":"images/kancolle/no.98 Kitakami_Kai 北上改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.98 Kitakami_Kai 北上改 立绘.png","path":"images/kancolle/no.98 Kitakami_Kai 北上改 立绘.png","modified":1,"renderable":1},{"_id":"source/img/kcastore.png","path":"img/kcastore.png","modified":1,"renderable":0},{"_id":"source/img/kcjp.png","path":"img/kcjp.png","modified":1,"renderable":0},{"_id":"source/img/oledpin.png","path":"img/oledpin.png","modified":1,"renderable":0},{"_id":"themes/morris/source/css/fonts/FontAwesome/FontAwesome.otf","path":"css/fonts/FontAwesome/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.eot","path":"css/fonts/FontAwesome/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.ttf","path":"css/fonts/FontAwesome/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 道具屋 Premiumshop 明石.png","path":"images/kancolle/NPC 道具屋 Premiumshop 明石.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.101 Mogami_Kai 最上改 中破.png","path":"images/kancolle/no.101 Mogami_Kai 最上改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.101 Mogami_Kai 最上改 立绘.png","path":"images/kancolle/no.101 Mogami_Kai 最上改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.108 Zuikaku_Kai 瑞鶴改 中破.png","path":"images/kancolle/no.108 Zuikaku_Kai 瑞鶴改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.112 Zuihou 瑞鳯 中破.png","path":"images/kancolle/no.112 Zuihou 瑞鳯 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.113 Zuihou_Kai 瑞鳯改 中破.png","path":"images/kancolle/no.113 Zuihou_Kai 瑞鳯改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.114 Ooi_Kai_Ni 大井改二 立绘.png","path":"images/kancolle/no.114 Ooi_Kai_Ni 大井改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.115 Kitakami_Kai_Ni 北上改二 立绘.png","path":"images/kancolle/no.115 Kitakami_Kai_Ni 北上改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.116 Mikuma 三隈 中破.png","path":"images/kancolle/no.116 Mikuma 三隈 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.116 Mikuma 三隈 立绘.png","path":"images/kancolle/no.116 Mikuma 三隈 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.117 Mikuma_Kai 三隈改 立绘.png","path":"images/kancolle/no.117 Mikuma_Kai 三隈改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.117 Mikuma_Kai 三隈改 中破.png","path":"images/kancolle/no.117 Mikuma_Kai 三隈改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.123 I_19 伊19 中破.png","path":"images/kancolle/no.123 I_19 伊19 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.124 Suzuya 鈴谷 中破.png","path":"images/kancolle/no.124 Suzuya 鈴谷 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.124 Suzuya 鈴谷 立绘.png","path":"images/kancolle/no.124 Suzuya 鈴谷 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.125 Kumano 熊野 立绘.png","path":"images/kancolle/no.125 Kumano 熊野 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.128 I_8 伊8 中破.png","path":"images/kancolle/no.128 I_8 伊8 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.128 I_8 伊8 立绘.png","path":"images/kancolle/no.128 I_8 伊8 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.129 Suzuya_Kai 鈴谷改 立绘.png","path":"images/kancolle/no.129 Suzuya_Kai 鈴谷改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.129 Suzuya_Kai 鈴谷改 中破.png","path":"images/kancolle/no.129 Suzuya_Kai 鈴谷改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.130 Kumano_Kai 熊野改 立绘.png","path":"images/kancolle/no.130 Kumano_Kai 熊野改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二 中破.png","path":"images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二 中破.png","path":"images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.145 Shigure_Kai_Ni 時雨改二 立绘.png","path":"images/kancolle/no.145 Shigure_Kai_Ni 時雨改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.168 Urakaze 浦風 中破.png","path":"images/kancolle/no.168 Urakaze 浦風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.168 Urakaze 浦風 立绘.png","path":"images/kancolle/no.168 Urakaze 浦風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.169 Tanikaze 谷風 立绘.png","path":"images/kancolle/no.169 Tanikaze 谷風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei 中破.png","path":"images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze 天津風 中破.png","path":"images/kancolle/no.181 Amatsukaze 天津風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze_Kai 天津風改 中破.png","path":"images/kancolle/no.181 Amatsukaze_Kai 天津風改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze 天津風 立绘.png","path":"images/kancolle/no.181 Amatsukaze 天津風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze_Kai 天津風改 立绘.png","path":"images/kancolle/no.181 Amatsukaze_Kai 天津風改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.185 Ryuuhou 龍鳯 中破.png","path":"images/kancolle/no.185 Ryuuhou 龍鳯 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.188 Tone_Kai_Ni 利根改二 立绘.png","path":"images/kancolle/no.188 Tone_Kai_Ni 利根改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.190 Ryuuhou_Kai 龍鳯改 中破.png","path":"images/kancolle/no.190 Ryuuhou_Kai 龍鳯改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.205 Harusame 春雨 中破.png","path":"images/kancolle/no.205 Harusame 春雨 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.205 Harusame 春雨 立绘.png","path":"images/kancolle/no.205 Harusame 春雨 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.201 Unryuu 雲龍 中破.png","path":"images/kancolle/no.201 Unryuu 雲龍 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.207 Ushio_Kai_Ni潮改二 立绘.png","path":"images/kancolle/no.207 Ushio_Kai_Ni潮改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二 中破.png","path":"images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo 朝雲 立绘.png","path":"images/kancolle/no.213 Asagumo 朝雲 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo_Kai 朝雲改 立绘.png","path":"images/kancolle/no.213 Asagumo_Kai 朝雲改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.221 Akizuki 秋月 立绘.png","path":"images/kancolle/no.221 Akizuki 秋月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.23 Haruna 榛名 立绘.png","path":"images/kancolle/no.23 Haruna 榛名 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.28 Tenryuu 天龍 中破.png","path":"images/kancolle/no.28 Tenryuu 天龍 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.28 Tenryuu 天龍 立绘.png","path":"images/kancolle/no.28 Tenryuu 天龍 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.29 Tatsuta 龍田 中破.png","path":"images/kancolle/no.29 Tatsuta 龍田 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.29 Tatsuta 龍田 立绘.png","path":"images/kancolle/no.29 Tatsuta 龍田 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.40 Tama 多摩 中破.png","path":"images/kancolle/no.40 Tama 多摩 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.41 Kiso 木曽 中破.png","path":"images/kancolle/no.41 Kiso 木曽 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara 長良 中破.png","path":"images/kancolle/no.42 Nagara 長良 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara 長良 立绘.png","path":"images/kancolle/no.42 Nagara 長良 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara 長良 中破改.png","path":"images/kancolle/no.42 Nagara 長良 中破改.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.44 Natori 名取 立绘.png","path":"images/kancolle/no.44 Natori 名取 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.45 Yura 由良 立绘.png","path":"images/kancolle/no.45 Yura 由良 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.46 Sendai 川内 立绘.png","path":"images/kancolle/no.46 Sendai 川内 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.48 Cristmas_Naka 圣诞那珂 立绘.png","path":"images/kancolle/no.48 Cristmas_Naka 圣诞那珂 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.48 Naka 那珂 中破.png","path":"images/kancolle/no.48 Naka 那珂 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.48 Naka 那珂 立绘.png","path":"images/kancolle/no.48 Naka 那珂 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.49 Chitose 千歳 立绘.png","path":"images/kancolle/no.49 Chitose 千歳 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.50 Chiyoda 千代田 立绘.png","path":"images/kancolle/no.50 Chiyoda 千代田 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.51 Mogami 最上 中破.png","path":"images/kancolle/no.51 Mogami 最上 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.51 Mogami 最上 立绘.png","path":"images/kancolle/no.51 Mogami 最上 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.54 Aoba 青葉 中破.png","path":"images/kancolle/no.54 Aoba 青葉 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.54 Aoba 青葉 立绘.png","path":"images/kancolle/no.54 Aoba 青葉 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.56 Nachi 那智 中破.png","path":"images/kancolle/no.56 Nachi 那智 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.59 Takao 高雄 中破.png","path":"images/kancolle/no.59 Takao 高雄 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.60 Atago 爱宕 立绘.png","path":"images/kancolle/no.60 Atago 爱宕 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.64 Chikuma 筑摩 中破.png","path":"images/kancolle/no.64 Chikuma 筑摩 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame_Kai 村雨改 中破.png","path":"images/kancolle/no.81 Murasame_Kai 村雨改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.95 Chitose_Kai 千歳改 立绘.png","path":"images/kancolle/no.95 Chitose_Kai 千歳改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.97 Ooi_Kai 大井改 中破.png","path":"images/kancolle/no.97 Ooi_Kai 大井改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSans-BoldItalic.ttf","path":"css/fonts/NotoSans/NotoSans-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSans-Bold.ttf","path":"css/fonts/NotoSans/NotoSans-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSans-Italic.ttf","path":"css/fonts/NotoSans/NotoSans-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSansUI-Bold.ttf","path":"css/fonts/NotoSans/NotoSansUI-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSans-Regular.ttf","path":"css/fonts/NotoSans/NotoSans-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSansUI-BoldItalic.ttf","path":"css/fonts/NotoSans/NotoSansUI-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSansUI-Regular.ttf","path":"css/fonts/NotoSans/NotoSansUI-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSansUI-Italic.ttf","path":"css/fonts/NotoSans/NotoSansUI-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/morris/source/js/jquery-ui.js","path":"js/jquery-ui.js","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.1 Nagato 長門 立绘.png","path":"images/kancolle/no.1 Nagato 長門 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.10 Shimakaze 岛風 中破.png","path":"images/kancolle/no.10 Shimakaze 岛風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.10 Shimakaze 岛風 立绘.png","path":"images/kancolle/no.10 Shimakaze 岛風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.103 Hyuuga_Kai 日向改 中破.png","path":"images/kancolle/no.103 Hyuuga_Kai 日向改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.103 Hyuuga_Kai 日向改 立绘.png","path":"images/kancolle/no.103 Hyuuga_Kai 日向改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.109 Kinu 鬼怒 中破.png","path":"images/kancolle/no.109 Kinu 鬼怒 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.109 Kinu 鬼怒 立绘.png","path":"images/kancolle/no.109 Kinu 鬼怒 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.110 Abukuma 阿武隈 中破.png","path":"images/kancolle/no.110 Abukuma 阿武隈 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.110 Abukuma 阿武隈 立绘.png","path":"images/kancolle/no.110 Abukuma 阿武隈 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.111 Yuubari 夕張 立绘.png","path":"images/kancolle/no.111 Yuubari 夕張 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.113 Zuihou_Kai 瑞鳯改 立绘.png","path":"images/kancolle/no.113 Zuihou_Kai 瑞鳯改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.112 Zuihou 瑞鳯 立绘.png","path":"images/kancolle/no.112 Zuihou 瑞鳯 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.119 Maikaze 舞風 中破.png","path":"images/kancolle/no.119 Maikaze 舞風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.119 Maikaze 舞風 立绘.png","path":"images/kancolle/no.119 Maikaze 舞風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.120 Kinugasa 衣笠 中破.png","path":"images/kancolle/no.120 Kinugasa 衣笠 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.125 Kumano 熊野 中破.png","path":"images/kancolle/no.125 Kumano 熊野 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.133 Yuugumo 夕雲 立绘.png","path":"images/kancolle/no.133 Yuugumo 夕雲 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.135 Naganami 長波 中破.png","path":"images/kancolle/no.135 Naganami 長波 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.135 Naganami 長波 立绘.png","path":"images/kancolle/no.135 Naganami 長波 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.137 Agano 阿賀野 中破.png","path":"images/kancolle/no.137 Agano 阿賀野 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.140 Sakawa 酒匂 中破.png","path":"images/kancolle/no.140 Sakawa 酒匂 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.140 Sakawa 酒匂 立绘.png","path":"images/kancolle/no.140 Sakawa 酒匂 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二 立绘.png","path":"images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.143 Musashi 武藏 中破.png","path":"images/kancolle/no.143 Musashi 武藏 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二 立绘.png","path":"images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.149 Kongou_Kai_Ni 金刚改二 中破.png","path":"images/kancolle/no.149 Kongou_Kai_Ni 金刚改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.148 Musashi_Kai 武藏改 中破.png","path":"images/kancolle/no.148 Musashi_Kai 武藏改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.150 Hiei_Kai_Ni 比叡改二 中破.png","path":"images/kancolle/no.150 Hiei_Kai_Ni 比叡改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.150 Hiei_Kai_Ni 比叡改二 立绘.png","path":"images/kancolle/no.150 Hiei_Kai_Ni 比叡改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二 中破.png","path":"images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.151 Haruna_Kai_Ni 榛名改二 立绘.png","path":"images/kancolle/no.151 Haruna_Kai_Ni 榛名改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.151 Haruna_Kai_Ni 榛名改二 中破.png","path":"images/kancolle/no.151 Haruna_Kai_Ni 榛名改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.153 Taihou 大鳯 中破.png","path":"images/kancolle/no.153 Taihou 大鳯 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.156 Taihou_Kai 大鳯改 中破.png","path":"images/kancolle/no.156 Taihou_Kai 大鳯改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.156 Taihou_Kai 大鳯改 立绘.png","path":"images/kancolle/no.156 Taihou_Kai 大鳯改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.158 Sendai_Kai_Ni 川内改二 立绘.png","path":"images/kancolle/no.158 Sendai_Kai_Ni 川内改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二 立绘.png","path":"images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.160 Naka_Kai_Ni 那珂改二 立绘.png","path":"images/kancolle/no.160 Naka_Kai_Ni 那珂改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.164 Yayoi 弥生 立绘.png","path":"images/kancolle/no.164 Yayoi 弥生 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki 卯月 中破2.png","path":"images/kancolle/no.165 Uzuki 卯月 中破2.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki 卯月 中破.png","path":"images/kancolle/no.165 Uzuki 卯月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki 卯月 立绘.png","path":"images/kancolle/no.165 Uzuki 卯月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.166 Akitsumaru_Kai 秋津丸改 立绘.png","path":"images/kancolle/no.166 Akitsumaru_Kai 秋津丸改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.167 Isokaze 磯風 中破.png","path":"images/kancolle/no.167 Isokaze 磯風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.167 Isokaze 磯風 立绘.png","path":"images/kancolle/no.167 Isokaze 磯風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.176 Prinz_Eugen 欧根亲王 中破.png","path":"images/kancolle/no.176 Prinz_Eugen 欧根亲王 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.176 Prinz_Eugen 欧根亲王 立绘.png","path":"images/kancolle/no.176 Prinz_Eugen 欧根亲王 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改 中破.png","path":"images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改 立绘.png","path":"images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.185 Ryuuhou 龍鳯 立绘.png","path":"images/kancolle/no.185 Ryuuhou 龍鳯 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二 立绘.png","path":"images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二 立绘.png","path":"images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二 立绘.png","path":"images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二 中破.png","path":"images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二 中破.png","path":"images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二 立绘.png","path":"images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二 立绘.png","path":"images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.2 Mutsu 陆奥 立绘.png","path":"images/kancolle/no.2 Mutsu 陆奥 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二 中破.png","path":"images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.2 Mutsu 陆奥 中破.png","path":"images/kancolle/no.2 Mutsu 陆奥 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.206 Unryuu_Kai 雲龍改 中破.png","path":"images/kancolle/no.206 Unryuu_Kai 雲龍改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.209 Hayashimo 早霜 中破.png","path":"images/kancolle/no.209 Hayashimo 早霜 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.209 Hayashimo 早霜 立绘.png","path":"images/kancolle/no.209 Hayashimo 早霜 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.210 Kiyoshimo 清霜 中破.png","path":"images/kancolle/no.210 Kiyoshimo 清霜 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.21 Kongou 金刚 中破.png","path":"images/kancolle/no.21 Kongou 金刚 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.21 Kongou 金刚 立绘.png","path":"images/kancolle/no.21 Kongou 金刚 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.210 Kiyoshimo 清霜 立绘.png","path":"images/kancolle/no.210 Kiyoshimo 清霜 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo 朝雲 中破.png","path":"images/kancolle/no.213 Asagumo 朝雲 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo_Kai 朝雲改 中破.png","path":"images/kancolle/no.213 Asagumo_Kai 朝雲改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.23 Haruna 榛名 中破.png","path":"images/kancolle/no.23 Haruna 榛名 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.24 Kirishima 雾岛 中破.png","path":"images/kancolle/no.24 Kirishima 雾岛 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.24 Kirishima 雾岛 立绘.png","path":"images/kancolle/no.24 Kirishima 雾岛 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.3 Ise 伊势 立绘.png","path":"images/kancolle/no.3 Ise 伊势 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou 龍驤 中破.png","path":"images/kancolle/no.30 Ryuujou 龍驤 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.39 Kuma 球磨 立绘.png","path":"images/kancolle/no.39 Kuma 球磨 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.39 Kuma 球磨 中破.png","path":"images/kancolle/no.39 Kuma 球磨 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.4 Hyuuga 日向 中破.png","path":"images/kancolle/no.4 Hyuuga 日向 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.4 Hyuuga 日向 立绘.png","path":"images/kancolle/no.4 Hyuuga 日向 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.41 Kiso 木曽 立绘.png","path":"images/kancolle/no.41 Kiso 木曽 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.43 Isuzu 五十鈴 中破.png","path":"images/kancolle/no.43 Isuzu 五十鈴 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.43 Isuzu 五十鈴 立绘.png","path":"images/kancolle/no.43 Isuzu 五十鈴 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.44 Natori 名取 中破.png","path":"images/kancolle/no.44 Natori 名取 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.44 Natori 名取 中破改.png","path":"images/kancolle/no.44 Natori 名取 中破改.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.45 Yura 由良 中破.png","path":"images/kancolle/no.45 Yura 由良 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.46 Sendai 川内 中破.png","path":"images/kancolle/no.46 Sendai 川内 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.52 Furutaka 古鹰 立绘.png","path":"images/kancolle/no.52 Furutaka 古鹰 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.52 Furutaka 古鹰 中破.png","path":"images/kancolle/no.52 Furutaka 古鹰 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.53 Kako 加古 立绘.png","path":"images/kancolle/no.53 Kako 加古 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.53 Kako 加古 中破.png","path":"images/kancolle/no.53 Kako 加古 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.55  Myoukou 妙高 中破.png","path":"images/kancolle/no.55  Myoukou 妙高 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.60 Atago 爱宕 中破.png","path":"images/kancolle/no.60 Atago 爱宕 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.62 Choukai 鳥海 中破.png","path":"images/kancolle/no.62 Choukai 鳥海 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.62 Choukai 鳥海 立绘.png","path":"images/kancolle/no.62 Choukai 鳥海 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou 飛鷹 立绘.png","path":"images/kancolle/no.65 Hiyou 飛鷹 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou_Kai 飛鷹改-2 中破.png","path":"images/kancolle/no.65 Hiyou_Kai 飛鷹改-2 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame_Kai 村雨改 立绘.png","path":"images/kancolle/no.81 Murasame_Kai 村雨改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.99 Chitose_A 千歳甲 立绘.png","path":"images/kancolle/no.99 Chitose_A 千歳甲 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.1 Nagato 長門 中破.png","path":"images/kancolle/no.1 Nagato 長門 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.102 Ise_Kai 伊势改 中破.png","path":"images/kancolle/no.102 Ise_Kai 伊势改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.102 Ise_Kai 伊势改 立绘.png","path":"images/kancolle/no.102 Ise_Kai 伊势改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.108 Zuikaku_Kai 瑞鶴改 立绘.png","path":"images/kancolle/no.108 Zuikaku_Kai 瑞鶴改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.111 Yuubari 夕張 中破.png","path":"images/kancolle/no.111 Yuubari 夕張 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.120 Kinugasa 衣笠 立绘.png","path":"images/kancolle/no.120 Kinugasa 衣笠 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.132 Akugumo 秋雲 立绘.png","path":"images/kancolle/no.132 Akugumo 秋雲 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.138 Noshiro 能代 中破.png","path":"images/kancolle/no.138 Noshiro 能代 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二 中破.png","path":"images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二 立绘.png","path":"images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.143 Musashi 武藏 立绘.png","path":"images/kancolle/no.143 Musashi 武藏 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.148 Musashi_Kai 武藏改 立绘.png","path":"images/kancolle/no.148 Musashi_Kai 武藏改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.149 Kongou_Kai_Ni 金刚改二 立绘.png","path":"images/kancolle/no.149 Kongou_Kai_Ni 金刚改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二 立绘.png","path":"images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.153 Taihou 大鳯 立绘.png","path":"images/kancolle/no.153 Taihou 大鳯 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二 立绘.png","path":"images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.171 Bismarck 俾斯麦 中破.png","path":"images/kancolle/no.171 Bismarck 俾斯麦 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.172 Bismarck_Kai 俾斯麦改 中破.png","path":"images/kancolle/no.172 Bismarck_Kai 俾斯麦改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei 中破.png","path":"images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.183a Ooyodo 大淀 中破.png","path":"images/kancolle/no.183a Ooyodo 大淀 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二 立绘.png","path":"images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.22 Hiei 比叡 中破.png","path":"images/kancolle/no.22 Hiei 比叡 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.22 Hiei 比叡 立绘.png","path":"images/kancolle/no.22 Hiei 比叡 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou_Kai 扶桑改 中破.png","path":"images/kancolle/no.26 Fusou_Kai 扶桑改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro 山城 立绘.png","path":"images/kancolle/no.27 Yamashiro 山城 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro 山城 中破.png","path":"images/kancolle/no.27 Yamashiro 山城 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro_Kai 山城改 立绘.png","path":"images/kancolle/no.27 Yamashiro_Kai 山城改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro_Kai 山城改 中破.png","path":"images/kancolle/no.27 Yamashiro_Kai 山城改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.3 Ise 伊势 中破.png","path":"images/kancolle/no.3 Ise 伊势 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou 龍驤 立绘.png","path":"images/kancolle/no.30 Ryuujou 龍驤 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou_Kai 龍驤改-2 立绘.png","path":"images/kancolle/no.30 Ryuujou_Kai 龍驤改-2 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.49 Chitose 千歳 中破.png","path":"images/kancolle/no.49 Chitose 千歳 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.50 Chiyoda 千代田 中破.png","path":"images/kancolle/no.50 Chiyoda 千代田 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.95 Chitose_Kai 千歳改 中破.png","path":"images/kancolle/no.95 Chitose_Kai 千歳改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.96 Chiyoda_Kai 千代田改 立绘.png","path":"images/kancolle/no.96 Chiyoda_Kai 千代田改 立绘.png","modified":1,"renderable":1},{"_id":"source/img/gaimport.png","path":"img/gaimport.png","modified":1,"renderable":0},{"_id":"themes/morris/source/images/kancolle/no.100 Chiyoda_A 千代田甲 立绘.png","path":"images/kancolle/no.100 Chiyoda_A 千代田甲 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.104 Chitose_Carrier 千歳航 中破.png","path":"images/kancolle/no.104 Chitose_Carrier 千歳航 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.104 Chitose_Carrier 千歳航 立绘.png","path":"images/kancolle/no.104 Chitose_Carrier 千歳航 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二 中破.png","path":"images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.131 Yamato 大和 立绘.png","path":"images/kancolle/no.131 Yamato 大和 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.133 Yuugumo 夕雲 中破.png","path":"images/kancolle/no.133 Yuugumo 夕雲 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.132 Akugumo 秋雲 中破.png","path":"images/kancolle/no.132 Akugumo 秋雲 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.136 Yamato_Kai 大和改 立绘.png","path":"images/kancolle/no.136 Yamato_Kai 大和改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.138 Noshiro 能代 立绘.png","path":"images/kancolle/no.138 Noshiro 能代 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.139 Yahagi 矢矧 中破.png","path":"images/kancolle/no.139 Yahagi 矢矧 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.139 Yahagi 矢矧 立绘.png","path":"images/kancolle/no.139 Yahagi 矢矧 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.146 Kiso_Kai_Ni 木曽改二 中破.png","path":"images/kancolle/no.146 Kiso_Kai_Ni 木曽改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.146 Kiso_Kai_Ni 木曽改二 立绘.png","path":"images/kancolle/no.146 Kiso_Kai_Ni 木曽改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.171 Bismarck 俾斯麦 立绘.png","path":"images/kancolle/no.171 Bismarck 俾斯麦 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei 立绘.png","path":"images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei 立绘.png","path":"images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.182 Akashi 明石 立绘.png","path":"images/kancolle/no.182 Akashi 明石 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.183a Ooyodo 大淀 立绘.png","path":"images/kancolle/no.183a Ooyodo 大淀 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.183b Ooyodo_Kai大淀改 中破.png","path":"images/kancolle/no.183b Ooyodo_Kai大淀改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.183b Ooyodo_Kai大淀改 立绘.png","path":"images/kancolle/no.183b Ooyodo_Kai大淀改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.187 Akashi_Kai 明石改 中破.png","path":"images/kancolle/no.187 Akashi_Kai 明石改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.190 Ryuuhou_Kai 龍鳯改 立绘.png","path":"images/kancolle/no.190 Ryuuhou_Kai 龍鳯改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二 中破.png","path":"images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二 立绘.png","path":"images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou_Kai 扶桑改 立绘.png","path":"images/kancolle/no.26 Fusou_Kai 扶桑改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou 扶桑 中破.png","path":"images/kancolle/no.26 Fusou 扶桑 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou 飛鷹 中破.png","path":"images/kancolle/no.65 Hiyou 飛鷹 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.66 Junyou 隼鷹 中破.png","path":"images/kancolle/no.66 Junyou 隼鷹 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.99 Chitose_A 千歳甲 中破.png","path":"images/kancolle/no.99 Chitose_A 千歳甲 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.svg","path":"css/fonts/FontAwesome/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.105 Chiyoda_Carrier 千代田航 立绘.png","path":"images/kancolle/no.105 Chiyoda_Carrier 千代田航 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二 立绘.png","path":"images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二 中破.png","path":"images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.131 Yamato 大和 中破.png","path":"images/kancolle/no.131 Yamato 大和 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.136 Yamato_Kai 大和改 中破.png","path":"images/kancolle/no.136 Yamato_Kai 大和改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.137 Agano 阿賀野 立绘.png","path":"images/kancolle/no.137 Agano 阿賀野 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.170 Hamakaze 浜風 立绘.png","path":"images/kancolle/no.170 Hamakaze 浜風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.172 Bismarck_Kai 俾斯麦改 立绘.png","path":"images/kancolle/no.172 Bismarck_Kai 俾斯麦改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.182 Akashi 明石 中破.png","path":"images/kancolle/no.182 Akashi 明石 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.187 Akashi_Kai 明石改 立绘.png","path":"images/kancolle/no.187 Akashi_Kai 明石改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.201 Unryuu 雲龍 立绘.png","path":"images/kancolle/no.201 Unryuu 雲龍 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou_Kai 飛鷹改-2 立绘.png","path":"images/kancolle/no.65 Hiyou_Kai 飛鷹改-2 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.66 Junyou 隼鷹 立绘.png","path":"images/kancolle/no.66 Junyou 隼鷹 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.96 Chiyoda_Kai 千代田改 中破.png","path":"images/kancolle/no.96 Chiyoda_Kai 千代田改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.105 Chiyoda_Carrier 千代田航 中破.png","path":"images/kancolle/no.105 Chiyoda_Carrier 千代田航 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二 立绘.png","path":"images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou 扶桑 立绘.png","path":"images/kancolle/no.26 Fusou 扶桑 立绘.png","modified":1,"renderable":1},{"_id":"source/img/kcgame.png","path":"img/kcgame.png","modified":1,"renderable":0},{"_id":"themes/morris/source/images/kancolle/no.100 Chiyoda_A 千代田甲 中破.png","path":"images/kancolle/no.100 Chiyoda_A 千代田甲 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.206 Unryuu_Kai 雲龍改 立绘.png","path":"images/kancolle/no.206 Unryuu_Kai 雲龍改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二 立绘.png","path":"images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二 立绘.png","modified":1,"renderable":1},{"_id":"source/img/sslbanner.png","path":"img/sslbanner.png","modified":1,"renderable":0},{"_id":"source/img/gacreate.png","path":"img/gacreate.png","modified":1,"renderable":0},{"_id":"source/img/kcastart.png","path":"img/kcastart.png","modified":1,"renderable":0},{"_id":"themes/morris/source/images/kancolle/no.147 Верный 中破.png","path":"images/kancolle/no.147 Верный 中破.png","modified":1,"renderable":1},{"_id":"source/img/gacert.png","path":"img/gacert.png","modified":1,"renderable":0},{"_id":"source/img/ngcompare.png","path":"img/ngcompare.png","modified":1,"renderable":0},{"_id":"themes/morris/source/images/kancolle/no.147 Верный 立绘.png","path":"images/kancolle/no.147 Верный 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.38 Mochizuki 望月 中破.png","path":"images/kancolle/no.38 Mochizuki 望月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.72 Hibiki 響 立绘.png","path":"images/kancolle/no.72 Hibiki 響 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.74 Inazuma 電 立绘.png","path":"images/kancolle/no.74 Inazuma 電 立绘.png","modified":1,"renderable":1},{"_id":"source/img/kcaandroid.png","path":"img/kcaandroid.png","modified":1,"renderable":0},{"_id":"themes/morris/source/images/kancolle/no.35 Nagatsuki 長月 立绘.png","path":"images/kancolle/no.35 Nagatsuki 長月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu_Kai 白露改 中破.png","path":"images/kancolle/no.79 Shiratsuyu_Kai 白露改 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.134 Makigumo 卷雲 中破.png","path":"images/kancolle/no.134 Makigumo 卷雲 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.77 Wakaba 若葉 立绘.png","path":"images/kancolle/no.77 Wakaba 若葉 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.134 Makigumo 卷雲 立绘.png","path":"images/kancolle/no.134 Makigumo 卷雲 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.77 Wakaba 若葉 中破.png","path":"images/kancolle/no.77 Wakaba 若葉 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.86 Ooshio 大潮 中破.png","path":"images/kancolle/no.86 Ooshio 大潮 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.86 Ooshio 大潮 立绘.png","path":"images/kancolle/no.86 Ooshio 大潮 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.13 Hatsuyuki 初雪 立绘.png","path":"images/kancolle/no.13 Hatsuyuki 初雪 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.13 Hatsuyuki 初雪 中破.png","path":"images/kancolle/no.13 Hatsuyuki 初雪 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.14 Miyuki 深雪 立绘.png","path":"images/kancolle/no.14 Miyuki 深雪 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.14 Miyuki 深雪 中破.png","path":"images/kancolle/no.14 Miyuki 深雪 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.32 Kisaragi 如月 立绘.png","path":"images/kancolle/no.32 Kisaragi 如月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.31 Mutsuki 睦月 中破.png","path":"images/kancolle/no.31 Mutsuki 睦月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.31 Mutsuki 睦月 立绘.png","path":"images/kancolle/no.31 Mutsuki 睦月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.34 Fumizuki 文月 中破.png","path":"images/kancolle/no.34 Fumizuki 文月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.37 Mikazuki 三日月 立绘.png","path":"images/kancolle/no.37 Mikazuki 三日月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.38 Mochizuki 望月 立绘.png","path":"images/kancolle/no.38 Mochizuki 望月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.36 Kikuzuki 菊月 中破.png","path":"images/kancolle/no.36 Kikuzuki 菊月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.72 Hibiki 響 中破.png","path":"images/kancolle/no.72 Hibiki 響 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.73 Ikazuchi 雷 中破.png","path":"images/kancolle/no.73 Ikazuchi 雷 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.70 Ushio 潮 立绘.png","path":"images/kancolle/no.70 Ushio 潮 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.73 Ikazuchi 雷 立绘.png","path":"images/kancolle/no.73 Ikazuchi 雷 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.74 Inazuma 電 中破.png","path":"images/kancolle/no.74 Inazuma 電 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame 村雨 中破.png","path":"images/kancolle/no.81 Murasame 村雨 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame 村雨 立绘.png","path":"images/kancolle/no.81 Murasame 村雨 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.78 Hatsushimo 初霜 中破.png","path":"images/kancolle/no.78 Hatsushimo 初霜 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.80 Shigure 時雨 立绘.png","path":"images/kancolle/no.80 Shigure 時雨 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.80 Shigure 時雨 中破.png","path":"images/kancolle/no.80 Shigure 時雨 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.82 Yuudaichi 夕立 中破.png","path":"images/kancolle/no.82 Yuudaichi 夕立 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.82 Yuudaichi 夕立 立绘.png","path":"images/kancolle/no.82 Yuudaichi 夕立 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.85 Asashio 朝潮 立绘.png","path":"images/kancolle/no.85 Asashio 朝潮 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.85 Asashio 朝潮 中破.png","path":"images/kancolle/no.85 Asashio 朝潮 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.87 Michishio 満潮 中破.png","path":"images/kancolle/no.87 Michishio 満潮 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.87 Michishio 満潮 立绘.png","path":"images/kancolle/no.87 Michishio 満潮 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.32 Kisaragi 如月 中破.png","path":"images/kancolle/no.32 Kisaragi 如月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.71 Akatsuki 暁 立绘.png","path":"images/kancolle/no.71 Akatsuki 暁 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.71 Akatsuki 暁 中破.png","path":"images/kancolle/no.71 Akatsuki 暁 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.8 Souryuu 蒼龍 中破.png","path":"images/kancolle/no.8 Souryuu 蒼龍 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.8 Souryuu 蒼龍 立绘.png","path":"images/kancolle/no.8 Souryuu 蒼龍 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.90 Kasumi 霞 立绘.png","path":"images/kancolle/no.90 Kasumi 霞 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.90 Kasumi 霞 中破.png","path":"images/kancolle/no.90 Kasumi 霞 中破.png","modified":1,"renderable":1},{"_id":"source/img/kchome.png","path":"img/kchome.png","modified":1,"renderable":0},{"_id":"source/img/qtbanner.png","path":"img/qtbanner.png","modified":1,"renderable":0},{"_id":"themes/morris/source/images/kancolle/no.17 Ayanami 綾波 立绘.png","path":"images/kancolle/no.17 Ayanami 綾波 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.17 Ayanami 綾波 中破.png","path":"images/kancolle/no.17 Ayanami 綾波 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.18 Shikinami 敷波 中破.png","path":"images/kancolle/no.18 Shikinami 敷波 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.18 Shikinami 敷波 立绘.png","path":"images/kancolle/no.18 Shikinami 敷波 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.34 Fumizuki 文月 立绘.png","path":"images/kancolle/no.34 Fumizuki 文月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.35 Nagatsuki 長月 中破.png","path":"images/kancolle/no.35 Nagatsuki 長月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.6 Akagi 赤城 中破.png","path":"images/kancolle/no.6 Akagi 赤城 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.6 Akagi 赤城 立绘.png","path":"images/kancolle/no.6 Akagi 赤城 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu_Kai 白露改 立绘.png","path":"images/kancolle/no.79 Shiratsuyu_Kai 白露改 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.88 Arashio 荒潮 中破.png","path":"images/kancolle/no.88 Arashio 荒潮 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.88 Arashio 荒潮 立绘.png","path":"images/kancolle/no.88 Arashio 荒潮 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.93 Kuroshio 黑潮 立绘.png","path":"images/kancolle/no.93 Kuroshio 黑潮 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.93 Kuroshio 黑潮 中破.png","path":"images/kancolle/no.93 Kuroshio 黑潮 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu 白露 中破.png","path":"images/kancolle/no.79 Shiratsuyu 白露 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.89 Arare 霰 中破.png","path":"images/kancolle/no.89 Arare 霰 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.89 Arare 霰 立绘.png","path":"images/kancolle/no.89 Arare 霰 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.106 Shoukaku 翔鶴 中破.png","path":"images/kancolle/no.106 Shoukaku 翔鶴 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.106 Shoukaku 翔鶴 立绘.png","path":"images/kancolle/no.106 Shoukaku 翔鶴 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.107 Zuikaku 瑞鶴 中破.png","path":"images/kancolle/no.107 Zuikaku 瑞鶴 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.118 Hatsukaze 初風 中破.png","path":"images/kancolle/no.118 Hatsukaze 初風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.11 Fubuki 吹雪 中破.png","path":"images/kancolle/no.11 Fubuki 吹雪 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.107 Zuikaku 瑞鶴 立绘.png","path":"images/kancolle/no.107 Zuikaku 瑞鶴 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.11 Fubuki 吹雪 立绘.png","path":"images/kancolle/no.11 Fubuki 吹雪 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.126 I_168 伊168 立绘.png","path":"images/kancolle/no.126 I_168 伊168 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.127 I_58 伊58 立绘.png","path":"images/kancolle/no.127 I_58 伊58 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.127 I_58 伊58 中破.png","path":"images/kancolle/no.127 I_58 伊58 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.126 I_168 伊168 中破.png","path":"images/kancolle/no.126 I_168 伊168 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.12 Shirayuki 白雪 中破.png","path":"images/kancolle/no.12 Shirayuki 白雪 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.118 Hatsukaze 初風 立绘.png","path":"images/kancolle/no.118 Hatsukaze 初風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.16 Isonami 磯波 中破.png","path":"images/kancolle/no.16 Isonami 磯波 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.16 Isonami 磯波 立绘.png","path":"images/kancolle/no.16 Isonami 磯波 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.33 Satsuki 皐月 中破.png","path":"images/kancolle/no.33 Satsuki 皐月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.12 Shirayuki 白雪 立绘.png","path":"images/kancolle/no.12 Shirayuki 白雪 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.5 Yukikaze 雪風 中破.png","path":"images/kancolle/no.5 Yukikaze 雪風 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.69 Sazanami 漣 立绘.png","path":"images/kancolle/no.69 Sazanami 漣 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.68 Akebono 曙 立绘.png","path":"images/kancolle/no.68 Akebono 曙 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.69 Sazanami 漣 中破.png","path":"images/kancolle/no.69 Sazanami 漣 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.5 Yukikaze 雪風 立绘.png","path":"images/kancolle/no.5 Yukikaze 雪風 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.67 Oboro 朧 中破.png","path":"images/kancolle/no.67 Oboro 朧 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.67 Oboro 朧 立绘.png","path":"images/kancolle/no.67 Oboro 朧 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.68 Akebono 曙 中破.png","path":"images/kancolle/no.68 Akebono 曙 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.84 Suzukaze 涼风 立绘.png","path":"images/kancolle/no.84 Suzukaze 涼风 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.84 Suzukaze 涼风 中破.png","path":"images/kancolle/no.84 Suzukaze 涼风 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.83 Samidare 五月雨 中破.png","path":"images/kancolle/no.83 Samidare 五月雨 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.83 Samidare 五月雨 立绘.png","path":"images/kancolle/no.83 Samidare 五月雨 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.91 Kagerou 陽炎 立绘.png","path":"images/kancolle/no.91 Kagerou 陽炎 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.91 Kagerou 陽炎 中破.png","path":"images/kancolle/no.91 Kagerou 陽炎 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.78 Hatsushimo 初霜 立绘.png","path":"images/kancolle/no.78 Hatsushimo 初霜 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.33 Satsuki 皐月 立绘.png","path":"images/kancolle/no.33 Satsuki 皐月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.36 Kikuzuki 菊月 立绘.png","path":"images/kancolle/no.36 Kikuzuki 菊月 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.37 Mikazuki 三日月 中破.png","path":"images/kancolle/no.37 Mikazuki 三日月 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.70 Ushio 潮 中破.png","path":"images/kancolle/no.70 Ushio 潮 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.76 Nenohi 子日 立绘.png","path":"images/kancolle/no.76 Nenohi 子日 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.75 Hatsuharu 初春 立绘.png","path":"images/kancolle/no.75 Hatsuharu 初春 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.75 Hatsuharu 初春 中破.png","path":"images/kancolle/no.75 Hatsuharu 初春 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.76 Nenohi 子日 中破.png","path":"images/kancolle/no.76 Nenohi 子日 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu 白露 立绘.png","path":"images/kancolle/no.79 Shiratsuyu 白露 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.92 Shiranui 不知火 中破.png","path":"images/kancolle/no.92 Shiranui 不知火 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.92 Shiranui 不知火 立绘.png","path":"images/kancolle/no.92 Shiranui 不知火 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/NPC 給糧艦 Mamiya 間宮.png","path":"images/kancolle/NPC 給糧艦 Mamiya 間宮.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.7 Kaga 加賀 立绘.png","path":"images/kancolle/no.7 Kaga 加賀 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.7 Kaga 加賀 中破.png","path":"images/kancolle/no.7 Kaga 加賀 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.9 Hiryuu 飛龍 立绘.png","path":"images/kancolle/no.9 Hiryuu 飛龍 立绘.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.9 Hiryuu 飛龍 中破.png","path":"images/kancolle/no.9 Hiryuu 飛龍 中破.png","modified":1,"renderable":1},{"_id":"source/img/kcabanner.png","path":"img/kcabanner.png","modified":1,"renderable":0},{"_id":"themes/morris/source/images/kancolle/no.15 Murakumo 叢雲 中破.png","path":"images/kancolle/no.15 Murakumo 叢雲 中破.png","modified":1,"renderable":1},{"_id":"themes/morris/source/images/kancolle/no.15 Murakumo 叢雲 立绘.png","path":"images/kancolle/no.15 Murakumo 叢雲 立绘.png","modified":1,"renderable":1},{"_id":"source/img/oled.gif","path":"img/oled.gif","modified":1,"renderable":0},{"_id":"themes/morris/source/css/images/banner'.jpg","path":"css/images/banner'.jpg","modified":1,"renderable":1},{"_id":"themes/morris/source/css/images/lovelive.png","path":"css/images/lovelive.png","modified":1,"renderable":1},{"_id":"source/img/kcbanner.png","path":"img/kcbanner.png","modified":1,"renderable":0},{"_id":"themes/morris/source/files/Time After Time.mp3","path":"files/Time After Time.mp3","modified":1,"renderable":1},{"_id":"themes/morris/source/files/Only My Railgun.mp3","path":"files/Only My Railgun.mp3","modified":1,"renderable":1},{"_id":"themes/morris/source/files/轮回之境.mp3","path":"files/轮回之境.mp3","modified":1,"renderable":1},{"_id":"themes/morris/source/files/海色.mp3","path":"files/海色.mp3","modified":1,"renderable":1},{"_id":"themes/morris/source/files/吹雪.mp3","path":"files/吹雪.mp3","modified":1,"renderable":1},{"_id":"themes/morris/source/files/輝夜の城で踊りたい.mp3","path":"files/輝夜の城で踊りたい.mp3","modified":1,"renderable":1},{"_id":"themes/morris/source/files/Higanbana.mp3","path":"files/Higanbana.mp3","modified":1,"renderable":1},{"_id":"source/files/spigot.jar","path":"files/spigot.jar","modified":1,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"66456dd9ce1d9e49d845b413e1ca57b1b85c5452","modified":1480007200000},{"_id":"source/.DS_Store","hash":"f707fe7cf1f9b9581e71ab768585466c7e474214","modified":1488111790000},{"_id":"source/manifest.json","hash":"2ce61260b8436813200a2063c20adaf6bf6be2f1","modified":1487408890000},{"_id":"themes/morris/.DS_Store","hash":"e28e54ff32b5112d2ba1c8ba945612fb33a5640a","modified":1488125950000},{"_id":"themes/morris/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1480007201000},{"_id":"themes/morris/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1480007201000},{"_id":"themes/morris/README.md","hash":"e7cc82dc79596f36ba05a8139e7d6b2dfc4ae5f9","modified":1480007201000},{"_id":"themes/morris/_config.yml","hash":"b932c45db7f15d05cfb1dfa020b18263436ebaf5","modified":1487908755000},{"_id":"themes/morris/package.json","hash":"d07f326588fef82f1d23ae3101c9ddfff34c132f","modified":1480007201000},{"_id":"source/_posts/6relayd.md","hash":"ae8204af4ded5fb85e62f4455465dddee3e69688","modified":1480007200000},{"_id":"source/_posts/adb.md","hash":"bafc3775fb1b1e997275b97cb3247d8964da9fc8","modified":1480007200000},{"_id":"source/_posts/app.md","hash":"722b8b9b32e689d3416dbc9998b3caaa4a278454","modified":1480007200000},{"_id":"source/_posts/aria2.md","hash":"8d36601598423f9133cdc42827acb85873d82cc8","modified":1480007200000},{"_id":"source/_posts/baidu-interview.md","hash":"0ba62a07f50c9141794b70edf3bd6eb4ffbd7e53","modified":1480007200000},{"_id":"source/_posts/breed.md","hash":"3bb89ce809ecf79a7f4ca02d7cbe01d659a060d0","modified":1488110750000},{"_id":"source/_posts/centos-lemp.md","hash":"81c320bdff8be37ca6c2e00e514bc6905d4cb938","modified":1487417847000},{"_id":"source/_posts/chinadns.md","hash":"4255b8ec4999d55dadb3b07b78ba37ead2c1f884","modified":1480007200000},{"_id":"source/_posts/dd.md","hash":"d87646d695928d432939e0877e3708cef99b0e70","modified":1487313262000},{"_id":"source/_posts/digitalocean.md","hash":"d994bb7476cf08520e6ca4d45dc04a60a2bbda73","modified":1480007200000},{"_id":"source/_posts/denyhosts.md","hash":"64e8cbb6ba8b415f315439e08fe829288b6f41f8","modified":1480007200000},{"_id":"source/_posts/dropbear.md","hash":"2b8cf6383ba2c5e6a22458b3424486c8160d0e4b","modified":1487312471000},{"_id":"source/_posts/goagent.md","hash":"37ce07c41fb09cbde7d8243e63547d31e9e272f0","modified":1480007200000},{"_id":"source/_posts/hello-world.md","hash":"e807b22e142e620aafa2bc3860c647588c2a2a43","modified":1480007200000},{"_id":"source/_posts/gfwlist.md","hash":"2840fe999ab6437da7e2269025cb7e22f07f386c","modified":1480007200000},{"_id":"source/_posts/minecraft.md","hash":"8f6edb14c2c1c3febfc15136e64b92620142d9a5","modified":1480007200000},{"_id":"source/_posts/mac-php.md","hash":"85b9dec10bd3de957b1ea2b0f23398f0e039c4b3","modified":1487417605000},{"_id":"source/_posts/kancolle-android.md","hash":"6ade9f9e23d8be9632179cf63559c5a492def4e9","modified":1483949997000},{"_id":"source/_posts/kancolle-cookie.md","hash":"4f8eff4f8b3e1c952a47c0eeb9d37eea666f2ac9","modified":1487312409000},{"_id":"source/_posts/qt.md","hash":"344f9c82e00ec9afc11e590d1418d6f7e498f9a1","modified":1480007200000},{"_id":"source/_posts/ngrok.md","hash":"798ad3445153afe803d02050c7c87bec5817dff4","modified":1487312310000},{"_id":"source/_posts/raspi-oled.md","hash":"c6763dc4ce933aaba4cb955b1103275731f32668","modified":1487417920000},{"_id":"source/_posts/openwrt.md","hash":"6143c40c46a28b03cd775e46d8977025d30f45e7","modified":1488110866000},{"_id":"source/_posts/shadowsocks.md","hash":"09ff39b35d1369007fc38581c8aaad431e36a21b","modified":1480007200000},{"_id":"source/_posts/shell-parallel.md","hash":"b407684ebb2bf3ae9a13fb6a08b7f571090edded","modified":1482031561000},{"_id":"source/_posts/softether.md","hash":"af2938496fcb528e09e87f0ce8a01d87970679ef","modified":1487312949000},{"_id":"source/_posts/ssh-conf.md","hash":"87003efd4e28eec880b7238535c1c67829320be6","modified":1483935436000},{"_id":"source/_posts/ssl.md","hash":"0afccdb45febd67bdd18dd85829769db535f36d5","modified":1487417997000},{"_id":"source/_posts/verilog.md","hash":"6386f1e298b4e2681784520a4daf3af376788d40","modified":1480007200000},{"_id":"source/_posts/terminal.md","hash":"facfae2222046be0dccc78762eff0dc80d9906ec","modified":1483948016000},{"_id":"source/about/index.md","hash":"1975cb99674f856cd0651ce74bfb56f3ea40399c","modified":1483936157000},{"_id":"source/files/6relayd_2013-10-21_ar71xx.ipk","hash":"9333e2870df199c384d8bb6a391be780352fdf96","modified":1480007207000},{"_id":"source/files/luci-app-chinadns_1.4.0-1_all.ipk","hash":"12ec20c725abf471c2d21a903a38c382962edc81","modified":1480007207000},{"_id":"source/files/ChinaDNS_1.3.2-3_ar71xx.ipk","hash":"9feb6057e8e0f6f445626890a549eff6153fa3aa","modified":1480007207000},{"_id":"source/files/luci-app-ngrokc_git-15.290.16504-8c2fd44-1_all.ipk","hash":"28ec8750f856a7892c3abcaba166b7502adee280","modified":1480007207000},{"_id":"source/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk","hash":"f91b8ba97f9dcad0a6ad8ec22da812a69c50e7d2","modified":1480007207000},{"_id":"source/files/ngrokc_ba56781152-1_ar71xx.ipk","hash":"1e0f8c0cf4ef83b02a40a69dcabb0eb1a9c007cd","modified":1480007207000},{"_id":"source/gallery/index.md","hash":"e03f883790d758063f28ecf718217f46d3225846","modified":1480007201000},{"_id":"source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1488109698000},{"_id":"source/img/6rbanner.png","hash":"9e1b63b92d01eef9f311a61eeb59b6db69ba2c46","modified":1480007207000},{"_id":"source/img/appicon.png","hash":"5a950af068d1344228f571392e7223e11fe23b3d","modified":1480007207000},{"_id":"source/img/arbaiduyun.png","hash":"47298810dce743883b88ce9094130033f0bb2872","modified":1480007207000},{"_id":"source/img/arsuccess.png","hash":"5bf157027e0b50203339303bfc922f9f84800bb7","modified":1480007207000},{"_id":"source/img/breedassistant.png","hash":"2c84b84361a53b0d7c9f11183be11cd22a534f04","modified":1488108878000},{"_id":"source/img/breedbackup.png","hash":"158ff829b8ba9e92dd2b979112b52869b2eb40db","modified":1488109580000},{"_id":"source/img/breedbanner.png","hash":"3b3d3a2ebc24c119b6507cd7f8420883de9b98f4","modified":1488109912000},{"_id":"source/img/breedreset.png","hash":"8df4b882bddaf85f7064bee5b0a9efe266a9102c","modified":1488109679000},{"_id":"source/img/breedupdate.png","hash":"1638952fe8294ed4050b2762356401e3ea7d1878","modified":1488109406000},{"_id":"source/img/dnsbanner.png","hash":"af1cf09c643ff5d73532985de74082b767eca20a","modified":1480007207000},{"_id":"source/img/dhbanner.png","hash":"893774995bb40e25f0eb177bc1f2ea0ade1a379a","modified":1480007207000},{"_id":"source/img/dnschinadns.png","hash":"48157885f8039de0d45d7ed4c8263d29b18e8cd2","modified":1480007207000},{"_id":"source/img/dnsservice.png","hash":"86a4f25e523abb59bbb32b26d41fefa928fb2571","modified":1480007207000},{"_id":"source/img/dnsshadowsocks.png","hash":"b9b25845a56c337664d1926c4c7ff97bdba6a89f","modified":1480007207000},{"_id":"source/img/kccookie.png","hash":"e16aa11b40e03550e90526a94e9919f261898b84","modified":1480007207000},{"_id":"source/img/mpbanner.png","hash":"646f3f5b5678d680ab880b624ab12527d1178e21","modified":1480007207000},{"_id":"source/img/ngluci.png","hash":"00f514ce3973395cef6b03140bce977fc7ca8f4b","modified":1480007207000},{"_id":"source/img/mcbanner.png","hash":"6c5c6face2d69435f4777f116d073dda49501de6","modified":1480007207000},{"_id":"source/img/ngssh.png","hash":"c2a779402c051b92d6ea03bb2702cde202d997a7","modified":1480007207000},{"_id":"source/img/op703n.png","hash":"7aafba8a71df4dba55e2db6ec170f7ccb9a2a6e0","modified":1480007207000},{"_id":"source/img/opss.png","hash":"bcae5b5da75091b406b0c216db78927090e5323b","modified":1480007207000},{"_id":"source/img/optftp.png","hash":"45f32ca2fbfdc909d3bcc584be358da0b0586f8f","modified":1480007207000},{"_id":"source/img/qt3.png","hash":"25a3a27ee5a8fbfe91423abff30e356381f5cc64","modified":1480007207000},{"_id":"source/img/qt4.png","hash":"d830fa4fa652240a4dd995553c5349160558321f","modified":1480007207000},{"_id":"source/img/ssbanner.png","hash":"7a04b920e6839fe45ee69da4dceae10a73fdc028","modified":1480007207000},{"_id":"source/img/sshconfbanner.png","hash":"a7bbe65f47eab5e4e8ad144a112591e620ac877e","modified":1480952050000},{"_id":"source/img/sspromo.png","hash":"7dc2f09232eda139427431623762ef53c5add62d","modified":1480007207000},{"_id":"source/img/terzsh.png","hash":"97a2a9035fa95f60e861c7a4608fff2447bdf5a7","modified":1483885925000},{"_id":"source/img/teriterm.png","hash":"1be3277d40e36fbb2fedeb248be4cdb29cc629fe","modified":1483885620000},{"_id":"source/img/vpnwin6.png","hash":"5cf8006bf29ad002b74219ede600f3aca2805105","modified":1480007206000},{"_id":"source/tags/index.md","hash":"cce43289f7be2cb8d418cdbedb83f906c3461f2c","modified":1480007201000},{"_id":"themes/morris/layout/.DS_Store","hash":"b5e67b9fbe02059248caa6f01138468f11f324a6","modified":1487947566000},{"_id":"themes/morris/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1480007201000},{"_id":"themes/morris/layout/layout.ejs","hash":"2a72d9ed8be35fcead950a55d1c0b1ba1761586f","modified":1480007201000},{"_id":"themes/morris/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1480007201000},{"_id":"themes/morris/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1480007201000},{"_id":"themes/morris/layout/page.ejs","hash":"a05fd1a27e1c54c9dbab9e69a257a299b0f549cc","modified":1480007201000},{"_id":"themes/morris/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1480007201000},{"_id":"themes/morris/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1480007201000},{"_id":"themes/morris/layout/tags.ejs","hash":"a376013ee4c581bb694a6933c5a4b8246f25ae1b","modified":1480007201000},{"_id":"themes/morris/source/.DS_Store","hash":"97639b8c214792f6a3382d6bcb6a684e9432d54e","modified":1488125956000},{"_id":"source/img/404.png","hash":"3db9b59a23bbe0fda059b15cfdea7d0c1c19c30d","modified":1480007207000},{"_id":"source/img/adbbanner.png","hash":"d2d04cb23a67c3cb2b9b50ced34ea68bfae777c6","modified":1480007207000},{"_id":"source/img/applaunch.png","hash":"194ffed9ba5d4141dbead52d92a0a8ee323851e1","modified":1480007207000},{"_id":"source/img/ardownload.png","hash":"8c71e556f2a425fe339420c96228dc0992345e8e","modified":1480007207000},{"_id":"source/img/arsetting.png","hash":"775b75136687203729b2134cad25bce4acd73bb4","modified":1480007207000},{"_id":"source/img/arbanner.png","hash":"957235fdf61a02378c817124acc821a47a84cf62","modified":1480007207000},{"_id":"source/img/breedweb.png","hash":"10d658b8abd56761b945c6b7c750efe723e96bc7","modified":1488109774000},{"_id":"source/img/breedwrt.png","hash":"cc2c36abf83f042767c89cb38864aed811caa1ff","modified":1488109112000},{"_id":"source/img/dobanner.png","hash":"41a0f54d3a14695b1ad09dce77fb64d78d24843f","modified":1480007207000},{"_id":"source/img/ngrequests.png","hash":"549b3dd1c51681fd861fd035e0f51022fc8d0dbe","modified":1480007207000},{"_id":"source/img/oledbanner.png","hash":"1f636ba67db6f9fbd4154c70d95821d6b7b59dd2","modified":1487311203000},{"_id":"source/img/op2200.png","hash":"dddb49847f73586f331274417fa44c972f60ec75","modified":1480007207000},{"_id":"source/img/oplucicn.png","hash":"3197d6d07dd7889ba87a28d4d75653058e0d579e","modified":1480007207000},{"_id":"source/img/oppasswd.png","hash":"4a5ecde58e32df9f19f5e56955af085e7e070331","modified":1480007207000},{"_id":"source/img/qterror.png","hash":"536ff1fd87e34e5ff83d914226c84f653989e0be","modified":1480007207000},{"_id":"source/img/qtruntime.png","hash":"22907892792cf0092744d1528fd2c8a18ecdad38","modified":1480007207000},{"_id":"source/img/qtwindows.png","hash":"83f3db12431e66f3841e91a973e7ac02ffb55300","modified":1480007207000},{"_id":"source/img/shbanner.png","hash":"79face0fb418b6b23f77b397224ff01041a823cc","modified":1480007207000},{"_id":"source/img/ssch1.png","hash":"bef90c97fbbda7e47d4eb39539b98f04820b270c","modified":1480007207000},{"_id":"source/img/ssl3.png","hash":"61e956555f901e350dd71e552f96ffc4a84685ab","modified":1480007207000},{"_id":"source/img/tervim.png","hash":"e7425ac96c28e97aacb0b4059d9be59cf34d859b","modified":1483886207000},{"_id":"source/img/vpnnat.png","hash":"f279480e65383e0fdca2abe206d60aa7d35fe563","modified":1480007207000},{"_id":"source/img/vpnsetup.png","hash":"82f85cc8f9e5a605424006589d506512f42a28e1","modified":1480007206000},{"_id":"source/img/vpnwin1.png","hash":"94c59fb0f97f7d8cb44ecb6d40fd2f82e63a5cbf","modified":1480007206000},{"_id":"source/img/vpnwin2.png","hash":"8856ea782ceaefa43905b56b35aa9f9764a5836e","modified":1480007206000},{"_id":"source/img/vpnwin3.png","hash":"13f019decd3cedc3bc1637586142dd033987f33b","modified":1480007206000},{"_id":"source/img/vpnwin4.png","hash":"2e13407f1e3a9b19b0378885bba339ceea965840","modified":1480007206000},{"_id":"source/img/vpnwin7.png","hash":"071d22acdf9c22f0200e52fa38e64ca513bb6c6c","modified":1480007206000},{"_id":"source/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk","hash":"c2f9100a9d1dce764e8d0e2d37733e259bd38a24","modified":1480007207000},{"_id":"source/img/appbanner.png","hash":"97c6d56815ef6f12ee87770e2a1e99031dce4025","modified":1480007207000},{"_id":"source/img/appshell.png","hash":"5cc9e345858805fd6748cc047d014f4ec880f4f7","modified":1480007207000},{"_id":"source/img/appjar.png","hash":"c32747d9f7cb903338b21086d017d085ed380f7e","modified":1480007207000},{"_id":"source/img/aryunsetting.png","hash":"6af05dd52c655b357063961f5c959f913ae84995","modified":1480007207000},{"_id":"source/img/dbbanner.png","hash":"0d7ce3f75c653e095bc64c97d59105820bd31ffa","modified":1480007207000},{"_id":"source/img/ddbanner.png","hash":"57d5af33e1c5ccc58b35ca93a66fb1c2cf749361","modified":1480007207000},{"_id":"source/img/dnsdhcpdns.png","hash":"f63f2b213554fc61b0d4bc9685f1fa831e1d2145","modified":1480007207000},{"_id":"source/img/gabanner.png","hash":"a47977fa86a272085d3044bef1f455e7e88861d1","modified":1480007207000},{"_id":"source/img/kcen.png","hash":"c4ec6cc287ef322a061c08b8b470fd7290853321","modified":1480007207000},{"_id":"source/img/lempbanner.png","hash":"5e6e5fd30f28c52ffba75127eb5461877e5946ef","modified":1480007207000},{"_id":"source/img/opfirst.png","hash":"af3fb9adee49ffce5ccdc1575c8460523da0de5e","modified":1480007207000},{"_id":"source/img/opsss.png","hash":"aa50d675da62721b03dc7be9eb936c4f2a7ae3dd","modified":1480007207000},{"_id":"source/img/opwifi.png","hash":"5d09a8bc6e8520cbf33d4cac03285fbd66946abd","modified":1480007207000},{"_id":"source/img/ssl2.png","hash":"6f2a9577876f4563d3a5ae06edb4c4ee5a65f1bd","modified":1480007207000},{"_id":"source/img/ssl4.png","hash":"50af0219aeb6d309172d231a4cfe0ac8f9e3747a","modified":1480007207000},{"_id":"source/img/vlbanner.png","hash":"e0080600c6919303a3dab92771a263989912f2f0","modified":1480007207000},{"_id":"source/img/vlinstall.png","hash":"23330300c50c9ea16b86cb1704804654a5ddae32","modified":1480007207000},{"_id":"source/img/vlverilog.png","hash":"136cd8d47e5a63ee5efc38ab4748dd2d65ed0866","modified":1480007207000},{"_id":"source/img/vpnopen.png","hash":"a98c8a85a54c8c71bf1de11b61d929a8b162ca29","modified":1480007207000},{"_id":"source/img/vpnopenvpn.png","hash":"5c77d6ca8d829470ff58b001433658da56158e36","modified":1480007206000},{"_id":"source/img/vpntunnel.png","hash":"d0bed7b0b9030cf3a205de203d532301b1d45ad6","modified":1480007206000},{"_id":"source/img/vpnset.png","hash":"f75d559260b2b11beb8033f4d4cd2517f16339d0","modified":1480007206000},{"_id":"source/img/vpnuser.png","hash":"3a3fae09f833000ca7b4567fc80732e8b128f215","modified":1480007206000},{"_id":"source/img/vpnwin5.png","hash":"0760409b4e3ea21b2dd36331cd62271f017eaf76","modified":1480007206000},{"_id":"themes/morris/layout/_partial/after-footer.ejs","hash":"b712c406113e9fdff541d1116b508f6cc9fec36b","modified":1480235890000},{"_id":"themes/morris/layout/_partial/.DS_Store","hash":"6b94e3ae4503152c1191eed74168216a021fdac9","modified":1483935155000},{"_id":"themes/morris/layout/_partial/archive.ejs","hash":"0a8e464aca2bdccce4fb2f23534ee615e6c85df5","modified":1480007201000},{"_id":"themes/morris/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1480007201000},{"_id":"themes/morris/layout/_partial/article.ejs","hash":"344418a09813145e70f7e8047775013f4d884ffb","modified":1480007201000},{"_id":"themes/morris/layout/_partial/footer.ejs","hash":"5c4c9092b3c633d03bbd677699a6b34b3395e1bd","modified":1480007201000},{"_id":"themes/morris/layout/_partial/google-analytics.ejs","hash":"fa555ea9a066f441f10e13523c675f87691874c3","modified":1480007201000},{"_id":"themes/morris/layout/_partial/comment.ejs","hash":"56786339f66a1fb56d29070633b27bd34ae3f9c3","modified":1480007201000},{"_id":"themes/morris/layout/_partial/header.ejs","hash":"d1fc40dd342a94cf092ff230bde55dc47e37f6e7","modified":1480007201000},{"_id":"themes/morris/layout/_partial/math-jax.ejs","hash":"ae998e014666cb354ded5a11a8a6bc7eae3e3c34","modified":1480007201000},{"_id":"themes/morris/layout/_partial/mobile-nav.ejs","hash":"bb27c51cf7a77beba241b67b009afa454b7d32d6","modified":1480007201000},{"_id":"themes/morris/layout/_partial/head.ejs","hash":"633df3a8b3d76086f95d92d86c4f6363be16536b","modified":1487409392000},{"_id":"themes/morris/layout/_partial/sidebar.ejs","hash":"2ec9f54b7a3755d1727dbee367a8527d0e0ab6e2","modified":1480007201000},{"_id":"themes/morris/layout/_widget/archive.ejs","hash":"88e191e3d14541299ed03b9a45be70974df51143","modified":1480007201000},{"_id":"themes/morris/layout/_widget/category.ejs","hash":"4d3f92e3cd652cb69d71e40d1c64b2369922ca26","modified":1480007201000},{"_id":"themes/morris/layout/_widget/flagcounter.ejs","hash":"9ada34075e3163587eba7a276ccf9f43f1bd9d4a","modified":1487948543000},{"_id":"themes/morris/layout/_widget/links.ejs","hash":"a9d8f6acfc8bdbf5cd9f08d7d646651d7ddc5802","modified":1481696011000},{"_id":"themes/morris/layout/_widget/qrcode.ejs","hash":"ee4667e09884f71b6882804b37a60787bf7c3ebc","modified":1487948539000},{"_id":"themes/morris/layout/_widget/recent_posts.ejs","hash":"43beab01d91a182010b903b91a54c3fa2e878b69","modified":1480007201000},{"_id":"themes/morris/layout/_widget/tag.ejs","hash":"28997ad5f00722d0d9f5abde99e92882222b9682","modified":1480007201000},{"_id":"themes/morris/layout/_widget/tagcloud.ejs","hash":"dece25a84d1b21275ac2a9dccecbaca727386989","modified":1480007201000},{"_id":"themes/morris/layout/_widget/timeanddate.ejs","hash":"b0c07acdb4cb95ef9c8a8305162f6af50add7d80","modified":1487948547000},{"_id":"themes/morris/layout/_widget/ukagaka.ejs","hash":"de9fe2cf31ed70cd4dcde7c6f9af9fa33e17bb77","modified":1480235675000},{"_id":"themes/morris/source/css/.DS_Store","hash":"a54418a616544fdde5491d74248542322f4cd8f6","modified":1488126225000},{"_id":"themes/morris/source/css/_extend.styl","hash":"2375ff754ec77724bd0913c637dd1e18bb85dfc7","modified":1487404933000},{"_id":"themes/morris/source/css/_variables.styl","hash":"bc1b7055285d48a3edc597371fca8af89b8325a2","modified":1487908130000},{"_id":"themes/morris/source/css/nprogress.css","hash":"b55a8dbdfa9d36abca00de45cf936911b249fb00","modified":1480217805000},{"_id":"themes/morris/source/css/style.styl","hash":"914d3a09286026f4cec9e86da5fd488771e58588","modified":1480007201000},{"_id":"themes/morris/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1480007201000},{"_id":"themes/morris/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1480007201000},{"_id":"themes/morris/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1480007201000},{"_id":"themes/morris/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1480007201000},{"_id":"themes/morris/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1480007201000},{"_id":"themes/morris/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1480007201000},{"_id":"themes/morris/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1480007201000},{"_id":"themes/morris/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1480007201000},{"_id":"themes/morris/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1480007201000},{"_id":"themes/morris/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1487408477000},{"_id":"themes/morris/source/images/icon.png","hash":"3cf501a7dd31a983ca8f5eff543b4851e6c9f05b","modified":1480007206000},{"_id":"themes/morris/source/js/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1480236499000},{"_id":"themes/morris/source/js/jquery.lazyload.js","hash":"1143a2858767562ab3ed62de213ced2d895e12ba","modified":1480007203000},{"_id":"themes/morris/source/js/jquery.pjax.js","hash":"f00ed14ba44980f4f2a4b60ac0a3970fb49b3d01","modified":1480007203000},{"_id":"themes/morris/source/js/jquery.qrcode.min.js","hash":"f424bd339870510d1160d1c5da5d698aedbb452e","modified":1480007203000},{"_id":"themes/morris/source/js/nprogress.js","hash":"a7e1146d2021c42e68b599dc8bcc69d44fc31df3","modified":1431513032000},{"_id":"themes/morris/source/js/script.js","hash":"11a9007e656ba77e02689c1a2f5a6c22bc408c5f","modified":1480149713000},{"_id":"themes/morris/source/js/typed.js","hash":"f1dcce0f2f1914bd98b603ded7f43dcd40b6d8c7","modified":1480007203000},{"_id":"source/files/shadowsocks-libev_2.4.8-3_ar71xx.ipk","hash":"234eb481b19bb6aa211a33d7267c91f7e2d1fbf9","modified":1480007207000},{"_id":"themes/morris/source/js/ukagaka.js","hash":"ba3523e2886260e9fe6b33978306f77ca427962d","modified":1480175862000},{"_id":"source/img/appnew.png","hash":"19ff71998907e92fa8b37ae8712e9f2b89af95a6","modified":1480007207000},{"_id":"source/img/apprun.png","hash":"41c048c53cabcd9e46458758ee388a2cd2e74a04","modified":1480007207000},{"_id":"source/img/arui.png","hash":"7257a877698ba4265ae0d61e6502ff182f695c97","modified":1480007207000},{"_id":"source/img/gagithub.png","hash":"393e9475073eac56a47a7a9761c047f37e1034cb","modified":1480007207000},{"_id":"source/img/gfwbanner.png","hash":"1d75d3bf2445a96562daf8d69aebf774c78899b2","modified":1480007207000},{"_id":"source/img/kcadownload.png","hash":"35753ab7acb66ad84a22cce4b53f2e1c06f95f99","modified":1483947146000},{"_id":"source/img/ngbanner.png","hash":"b4c41f917899437c53bb9fc21050efeca9ff3ef1","modified":1480007207000},{"_id":"source/img/opwan6.png","hash":"71ba62d2d0d67156ca8f651408aa651d3f65f36d","modified":1480007207000},{"_id":"source/img/ssch2.png","hash":"22fd5eb3788341df8d7f82264ba17014c1e9424b","modified":1480007207000},{"_id":"source/img/vpnbanner.png","hash":"b3d6a7bda5371dfca1afa38e8773e07c4db7bde0","modified":1480007207000},{"_id":"source/img/vpnmac1.png","hash":"cdc324907091641e82605aa470d1be803671f988","modified":1480007207000},{"_id":"source/img/vpnmac2.png","hash":"9357ab45e643ccc13bc16e9dd2013d26f98440eb","modified":1480007207000},{"_id":"source/img/vpnmac3.png","hash":"bc53f8f549ace9273e0acf9fcbb846f9f85e0531","modified":1480007207000},{"_id":"source/img/vpnnew.png","hash":"c4ddf0f0b93b9029dfe11835b881aeb9114b1616","modified":1480007207000},{"_id":"source/img/vpnvirtual.png","hash":"bc2b8a4a28c7453480bc58b5632ab16d0128d2e5","modified":1480007206000},{"_id":"themes/morris/source/js/animate.css","hash":"7ef721f3e1348296a20470da89fa87435d3c3d98","modified":1480007203000},{"_id":"themes/morris/source/js/jquery-2.2.4.min.js","hash":"69bb69e25ca7d5ef0935317584e6153f3fd9a88c","modified":1463765081000},{"_id":"themes/morris/source/js/jquery.als-1.6.js","hash":"7fdb09b7239557f755a139e41ead59684564cd31","modified":1480007203000},{"_id":"source/img/opnew.png","hash":"707724b2b2e854f5de7912ebdc5a408d785245a7","modified":1480007207000},{"_id":"source/img/ssl1.png","hash":"7b163b9da4ba672362dbbea339c0f90c9d3f0036","modified":1480007207000},{"_id":"source/img/vpneasy.png","hash":"cd8cb3b778e8720f9eb0ef2397acbed19445cc3b","modified":1480007207000},{"_id":"source/img/vpnhub.png","hash":"ffc8c2600f67230f30c218ea9a2d1530640cb7e8","modified":1480007207000},{"_id":"themes/morris/layout/_partial/post/date.ejs","hash":"6bb31784254b82fea1c7f8cd3e6d197dd0d97bc8","modified":1483936125000},{"_id":"themes/morris/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1480007201000},{"_id":"themes/morris/layout/_partial/post/nav.ejs","hash":"eb000d9d8a9ebd9087046fa019abe1cddae8fd9c","modified":1480007201000},{"_id":"themes/morris/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1480007201000},{"_id":"themes/morris/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1480007201000},{"_id":"themes/morris/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/comment.styl","hash":"a3a7297cfa05a76235f06d5a55f6f05ea4db392e","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/article.styl","hash":"658795f1d7b9b1910fc0fefafb89a719880a8b4a","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/footer.styl","hash":"206ceb9628358ce23ea8f06386bc373bdf9461db","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/archive.styl","hash":"1259c01a5fe451392a1f506ec5d3204a33052907","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/header.styl","hash":"8c45bf1962a742842e641238ea3d34d418f4b024","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/highlight.styl","hash":"ff42853f27c71b7e1274b859a6db6d4a90d8c74a","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/hex.styl","hash":"25a43c7032fd1e109091c4724f822048242f0efa","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/morris.styl","hash":"06854a77b9cff1f537f68e13dc075008c03fc861","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/sidebar-aside.styl","hash":"667699d4f7dc8ee055144380fdc9cd9681e7330c","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/sidebar-bottom.styl","hash":"f6023861b2fbd858946e2108438b5f8f17586179","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/sidebar.styl","hash":"9052280a4dbdea1abfe56a25f2b4e41fab946d99","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/tag.styl","hash":"6f6f58fe9f96a61f46154eca715b4c4aaab6b05c","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/toc.styl","hash":"2a10a61b5dee1a53518ea072ba0ffd370f172fc1","modified":1480007201000},{"_id":"themes/morris/source/css/_partial/ukagaka.styl","hash":"45ee471b7b803a73334400c972f7d2c40aa00704","modified":1480007201000},{"_id":"themes/morris/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1480007201000},{"_id":"themes/morris/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1480007201000},{"_id":"themes/morris/source/css/fonts/.DS_Store","hash":"ee1dbdf966f6b8816908fa8fe4deff01201d4e27","modified":1480216872000},{"_id":"themes/morris/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1480007201000},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1480007201000},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1480007201000},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1480007201000},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1480007201000},{"_id":"themes/morris/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1480007201000},{"_id":"themes/morris/source/images/kancolle/NPC 妖精 1号娘.png","hash":"fc29ca72ce77b7558b32968fbf173e4ec2ea71a5","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/NPC 妖精 3号娘.png","hash":"e855d226ec3015931d2e2f6736c187fe55176993","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/NPC 猫娘 FinalBoss 报错娘.png","hash":"9b15596289b719529bc4168150b1a691009dda61","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.1 Nagato 長門.jpg","hash":"526caae7747877cbdb15418c5a84af4ed2961edc","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.10 Shimakaze 岛風.jpg","hash":"77fe669f912e2b1b3f16bbd91a52f34170bb8bd4","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.10 Shimakaze_Kai 岛風改.jpg","hash":"6e892baa80d64eb41db5005693b84b1a7432086e","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.100 Chiyoda_A 千代田甲.jpg","hash":"7f3a62d34db9b073f38995656743b407bef30209","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.101 Mogami_Kai 最上改.jpg","hash":"9afe5d49aea981691b04f9e068484432756c67a0","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.102 Ise_Kai 伊势改.jpg","hash":"02b650f7a96ddabfb96ede4bd792ca3ba3920a8b","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.103 Hyuuga_Kai 日向改.jpg","hash":"4e4e0774387c34e225626f642502d826012323ca","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.104 Chitose_Carrier 千歳航.jpg","hash":"a914dbfa718b923b799a6c200769572471012541","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.105 Chiyoda_Carrier 千代田航.jpg","hash":"9f1ead8d68cc3d69bcfeec04f3d46bbc479b3c74","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.105 Chiyoda_Carrier_Kai 千代田航改.jpg","hash":"f784e96cc480d956abef60633aecd34144319fd2","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.107 Zuikaku 瑞鶴.jpg","hash":"daaf53e088fd75448957dbba0eaf4d2e13abaac5","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.108 Zuikaku_Kai 瑞鶴改.jpg","hash":"e2fc368490fb76d83e6b7cd228ad1094c098613f","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.109 Kinu 鬼怒.jpg","hash":"f254475f832d16087e1c034748d4ddcdc1bb26fa","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.11 Fubuki 吹雪.jpg","hash":"dfe7a4127a9c5eaddaf870115c0a354973c98828","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.110 Abukuma_Kai 阿武隈改.jpg","hash":"ae8c1dc18765286fbe100bc40e9fa5f604279032","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.111 Yuubari_Kai 夕張改.jpg","hash":"2ae9c10604e2822fdb0b8f0883255133eaa6d20d","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.113 Zuihou_Kai 瑞鳯改.jpg","hash":"5377ae54f15c8d3c015e8805fa6ab59e1829e080","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.114 Ooi_Kai_Ni 大井改二.jpg","hash":"b7acce66ec537d475c8ffd141e738242cb3ff81c","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.115 Kitakami_Kai_Ni 北上改二.jpg","hash":"82d349ea5310cb68e22ad7a4129a1a07a88300a7","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.116 Mikuma 三隈.jpg","hash":"f67b059f859bc7471204eed29d24bc94067bf01d","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.117 Mikuma_Kai 三隈改.jpg","hash":"da9c6ecae219002d9674b3c643a48c0be9e5b9af","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.118 Hatsukaze 初風.jpg","hash":"13694a038675265af9838ac45d21ed33476041db","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.118 Hatsukaze_Kai 初風改.jpg","hash":"a5a36d80e20b9c469d32570ea82ded6b7d8875a7","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.12 Shirayuki 白雪.jpg","hash":"a3207481da943f2872b378c610037cedb87e7f89","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.120 Kinugasa 衣笠.jpg","hash":"c4c25f77d8e3f4681d6b919efd2beec353fb92b8","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二.jpg","hash":"fca5428efc178eccbc432c38e4a2290b009ffd2c","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二.jpg","hash":"70c462438f679956d6c4303aee199be0ac033558","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.123 I_19_Kai 伊19改.jpg","hash":"1460d80c5281b5e31771eb22d8ef4dbf016744b4","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.123 I_19 伊19.jpg","hash":"2d0d0514e9ba78a78a1f19d6c0dadf8ff9486082","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.124 Suzuya 鈴谷.jpg","hash":"0cb5e0e2473388723ae87278409fb1c15472e72c","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.125 Kumano 熊野.jpg","hash":"560958b2ff047e69e0799d09a3eaa925b4edc12e","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.126 I_168 伊168.jpg","hash":"8da5e495a92c7a8f2bb76f7958ddac678ece0b14","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.127 I_58 伊58.jpg","hash":"fcfe55309b1e70e1000fa2df9cd7f30b966ee4c1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.128 I_8_Kai 伊8改.jpg","hash":"05e5dd5de413da09a7f5c7a7fd9c719f88fb1083","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.128 I_8 伊8.jpg","hash":"ed5dabd15cea2e38a0159c8d64051c8f434256e1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.129 Suzuya_Kai 鈴谷改.jpg","hash":"7402ee64c8bdc9a83474c4e3078253a973ed8341","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.13 Hatsuyuki 初雪.jpg","hash":"cc6aa2d2137472ceb4d4a3360db81f5509649b7e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.13 Hatsuyuki_Kai 初雪改.jpg","hash":"be84fe16d55a7c912f460f8db470a3ea91048b1f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.130 Kumano_Kai 熊野改.jpg","hash":"552d4365fad1bc9485f1cbe50f37214960b71717","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.131 Yamato 大和.jpg","hash":"d41966bebbb9068f191a03edde2c35c67fe7616c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.132 Akugumo_Kai 秋雲改.jpg","hash":"b5f17647a1e8ce525cbd9fae8fe5b2373c999241","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.132 Akugumo 秋雲.jpg","hash":"75053e277e9d8dc9010954fbfe6dbee962e6dbd9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.133 Yuugumo 夕雲.jpg","hash":"c94406f1486918f1bde90c3c37da340e16d6b7ca","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.133 Yuugumo_Kai 夕雲改.jpg","hash":"68478a18efeaeae602861cbb5ac2d1ce9a6a0c45","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.134 Makigumo 卷雲.jpg","hash":"1d890e0946721934bf2e00a7287458817a8ba8ac","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.134 Makigumo_Kai 卷雲改.jpg","hash":"62ad3f6b4a23af358d02bbc3a2abe02f2ce519ab","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.135 Naganami_Kai 長波改.jpg","hash":"1fc56d86766ebfb8f4ed9307cf2ea80770507ba3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.135 Naganami 長波.jpg","hash":"0c6337f5c25aa9ca386a0cd0d0adf3452743213d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.136 Yamato_Kai 大和改.jpg","hash":"0fbeb74ed81dcc08e7cf50cc835c144ca106fc14","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.137 Agano_Kai 阿賀野改.jpg","hash":"da3b0c9e52b442c26fc755563313dc24b950ee3c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.138 Noshiro 能代.jpg","hash":"e9bbbb1dd302efc3df6e2905622c63b8e9156d67","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.137 Agano 阿賀野.jpg","hash":"05a04ea21e0d15952cdb2429e498a851bdc3f0e4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.138 Noshiro_Kai 能代改.jpg","hash":"8fcde860fc830f75ec618c7ddfb0fac60059b42e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.139 Yahagi 矢矧.jpg","hash":"0b1ce220afb8c131abd0d8e972fb551f9b7d37d5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.139 Yahagi_Kai 矢矧改.jpg","hash":"2c2e910ef66352fe9045e2732a3d4427cdab0361","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.14 Miyuki 深雪.jpg","hash":"555e48db8415e065a99eda337d0ab199624cfdb8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.14 Miyuki_Kai 深雪改.jpg","hash":"27a55de4ff2e1ffbb3c1d579c7cb77b6e3aa80be","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.140 Sakawa 酒匂.jpg","hash":"732dce9d2c59748f7bf4b2bf885d21ad1a44644a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.140 Sakawa_Kai 酒匂改.jpg","hash":"720ef6e0256e796b48c80fa544b8f329c409bcdf","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二.jpg","hash":"7e41908109078fc106e9ea7f1857637ba95d0311","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二.jpg","hash":"624e155204475315d250518a221e7840fb8e4ad4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.143 Musashi 武藏.jpg","hash":"38286e7da337b7ca3b9db109c3a78e9c2288c165","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二.jpg","hash":"117ca363c60a42a0ad114d4dc4a0b9e1c26acdc0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.145 Shigure_Kai_Ni 時雨改二.jpg","hash":"e3ab5eca975df0618e585a93d1d1824da1ec7395","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.146 Kiso_Kai_Ni 木曽改二.jpg","hash":"883ae9792791085b384abff7eb3e24212167a65f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.147 Верный.jpg","hash":"dda3af140c26a5f539e0cea140da231ad2cc61e4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.148 Musashi_Kai 武藏改.jpg","hash":"586225d92a17d9f7a7299b5290114fcb3de9fc7e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.149 Kongou_Kai_Ni 金刚改二.jpg","hash":"8e5b99b7e14f163112069cbecdb5054303bc2bf0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.15 Murakumo 叢雲.jpg","hash":"3f410658367caade943bc6a2eaf5dccbdf01b1d9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.150 Hiei_Kai_Ni 比叡改二.jpg","hash":"c902be3e447803f1b8a92fdeba6000b9441dc317","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.151 Haruna_Kai_Ni 榛名改二.jpg","hash":"f3feebb3329fd8b11d1c9e6156a048e4192532f4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二.jpg","hash":"67ec9e2cbaa355911126f27cb6bdf7cccad33fa6","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.153 Taihou 大鳯.jpg","hash":"ab8373b88f619a69fa1325ba79fcdf6e099455d3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.155  I_401 伊401.jpg","hash":"768782e72aaed1b409c0f1d8e339a7382eeed28f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.155 I_401_Kai 伊401 改.jpg","hash":"6ceff7a451de2cedbc8d5f1c8476bd60fcb16037","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.156 Taihou_Kai 大鳯改.jpg","hash":"5adaae4382ad0caf55a82bff8809af3bccf32ad5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二.jpg","hash":"ea042ec8916460da45ee6772ec45c50f376c78e0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二.jpg","hash":"d70c60d3282003fa5d8fb7ce4ae43364c82e52fe","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.16 Isonami 磯波.jpg","hash":"153c42044f543d5e8b2443e24eb01e101b7e1e0e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.16 Isonami_Kai 磯波改.jpg","hash":"fbf2e8248298af5b2d4aaba5caf5d9027fb08830","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.160 Naka_Kai_Ni 那珂改二.jpg","hash":"85b0adc539bbe6a5bcc534cd82fcd75e18a7398d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.161 Akitsumaru 秋津丸.jpg","hash":"413b80676bf91d2bc02a476fa46df5deb8a804b2","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.163 Maruyu_Kai まるゆ改.jpg","hash":"12863b6f9d33288948890487b003b3f5c6eddb1e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.163 Maruyu まるゆ.jpg","hash":"0956f19adfaaff8ee90cd8309414caf249e6f357","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.164 Yayoi_Kai 弥生改.jpg","hash":"6f1b1a10d57af2cba57c36f515165fa1e416be3c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.164 Yayoi 弥生.jpg","hash":"de723f0c124c1d3cf9ac16d941ec85ecc74fe5fc","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki 卯月.jpg","hash":"23a1684807d257e11fb062e21edcf83a3b9fce0e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki_Kai 卯月改.jpg","hash":"55d08ad8aaf400f2511782d04d3695c4caeeaa77","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.166 Akitsumaru_Kai 秋津丸改.jpg","hash":"1b8e49aa54a29e7b42b83856f9a1c7bdc3ba07a0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.167 Isokaze 磯風.jpg","hash":"43f19b2e59226f911f352d96f7ebcf2827de7c26","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.167 Isokaze_Kai no.167 Isokaze 磯風改.jpg","hash":"2c447edf4e410100e43530e1ebdfd6da8d328160","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.168 Urakaze 浦風.jpg","hash":"b30497e80e06ce4a204a638d0aa91328c25b7d20","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.168 Urakaze_Kai 浦風改.jpg","hash":"8684fd8e60d2c27bc9d00b40151e0a059ceb2dfe","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.169 Tanikaze 谷風.jpg","hash":"beaac966e22794b3daacc939ba886e09e3182ab4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.17 Ayanami 綾波.jpg","hash":"a785f770573c780921710115efd0fbf2e68a734d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.17 Ayanami_Kai 綾波改.jpg","hash":"9a6e8085f4f9ce7a5e711b199f78469ecfde645b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.170 Hamakaze 浜風.jpg","hash":"c5d10df26753fb425782f5a5dc5fb3cd3760ccf1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.170 Hamakaze_Kai 浜風改.jpg","hash":"17667ffef6c1769165dbe292d6e5eaf26ba82b32","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.171 Bismarck 俾斯麦.jpg","hash":"f96752ba7146d707c0db038628921b9babb87123","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei.jpg","hash":"f2c950cc49d0a4f006760431dd3b431f253f54cb","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei.jpg","hash":"9a30ca16193e5908b2e935d5b982bbc9a60d65e4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei.jpg","hash":"92aecf39217735a2665b68905cfa07d11184340b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.18 Shikinami 敷波.jpg","hash":"0ae48d3c184107603366056d5eaf82c1f84dd385","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.18 Shikinami_Kai 敷波改.jpg","hash":"6a5d0f62a13b5ebc162d84cf409aa5250c04fa8d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei.jpg","hash":"ad5dca8348422cd1dcdd1fc79990fa57fd81c39a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze 天津風.jpg","hash":"2bce87fb66f7842bbbb583b5cc3fb603d53d396c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze_Kai 天津風改.jpg","hash":"2b6ff05a7c0d4c5d58dedd2f338b9cc4938220fc","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.182 Akashi 明石.jpg","hash":"9e8358e29e49181fdc6cd59ab20d66fe3837b946","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.183b Ooyodo_Kai大淀改.jpg","hash":"92980f62cc12c096179f453ec31daff33cb95e56","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.184 Taigei 大鯨.jpg","hash":"a1613b7db68c7ee79a63025016eb1c4cd441d113","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.186 Tokitsukaze 時津風.jpg","hash":"4321a0c8e3d87b638c6555a270df59e96a01b9ae","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.186 Tokitsukaze_Kai 時津風.jpg","hash":"77a1038fff13e6e5ae096eadca362248a0826822","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.187 Akashi_Kai 明石改.jpg","hash":"0bd9727909651e184b828dd819658138b2a29c14","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.188 Tone_Kai_Ni 利根改二.jpg","hash":"11ad863670b7b895fca89082a7d15c35d3353ee0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二.jpg","hash":"9153c00cc34448c7beb276668e08e9a3793c9e7d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.190 Ryuuhou_Kai 龍鳯改.jpg","hash":"a80fc53f7bdf93bb5234b567ec3df099ed59ffdc","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二.jpg","hash":"1c5976571b8ef9e81d22e012adbf290dc1f6e57e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二.jpg","hash":"1014360bec40c349909f2c80d9ea8577216847e1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二.jpg","hash":"93eb2789a6c09e94541c165cb40a3a5d272b0df9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二.jpg","hash":"ea10de6ba8dfd34367301ea0f1af982bb5d3d335","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.2 Mutsu 陆奥.jpg","hash":"5d15e0ad87456c11e1cc7fb8b57a52f1a9740c88","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.2 Mutsu_Kai 陆奥改.jpg","hash":"ccbf648756976e8d9bdf636927a550388bb8a196","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二.jpg","hash":"f6d06337d70ef36b27f778dff0e97e33588aa280","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.205 Harusame 春雨.jpg","hash":"51a214c55d4641a5a2caa15f3faa2757ec9dff90","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二.jpg","hash":"28f8b5d5b8018651f15243878482361286233e83","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.209 Hayashimo 早霜.jpg","hash":"a121b134585018a4f1bddd83c7c634148e7d1ac2","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.209 Hayashimo_Kai 早霜改.jpg","hash":"4d905dcf3d65c08f175ef7243a6634db7c419bd9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.21 Kongou_Kai 金刚改.jpg","hash":"cf8aa5ed908a530fb0559be822c951e293d100ac","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.21 Kongou 金刚.jpg","hash":"b606f5f43e92ecf84e64cc52e31e399ae579723f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.210 Kiyoshimo 清霜.jpg","hash":"867072e9f1ca3f78c50cfc63aa568d18143d18a5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.210 Kiyoshimo_Kai 清霜改.jpg","hash":"5060eca50050d3bbb2d9010785fab1a9de1e957b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二 立绘.jpg","hash":"df0b6cad0a50e06f38c4c6490272f8a5d13441a0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.22 Hiei 比叡.jpg","hash":"2b328d7bd4202100c800b2b681029e9b07c02407","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.22 Hiei_Kai 比叡改.jpg","hash":"b8c9d5568ebea7b20495973a95a326736c8b0b37","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.23 Haruna 榛名.jpg","hash":"c08c663593a343e3bfb03ca5be61420da505cd30","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.23 Haruna_Kai 榛名改.jpg","hash":"0582a0de735ff0dd3b9bd615cefdf3df5eaccebc","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.24 Kirishima 雾岛.jpg","hash":"7155ed901c2fc2cb5e1ebf255d6536aeb216c7c8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.24 Kirishima_Kai 雾岛改.jpg","hash":"86322a1b58e1061e3313a9a0813210fe2eccd4e9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.25 Houshou_Kai 鳯翔改.jpg","hash":"e64050549e13e45630fe9b4b7cc8e733d6ede852","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.25 Houshou 鳯翔.jpg","hash":"08a1fc3d577e8d3a4787651bee4effdfba8f8e2c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou 扶桑.jpg","hash":"b3b69c5871c4fc5a5988f2fffa59652e944bb67d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro 山城.jpg","hash":"bbf191b10fa2a6a29fae6c02662279812a42893a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou_Kai 扶桑改.jpg","hash":"11e24ee22b11601cb56914f64e6cfa1053470954","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro_Kai 山城改.jpg","hash":"9fcd0fdb0f87068af8e5eff1dfbfa88f1f3ebebc","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.28 Tenryuu_Kai 天龍改.jpg","hash":"341116eaa57a844c6f6deeec86ef547bc51adbb1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.28 Tenryuu 天龍.jpg","hash":"fb77f7c7d788abded02c0e3a44420b1970ea5b1e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.29 Tatsuta 龍田.jpg","hash":"fdb8942d0c9c26793ef6b0e28c3828d6ac0b310c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.29 Tatsuta_Kai 龍田改.jpg","hash":"5c18784085d45713fa5e08b9d98b02e235c9afa0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.3 Ise 伊势.jpg","hash":"cd32f58477850af550783f95b80a9145cb1413a3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou 龍驤.jpg","hash":"934a8bcb35db1b97f49539a59f18112c9ee275d5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou_Kai 龍驤改-2.jpg","hash":"2f1aff46f951f49a715dc2647c4c1dcc42ea241e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou_Kai 龍驤改.jpg","hash":"65f90e33e0fa3b009fed5aed7a9771ad64bbbf59","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.31 Mutsuki 睦月.jpg","hash":"a02e749bc4ab85fad52f49eceb15618e763bd7c9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.32 Kisaragi 如月.jpg","hash":"54e1d5dd7eecd737f390194fe31780c755b6c108","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.33 Satsuki 皐月.jpg","hash":"11d5922e18abeb806faa0647af350d990c3a3473","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.34 Fumizuki 文月.jpg","hash":"1c2a2d5900e04bd1eaef546e59fb2fba45877d02","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.35 Nagatsuki 長月.jpg","hash":"78deae5445ba3b3075613ea59ef14c9e57620ba8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.35 Nagatsuki_Kai 長月改.jpg","hash":"98890b5c9ef72af854921f6e8e17680f47510e2f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.36 Kikuzuki 菊月.jpg","hash":"d9ad66c011bf6be71664ff9244566e0752bfe34b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.37 Mikazuki 三日月.jpg","hash":"90e4dfb308a35ce5bd227b7d7dea7b8f63700983","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.38 Mochizuki 望月.jpg","hash":"0219354840aabfc1f6d9c2637478eb21472c8de7","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.39 Kuma 球磨.jpg","hash":"1297bc95a14010fd2e539fc62f8a2b4b2fd025f1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.40 Tama 多摩.jpg","hash":"5c98eab9c3dc211c190d03fe8dd5a9e948af3328","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.41 Kiso 木曽.jpg","hash":"d9f4a9f9fa21f5a2209a6d0dffa44e29fdb6ef03","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara 長良.jpg","hash":"447dd7f5d56d80341397b1a042784910baea8de5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara_Kai 長良改.jpg","hash":"028380784f893a124896917d841cbd4af611d115","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.43 Isuzu 五十鈴.jpg","hash":"301314aedbc43909ab5d47e893b854198b1d71d6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.43 Isuzu_Kai 五十鈴改.jpg","hash":"1b4a7ae3206b6ba53579799d4ef11fd564832cba","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.44 Natori 名取.jpg","hash":"b2a032bda051fca7ad7f4f834918398fd47480d3","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.45 Yura_Kai 由良改.jpg","hash":"cff99117f9db35a693c9383b6f257a74828f5294","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.45 Yura 由良.jpg","hash":"b11a2ec41e61eb02765eb12e1cbabc0ef5870b37","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.47 Jintsuu 神通.jpg","hash":"de23ade3fdc0f22c8696171ba09c251f3a8d5069","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.48 Cristmas_Naka 圣诞那珂.jpg","hash":"b8eea43d2e8241d550cc8152734d5d87b3ab07d4","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.48 Naka 那珂.jpg","hash":"e0f17369c403b32f603a35a0e71f8244e20f389a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.49 Chitose 千歳.jpg","hash":"3ac0f25dc2110efcce00279f3565159fff8a58d4","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.5 Yukikaze 雪風.jpg","hash":"64d99f302924861add68f8f0eada72c19d96fb71","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.5 Yukikaze_Kai 雪風改.jpg","hash":"0397baa7588514eeb8aed448f648e4881c2de79d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.50 Chiyoda 千代田.jpg","hash":"9bd8eeed74026228d811cbdf9668a4b55b7f98cf","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.51 Mogami 最上.jpg","hash":"a54c9139fcd4fb10ed922cd7743adfd6c0bc2b5d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.52 Furutaka 古鹰.jpg","hash":"073ef202592d666a7ab3f4ca423d5f0237c04fde","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.53 Kako 加古.jpg","hash":"de6d11bda3876eaa1083fa3aa1af43c377f158ec","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.54 Aoba 青葉.jpg","hash":"5f7f43705bfa816c217828cba45c76bd2f338707","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.55  Myoukou 妙高.jpg","hash":"269983842a361b17580afaa2d70c7a78d285286a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.56 Nachi 那智.jpg","hash":"5ce53c9438012b2398ed5f64f57fc5bf6f216011","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.57 Ashigara_Kai 足柄改.jpg","hash":"1d4a7ea053e025010aa36f9532410cf95d65396e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.58 Haguro 羽黑.jpg","hash":"1d167e61a185051740b7297a10962711a0bc6dd7","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.57 Ashigara 足柄.jpg","hash":"59599ef2ac4bf7c88c529db59945f82e2795186f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.58 Haguro_Kai 羽黑改.jpg","hash":"3146c8463eebb58c4336b060f76ed376c1d4b354","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.59 Takao 高雄.jpg","hash":"b99edfd564d4078441746c018c3242619fac91a4","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.6 Akagi 赤城.jpg","hash":"33e786afb2c69062587e12da10bcdeacd86050f2","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.60 Atago_Kai 爱宕改.jpg","hash":"5d6df108ce0431081e787fa781400727f65304a0","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.60 Atago 爱宕.jpg","hash":"f8bf7286875a872c84b9c1651ab25b7ab492d166","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.61 Maya 摩耶.jpg","hash":"0f3f7f1038e1cc22183076ec2bbd67274025acc3","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.62 Choukai 鳥海.jpg","hash":"c2299cc8944844d48705001efbdd4434c66500a2","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.63 Tone 利根.jpg","hash":"92684514094df00408c6b59a245fa687704bfb4d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.64 Chikuma_Kai 筑摩改.jpg","hash":"7c042d42ee43b7dcf175561b672f61d7c71b18e0","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou_Kai 飛鷹改-2.jpg","hash":"7ee55ad19ebd2868ccc778ca946ae6d752736184","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou_Kai 飛鷹改.jpg","hash":"d2c3ca8a89e5f1633b10203bf5fb2a560c430259","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.67 Oboro 朧.jpg","hash":"bc8b941d12316bc4f79cc4d13ffd5f433228cf27","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.69 Akebono_Kai 曙改.jpg","hash":"e2a940996ad86cece6edc61eeda3317c3d894662","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.69 Sazanami_Kai 漣改.jpg","hash":"75c3f24981c0fc22f55141a082387eab1093cde5","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.7 Kaga 加賀.jpg","hash":"b0dc9f958478656511e79551b25fb099d69e8429","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.7 Kaga_Kai 加賀改.jpg","hash":"184174cbdef3c561021391761a1a2df3a7dada47","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.69 Sazanami 漣.jpg","hash":"a2564c8f74d0785a016fb87af5b754ba504e28e0","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.70 Ushio 潮.jpg","hash":"84caf27cbffd8ce5b00acdc0960a3e0e1eb1f0f7","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.72 Hibiki 響.jpg","hash":"9aac1b8c68c2aabb6fadffd9b0a05766c8e7e29a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.71 Akatsuki 暁.jpg","hash":"0471a38656cc85fa6ab7c76b010583ff3a418135","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.73 Ikazuchi 雷.jpg","hash":"19997c12ddfbd15c8a1510346479617a4a3b878c","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.74 Inazuma 電.jpg","hash":"5425b33a22e8292f292b5701d032953c2be709b7","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.75 Hatsuharu_Kai 初春改.jpg","hash":"37bf30d8136a21fbb4ba7b369a0275e0a4fe6aad","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.75 Hatsuharu 初春.jpg","hash":"8f38039dc50ee94daeb3de7179020bc91328fadd","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.76 Nenohi 子日.jpg","hash":"e2daff72f82cc6ef11c839c5cd01d4139912356a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.76 Nenohi_Kai 子日改.jpg","hash":"cc45271e72472a6373891c1e914ed0baa83167a2","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.77 Wakaba 若葉.jpg","hash":"993abf4903cb2fc34742fefff302a788b3bce83f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.77 Wakaba_Kai 若葉改.jpg","hash":"9fd07114f054e1e50afdbed62a518dca472c88a2","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.78 Hatsushimo 初霜.jpg","hash":"14825e1b3b4f08ba23dafd110f4b2b592c442683","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu 白露.jpg","hash":"9a3ed546a81bd07e967ce817fbdd58e683d05044","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu_Kai 白露改.jpg","hash":"b575e6b138103c8991ec3f8e8fdef03d2646b3c7","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.8 Souryuu 蒼龍.jpg","hash":"d255f010e959820e4199d1b3c079f0ff40f53eb4","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.8 Souryuu_Kai 蒼龍改.jpg","hash":"5b24d343e2b137b89530fc162767e6b0d4a734dd","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.80 Shigure_Kai 時雨改.jpg","hash":"15a29d3701fa20dd3f9cf68ba0cc1e8589bfa191","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.80 Shigure 時雨.jpg","hash":"a0b7bc338226ed3ce62039bf88ea2aa9830eae8f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame_Kai 村雨改.jpg","hash":"635a765df576c3bd3a4a4aa7d1ac0f18085f30f0","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame 村雨.jpg","hash":"7b31c36bfd0a48bd6b0de919f989be4ec005f108","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.82 Yuudaichi 夕立.jpg","hash":"e4db85e1a380f6f7fa3340a783deeb4cb0dd2428","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.83 Samidare 五月雨.jpg","hash":"5af42a90438c7993f035bb7c196688f8f95ba4ea","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.83 Samidare_Kai 五月雨改.jpg","hash":"a4f44ef801a564b9dca429ba0d1c87d04ecab85e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.84 Suzukaze 涼风.jpg","hash":"de0c7973a56bf85d08d16ee589ad8c71d72b09d0","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.85 Asashio 朝潮.jpg","hash":"056d78aa35b7595ef894b82ede7bdfdf1cbaaa45","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.86 Ooshio 大潮.jpg","hash":"a9f372900129703690061c787f1f6da2d04553c7","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.87 Michishio 満潮.jpg","hash":"498f75c8caedb91a202ee38699dfe092b71b840b","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.88 Arashio 荒潮.jpg","hash":"d2d878b69806fc9f67c16916521afd327be5ff1c","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.88 Arashio_Kai 荒潮改.jpg","hash":"e46bc90c9c4729cd32ae177e50bb8fa07eaaa803","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.89 Arare 霰.jpg","hash":"250b5732ad25046fc89d7e6cd7ab42e5690faa7e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.89 Arare_Kai 霰改.jpg","hash":"738b194a81d4ed45aeedc49ec1b30d34dba866cc","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.9 Hiryuu 飛龍.jpg","hash":"723bad9d0243beac69c8375ec3853b158ae198f9","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.9 Hiryuu_Kai 飛龍改.jpg","hash":"acc8b302c7113549ae73f2cae3b38c062d78bba3","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.90 Kasumi 霞.jpg","hash":"1c341aa634f841d69a05bec077cfe6d3ab5df2c5","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.91 Kagerou 陽炎.jpg","hash":"e6cf16c15941ceba7705552bb227da8eaeaaa805","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.92 Shiranui 不知火.jpg","hash":"9168252822dee4252ab791189ea76e65a1f72712","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.93 Kuroshio 黑潮.jpg","hash":"09d56f7b4c459e9b20a5c4aa5e9dfade95232113","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.94 Shouhou 祥鳯.jpg","hash":"5c6ce00f3b1a9c6001c7f8bbe7d88ff24788e018","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.95 Chitose_Kai 千歳改.jpg","hash":"4b757380323011f19123cb9f96944d36f53ba8cf","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.96 Chiyoda_Kai 千代田改.jpg","hash":"b6232e76aeb6e438d96f6ae069c7b28ac0c8020a","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/no.97 Ooi_Kai 大井改.jpg","hash":"22061e0fbeb8622907e3d7a5518e18f21120c583","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/no.98 Kitakami_Kai 北上改.jpg","hash":"80105d31b14830fab1b9bfc8a62ad1fedcf2870a","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/no.99 Chitose_A 千歳甲.jpg","hash":"b5e9f736bcb5c1d8ee658260d9d33606571cddc5","modified":1480007203000},{"_id":"source/img/kccode.png","hash":"cf5c581143d5d8c51f66c596b734d46e2b299195","modified":1480007207000},{"_id":"source/img/opipv6.png","hash":"3dd0d6a5a557a920fb625058d4bf4fa88fba234c","modified":1480007207000},{"_id":"source/img/vpnl2tp.png","hash":"c65dd0f80cc0cde4b80bb4aa1a589ef9da1e2d1d","modified":1480007207000},{"_id":"source/img/vltest.png","hash":"74bb455124cefd4bfe7c28f3444a2e9b8667f9b3","modified":1480007207000},{"_id":"themes/morris/source/images/lovelive/eri1.png","hash":"0e806941aa2e21bf25bdee4be27982ece7be2a09","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/eri2.png","hash":"35b56797997fea6daa1e4e190472c29d889e9c8c","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/eri3.png","hash":"c052b8105c916be320cf97c71f447ce4f1b53360","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/hanayo2.png","hash":"1ceb02d9af2cb16719e771060eb4cb7b18bfdc5e","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/hanayo3.png","hash":"e0b5ea2dd0215eeeeb442a13f2cb42d27c0f7ac4","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/honoka1.png","hash":"6638603eec31aad0c406bc987616643d404e78ce","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/hanayo1.png","hash":"ac1351f4c86f1f5c0ebf31ceeab51cf17226cc1c","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/honoka3.png","hash":"071ed5c965e508d3df15ba4a7aa4b64f3a6acf62","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/honoka2.png","hash":"fd48287b79621666066318a7f4417279b418ccc3","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/kotori1.png","hash":"64c3f19f9eb9a4537e401efe81d9c5cc93ea49f6","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/kotori2.png","hash":"cd95bc6f6e6de4839d9b9667536605bd54fd5fc2","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/maki1.png","hash":"64b8f12af91d43494cf9a83450272be92ac9248f","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/maki2.png","hash":"2505675d65322f5ee7857b16f227b3f78e864a4f","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/maki3.png","hash":"75ec77ea22392f7fbff27a566dad549fb0dc0b3b","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/nico1.png","hash":"3b1a3b740d96b13616f4230b9f054bdffbcce4f0","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/nozomi1.png","hash":"a70472972513fd7a8d949f78c09121d7b72cceb2","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/nico3.png","hash":"8427682cf5fe5669741bbe9e4a8ebe41ae513078","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/nico2.png","hash":"1da953945aa80875333af1797c74bc5a06134186","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/nozomi2.png","hash":"31be1be6c6b186fb966333e51ce5b98459ad3411","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/rin3.png","hash":"7dd59b672e05d62e65804b957a06f515a1ae6ea8","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/rin2.png","hash":"f28d37a7c6711420dd18bc898c455dd995df0b89","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/rin1.png","hash":"9d8763bc03722cd2d8ee057bb2d43424aa4a2b38","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/umi3.png","hash":"208855518f75b245a1c50e5c3ab23bfb4789a524","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/umi2.png","hash":"7e7be63488844705796d9fff47b1201230b36cba","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/umi1.png","hash":"7b08be45718aef1c3b718b98f7e705b0cf6571d0","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/NPC 妖精 2号娘.png","hash":"1a9ceeb9df0587094bc4baad75237284dd65227c","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/NPC 給糧艦 Irako 伊良湖.png","hash":"5dd77c8b0d9b40f1618da7c832f6639296599e26","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/NPC 妖精 4号娘.png","hash":"0d1f37acb097aa4df819c02bf35e28fa0edd75b9","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/NPC 罗盘娘 Compass 2号.png","hash":"7a1d43f7164e54d561968b3d7eee8775207fed9e","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/NPC 罗盘娘 Compass 3号.png","hash":"a0b07fa9529257a96fa30e8450f6777cef4b3069","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/NPC 罗盘娘 Compass 1号.png","hash":"00018ee83bebf81036cf6c9be6e3f06fdac67e02","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.1 Nagato_Kai 長門改.jpg","hash":"fff7bd54426ffccc3d702a8f518a689bd13772bd","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.104 Chitose_Carrier_Kai 千歳航改.jpg","hash":"2aaeec3591af8818d60a43ee7ffb5f12eb9ceebf","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.106 Shoukaku 翔鶴.jpg","hash":"cdcae3fdde9938841aab614b5385dfdd7e68b4ef","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.106 Shoukaku_Kai 翔鶴改.jpg","hash":"797ae92e79e9499968777c901de3b72dcdb1c278","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.109 Kinu_Kai 鬼怒改.jpg","hash":"59ad66b6b192fb78c3454784346adfd6f333db86","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.110 Abukuma 阿武隈.jpg","hash":"e647e502c519e4d7d56d3b3b1e00547e257b7d76","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.111 Yuubari 夕張.jpg","hash":"650791554848fb774fa414a3d3e4d481cc9cbf95","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.112 Zuihou 瑞鳯.jpg","hash":"bf26dd30b8c40b8b7541e01f71111cd879384f39","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.119 Maikaze 舞風.jpg","hash":"6e5bca1143b14a12d0ab5baa8196f3bb1ae43999","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.11Fubuki_Kai 吹雪改.jpg","hash":"45fd63e691f5566dd315b54fc6c6083e3553bf9b","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.119 Maikaze_Kai 舞風改.jpg","hash":"461d21945043ad2d102397501ad283ce34d42bb4","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.12 Shirayuki_Kai 白雪改.jpg","hash":"77cd189efbb83c27a60f9fdb5814c9eb44f1ed65","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.120 Kinugasa_Kai 衣笠改.jpg","hash":"d410e96b46f4fcf2cb159f2171fd805229c4b4c6","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.126 I_168_Kai 伊168改.jpg","hash":"ce68908e64ed66516de48dbb40c9d136b365290d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.127 I_58_Kai 伊58改.jpg","hash":"d49f0cdd9c31d942502d57939139db6e46a73e2e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.15 Murakumo_Kai 叢雲改.jpg","hash":"39e298faf5131bb5dfe60da5a842e648b6d2aa41","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.158 Sendai_Kai_Ni 川内改二.jpg","hash":"726390e11abf83bdd6c531e661a125016c57ac48","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.169 Tanikaze_Kai 谷風改.jpg","hash":"5c87ceebd086a8c3c78eeeaf091fa16600add5f8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.176 Prinz_Eugen 欧根亲王.jpg","hash":"a6c18a44a54e19ea19d9bdfacec94e6d57dc621a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改.jpg","hash":"ec8028d2ebcb90a6f56d9576b3bf0877fd03e5da","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.183a Ooyodo 大淀.jpg","hash":"2c5df88496fe2e80a86815d50dbe394b81ac9191","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.185 Ryuuhou 龍鳯.jpg","hash":"fefe5b0b01f9ad7ac12548747993256c01ea48ff","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.19 Ooi 大井.jpg","hash":"6a468e36ce53c0d52c3efe1ee5f97c35c9c170e1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二.jpg","hash":"a7002946ddd725621ef16515ee67ae7b183753f5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.20 Kitakami 北上.jpg","hash":"7c3f14853750ca44fe0b54bfd0b2f68895c93bff","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.201 Unryuu 雲龍.jpg","hash":"dedbe31f050924fe3798234da5d89d5e390b14b6","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.205 Harusame_Kai 春雨改.jpg","hash":"737a8f0342e67c208329d009fd35d974f96c22f7","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.206 Unryuu_Kai 雲龍改.jpg","hash":"57cbf754d2e4e43c22fce8b0283bab96e8e188d7","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.207 Ushio_Kai_Ni潮改二.jpg","hash":"bb1d78becf634705dcaee1dd213172c9570a9f9e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo 朝雲.jpg","hash":"4494d2c89bd1492e4c7ad12c2f67700134bc08cd","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo_Kai 朝雲改.jpg","hash":"b20353ac98d31a1223ea7f836a5a030852ab730b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.215 Nowaki_Kai 野分改.jpg","hash":"3663bacf145abe04fe87bbcad630dc386379f755","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.215 Nowaki 野分.jpg","hash":"35b7d0bd98d8336ae581664fb68c637ce14a5271","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.221 Akizuki 秋月.jpg","hash":"d9869081a465e32eb56e800d6fdedfc57c42b3cc","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.221 Akizuki_Kai 秋月改.jpg","hash":"3c75ecd22871fe4e905907ab0d1a54585f765cad","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.31 Mutsuki_Kai 睦月改.jpg","hash":"3e8fcabe567a261387f1fb2c8a08251a4c5566df","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.32 Kisaragi_Kai 如月改.jpg","hash":"d059fa0b2a88b5f5ae61067ca7ad5c9a60a75e58","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.33 Satsuki_Kai 皐月改.jpg","hash":"32eeccfd18da429e78cc11de3333237116bebd47","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.34 Fumizuki_Kai 文月改.jpg","hash":"687de0d5aeaaf877c8bf584141cff055959edf60","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.36 Kikuzuki_Kai 菊月改.jpg","hash":"54134aaabe2cbb05ab12525d887bfde7bdd5b254","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.37 Mikazuki_Kai 三日月改.jpg","hash":"ec305fe6064a80b211ec24c53b743acef7f3d548","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.39 Kuma_Kai 球磨改.jpg","hash":"00ba02e271ed46e7043e808d6a2896e18f7f0952","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.38 Mochizuki_Kai 望月改.jpg","hash":"ce15d670927224e2162ebb2ebecf5a65def2c626","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.4 Hyuuga 日向.jpg","hash":"297024b4a561bf25469e01de167d2584886634f7","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.40 Tama_Kai 多摩改.jpg","hash":"6d95b6f00111521d7b39ddd7e017338e6b49a9cb","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.41 Kiso_Kai 木曽改.jpg","hash":"754e635f9740171cc6f8b3e991c77037f3e724cf","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.44 Natori_Kai 名取改.jpg","hash":"703243d8cd467a8b4e2b35627ec936dd49bc400e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.46 Sendai_Kai 川内改.jpg","hash":"14c1f483794dce215753ccbacdc601a4e3291589","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.46 Sendai 川内.jpg","hash":"fed295b991f22a929b56cf989f5562e366e1de9c","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.47 Jintsuu_Kai 神通改.jpg","hash":"572c33c88f55cf9dcfd2942753f12148ebe129b1","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.48 Naka_Kai 那珂改.jpg","hash":"2b0d48890812410ca814e9e9c0fd8ad5338743a1","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.52 Furutaka_Kai 古鹰改.jpg","hash":"e65be7013ad7323c2232b8429e0650e039b52d21","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.53 Kako_Kai 加古改.jpg","hash":"f5d8ed08cad28c0aaeeab45e904bd15473461488","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.54 Aoba_Kai 青葉改.jpg","hash":"8ec7b0dcb99c6a1ab5bf9e96d375cd2d7cd3a428","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.55 Myoukou_Kai 妙高改.jpg","hash":"c73921d0a0bedfdb70d1c5602d5b2708fbeb35e7","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.56 Nachi_Kai 那智改.jpg","hash":"ad505ac4a2d8b8c6418f269965e87759be61bfc1","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.59 Takao_Kai 高雄改.jpg","hash":"25c8142383495a7e3539aad3d087796d8b1b01e2","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.6 Akagi_Kai 赤城改.jpg","hash":"3ae436c04f6ff4e2cd055f9e95f19565a0fdc59a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.61 Maya_Kai 摩耶改.jpg","hash":"21d8ce181e834a352756be552b146a548b9cd855","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.62 Choukai_Kai 鳥海改.jpg","hash":"8a5be9c1ce18c92e6935da120c1a17de6105d8a0","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.63 Tone_Kai 利根改.jpg","hash":"dd3f144d6bdf47fec18340635ac71c29df8fe437","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.64 Chikuma 筑摩.jpg","hash":"f2b3e70adee2f4154c6a3963232d5b32cdf592d6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou 飛鷹.jpg","hash":"ba048c93fc8de83cda1af87dbc161164abbbac18","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.66 Junyou 隼鷹.jpg","hash":"dc080637412ad1360927f3b229c3f6257b4ee9b6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.67 Oboro_Kai 朧改.jpg","hash":"eab366b307444350556b4a2e64e3de85e263d2be","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.68 Akebono 曙.jpg","hash":"37928a0eeff2218d313c390093e479f227775884","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.66 Junyou_Kai 隼鷹改.jpg","hash":"4f28ced18eede61056e26df77675cd5cb15affec","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.71 Akatsuki_Kai 暁改.jpg","hash":"8867b3e27445dc5f9bc8ba8c39cf99bb551dfa17","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.70 Ushio_Kai 潮改.jpg","hash":"16093d9efac0368aa3292fb4bc1de778b086b78d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.72 Hibiki_Kai 響改.jpg","hash":"854c4ad91c1dd600f3d3015ceb8ab64c34c16911","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.73 Ikazuchi_Kai 雷改.jpg","hash":"3c93f3463e3421e38aa075cf33078d5b5265cb95","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.74 Inazuma_Kai 電.jpg","hash":"c31464c30a424bb64b3003d37640004113a9844e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.78 Hatsushimo_Kai 初霜改.jpg","hash":"fe640ddde787d314ec7a6f911e3b8bda1edc8d08","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.82 Yuudaichi_Kai 夕立改.jpg","hash":"3277a1f838b43fa7a0387773b348cbbe225775f4","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.84 Suzukaze_Kai涼风改.jpg","hash":"2e96d22a07beec2eba9ce3d1128427c6bc926017","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.85 Asashio_Kai 朝潮改.jpg","hash":"4b84e0fecca6c0bad2aac8720fd602d420423683","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.87 Michishio_Kai 満潮.jpg","hash":"02e22300627638a5fd8ff1a5969d371120b7d716","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.86 Ooshio_Kai 大潮.jpg","hash":"8952393792bfdec2ea21f4e1c4b67e2c4e498b2f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.90 Kasumi_Kai 霞改.jpg","hash":"87c4b8d3bf2d99d372f34ae145e9aac78b199777","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.91 Kagerou_Kai 陽炎改.jpg","hash":"7659a27c5aca14f1531cd7553333aaad0cc6ad67","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.92 Shiranui_Kai 不知火改.jpg","hash":"600d21b273bfc781737defd4b16d773111481baa","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.93 Kuroshio_Kai 黑潮改.jpg","hash":"7d9818862c2a1828fbef58960b6113125800f068","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.94 Shouhou_Kai 祥鳯改.jpg","hash":"5815d1f924ae6c8887f03e19851b3162889c949d","modified":1480007204000},{"_id":"source/img/terbanner.png","hash":"1b44aa42d550bbb09e19bbd729675f98bdd82ab1","modified":1483948669000},{"_id":"source/img/vpnmanager.png","hash":"663c1789b59a9a0299e443619abd64f0f4b1ce21","modified":1480007207000},{"_id":"source/img/vpnovpn.png","hash":"d732dc123b652242aa3ac8ea9fd5914333230962","modified":1480007206000},{"_id":"themes/morris/source/css/fonts/NotoSans/LICENSE_OFL.txt","hash":"ec660b17dff69058c2bbf122ca85ab83b920fce7","modified":1477387516000},{"_id":"themes/morris/source/css/images/banner''.jpg","hash":"a9856a13cd01521eb17ee983d31d563f1b7dba0b","modified":1480007206000},{"_id":"themes/morris/source/images/lovelive/kotori3.png","hash":"1c72f7ddf6e3a2e74baebd88ab30877b3ca76d31","modified":1480007203000},{"_id":"themes/morris/source/images/lovelive/nozomi3.png","hash":"0d6e18426bdb1ce541e4cc37535beee28f88d39e","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/no.158 Sendai_Kai_Ni 川内改二 中破.png","hash":"530e7674c1eb7604a00e52a5bd24dffd91c536cf","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.161 Akitsumaru 秋津丸 中破.png","hash":"57a7867bca0094ef203ea27008f3b6a71f32a380","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.160 Naka_Kai_Ni 那珂改二 中破.png","hash":"482134721b41469e3120d96f5bba91fc9e10bf47","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.161 Akitsumaru 秋津丸 立绘.png","hash":"94440738239c56faa9e2ca3d4f633d7d4032d351","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.163 Maruyu まるゆ 中破.png","hash":"d58792d9bc797fedce0a4f8ee2bf2199b5038354","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.163 Maruyu まるゆ 立绘.png","hash":"32c72d542177a0c7143c49491127740f08a5f8bf","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.172 Bismarck_Kai 俾斯麦改.png","hash":"e603a06cfe4fa8a6b8e1fcbdc33c13124bf4f1de","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.174 Z1_Leberecht_Maass Z1.jpg","hash":"168a04a5ce323ab69b32fec9d758cf72fd2a86f5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.174 Z1_Leberecht_Maass_Kai Z1改.jpg","hash":"ee93b390e54e6d598dbbadec04f9807a8732d598","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.175 Z3_Max_Schultz Z3.jpg","hash":"6cb3afb7b6215254f780ff3b11cce433b62a9dda","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.175 Z3_Max_Schultz_Kai Z3改.jpg","hash":"3deb49d005514f3e82e352197ae9b2099d598bf7","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.188 Tone_Kai_Ni 利根改二 中破.png","hash":"6c7a51b81f217bea277d31f4cd2acda37ea39924","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二 中破.png","hash":"15af803645fca1f740925d338d18526e460c0a15","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二 中破.png","hash":"5ed7555196f663935bfb4186027d8bcb4dd535d0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二 中破.jpg","hash":"3ca163651194ba742fa96cffd1ffe0561aebf76c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.211 Fusou_Kai_Ni 扶桑改二.jpg","hash":"49cd5aa2e69b49dd33b02488abe54c42c6453daf","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.48 Cristmas_Naka 圣诞那珂 中破.png","hash":"4a37df0dd1acfa97b56d9b3dea8da47e2eeb0f07","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.58 Haguro 羽黑 中破.png","hash":"6b0670d32ca2555dc60b190e75271f8b43f5ad43","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.58 Haguro 羽黑 立绘.png","hash":"ab242bc02f5031b0bd31acbca7ecdeea806dcadc","modified":1480007204000},{"_id":"source/img/dubanner.png","hash":"4aee2aa5cca1dd836a07758bac869da8f34471d6","modified":1480007207000},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1479707114000},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1479707114000},{"_id":"themes/morris/source/images/kancolle/NPC 任务娘 Quest 大淀.png","hash":"015757ed217b2e719d764e64a335665677f416fc","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/NPC 罗盘娘 Compass 4号.png","hash":"e0c4077b672eeb57f71ff6107408accc0642a877","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.114 Ooi_Kai_Ni 大井改二 中破.png","hash":"228f61f837e50068013d4bf256a0d6f57459337c","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.115 Kitakami_Kai_Ni 北上改二 中破.png","hash":"17d1ec6552454e1fc930325ca8c809ad0025ecab","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.123 I_19 伊19 立绘.png","hash":"5cfc7c98461d571ea31f94c0e3a1d7ab50cb4dcb","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.130 Kumano_Kai 熊野改 中破.png","hash":"f4b8e07c314a99dd028733922b2490f38020b0a8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.145 Shigure_Kai_Ni 時雨改二 中破.png","hash":"471d302c78b18f96b5dc348a18ef681510fa38e1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.155  I_401 伊401 立绘.png","hash":"8821958f713152d6f73f76c9b580f37c23b90da3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.155  I_401 伊401 中破.png","hash":"ad2bc1d6ef50067b053f42e47a115546b7f56e2e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二 中破.png","hash":"0361172e98530d156b37024fe8ac46a0b9072312","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二 中破.png","hash":"bf85a86e9aa8dd65547a5aaebafff1bd58029604","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.164 Yayoi 弥生 中破.png","hash":"66863be74980cba5c87ad051a1b9ba32a5c86c9d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.166 Akitsumaru_Kai 秋津丸改 中破.png","hash":"b2960bd8627ecd3baf610d00a860ddb09ea28ee0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.169 Tanikaze 谷風 中破.png","hash":"efb54cc3d448a09c72a69c78e62147e0a44e764d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.170 Hamakaze 浜風 中破.png","hash":"8b74c17fe8da6090e1ba3ec5aa1a8aef099a491e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.174 Z1_Leberecht_Maass Z1 中破.png","hash":"ffd765528893a2737ed16c6c2b9da9816bc12464","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.174 Z1_Leberecht_Maass Z1 立绘.png","hash":"a03b5274b967fea3c77fc7a9a7e1d291c554ea14","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.175 Z3_Max_Schultz Z3 中破.png","hash":"2ddf314538933c71a34834f8b06272c84a05e678","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.175 Z3_Max_Schultz Z3 立绘.png","hash":"93a46a7391c6fdbf55a6aacbf8a9ca0baf594aef","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei 立绘.png","hash":"7feeb876b717433e129da96c199e57ff68cd59ee","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.179 Z1_Zwei_Leberecht_Maass Z1Zwei 中破.png","hash":"1fee058468382bbbe01b7278327dd4474c9c63d8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei 中破.png","hash":"9bce67d30b4ffc990e5c0d49564cc98538979680","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.180 Z3_Zwei_Max_Schultz Z3Zwei 立绘.png","hash":"d27c4b3d68ea261d609030a1f2b8a8deadc2dd7a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.184 Taigei 大鯨 中破.png","hash":"b0207f7dc30f81f64fbfeb1d503ab3806b3794c4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.184 Taigei 大鯨 立绘.png","hash":"c1c3ed809c61208f3ddb9a76eb29985a16ef2b74","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.186 Tokitsukaze 時津風 中破.png","hash":"259f1ce8686a5f126b43ee3762534315fad04825","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.186 Tokitsukaze 時津風 立绘.png","hash":"b06eb285994eb8c12385865da1185c224ebf5a1b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.19 Ooi 大井 立绘.png","hash":"682e2ed7caca40ae24eb775d39bb1b4d63c1f42c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.19 Ooi 大井 中破.png","hash":"1184ddaccf338ac6559e0298c2286e3fd5e705c7","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二 中破.png","hash":"694dfa0c6277258729100b12c098b2362c8ab208","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.20 Kitakami 北上 中破.png","hash":"964c93b46306d90a220f53aa6cee0112c4ae3d9a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.20 Kitakami 北上 立绘.png","hash":"64b01a656ae6c53caafa5198ecf1323a52680c8b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.207 Ushio_Kai_Ni潮改二 中破.png","hash":"8021d582bedd58f36ab2446511c4bb05cfdfe211","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.215 Nowaki 野分 立绘.png","hash":"0fd6998035b8b36924993abb3b63c7e36c112f56","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.215 Nowaki 野分 中破.png","hash":"88d05459e9dc3d90caaf012782e7769207a77063","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.221 Akizuki 秋月 中破.png","hash":"8fbe129af0b6f908755cc481cac60ac4b8d5117d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.25 Houshou 鳯翔 立绘.png","hash":"81d5eef22eca2bd3a352312cdda689ece51b541f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.25 Houshou 鳯翔 中破.png","hash":"289a7315ad77cf27ce385b08bc8b4dee5d3159c5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou_Kai 龍驤改-2 中破.png","hash":"eb3e86d7cf3540d5c58f6a17e94c73f2568365de","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.40 Tama 多摩 立绘.png","hash":"22c928fa0ad75e19e04a27d17e53b0fc4f2e31ad","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.47 Jintsuu 神通 中破.png","hash":"69aa2078db475459c21bc1e1b4e07be49d29d638","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.47 Jintsuu 神通 立绘.png","hash":"11bbdd6db79442e00628547a29ec44ed75223d08","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.55  Myoukou 妙高 立绘.png","hash":"d27088fc4712fa806f9406dfc6d7ac4fe64535a4","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.56 Nachi 那智 立绘.png","hash":"dfb2f937c59d222013fbff39fc1373b071f289e6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.57 Ashigara 足柄 中破.png","hash":"69d0658992b0dd5234834d666f6d511b4c618c1d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.57 Ashigara 足柄 立绘.png","hash":"d354579270a241c993fd7d8b0e1399307a84098d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.59 Takao 高雄 立绘.png","hash":"f946cbccc1e106d8ac92b8f29307d17d53ac50ad","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.61 Maya 摩耶 中破.png","hash":"ea619c583dcf9c26fd3e2228f687da42568321f3","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.61 Maya 摩耶 立绘.png","hash":"d98034f56251d9572b2860f2ebf55e0e03581a14","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.63 Tone 利根 中破.png","hash":"4e082d606c834e0ceb01a104ed518e42cf104b69","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.63 Tone 利根 立绘.png","hash":"ada2fa4015be43c6c0683fb4815a7f9bc975c493","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.64 Chikuma 筑摩 立绘.png","hash":"f4294e647695fb06659ec86246847039e7e483b2","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.94 Shouhou 祥鳯 中破.png","hash":"33330369e61faa0227d629d759a4cb299e3b4c7a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.94 Shouhou 祥鳯 立绘.png","hash":"5efdd17188f92eadef673ed62e3b6a904fab32ca","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.97 Ooi_Kai 大井改 立绘.png","hash":"9ffdd751cf2e21e6672166e44d91e2f947489fe2","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/no.98 Kitakami_Kai 北上改 中破.png","hash":"bad94473c669dce09f9b1ad3eefe7c4c41f590ff","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/no.98 Kitakami_Kai 北上改 立绘.png","hash":"4d367511248129b0f6331f0f9e844262823612c4","modified":1480007203000},{"_id":"source/img/kcastore.png","hash":"31319d8f0d2689158270468cab69529036c24d69","modified":1483947176000},{"_id":"source/img/kcjp.png","hash":"08206f27629f28477ff506eb30b15b3fc9c39afd","modified":1480007207000},{"_id":"source/img/oledpin.png","hash":"90f8c55e0a550d97b4f2a0293691a19945365474","modified":1486564121000},{"_id":"themes/morris/source/css/fonts/FontAwesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1479707114000},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1479707114000},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1479707114000},{"_id":"themes/morris/source/images/kancolle/NPC 道具屋 Premiumshop 明石.png","hash":"1279c03c886381aa2ac043c738f52b9eb751e9c7","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.101 Mogami_Kai 最上改 中破.png","hash":"a46d4b831fd41f22cccfc2a35f2fbdf9e08ffa1e","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.101 Mogami_Kai 最上改 立绘.png","hash":"be2c776e87e5b98f1f0d38401a54a63903a6f96d","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.108 Zuikaku_Kai 瑞鶴改 中破.png","hash":"afde645ea15d24503a6e03ddd5c31029834d605f","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.112 Zuihou 瑞鳯 中破.png","hash":"9f436fd23016ed718f7dd9a23c05b9dcbad08c23","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.113 Zuihou_Kai 瑞鳯改 中破.png","hash":"6d00200382c5eba413e1e2f344cf7b736ad76922","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.114 Ooi_Kai_Ni 大井改二 立绘.png","hash":"8d2dbe9abdde8b7328a2809b44c5dc6d329f2827","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.115 Kitakami_Kai_Ni 北上改二 立绘.png","hash":"5ce7b7146afed2934880295aa43c7342621edfa3","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.116 Mikuma 三隈 中破.png","hash":"a77c15c4cfdaa9cd2cdca7e5ceab94321a13001e","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.116 Mikuma 三隈 立绘.png","hash":"7ac44d4c5ec010dccbae2c28f77a96c43e3d0764","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.117 Mikuma_Kai 三隈改 立绘.png","hash":"341fbe676d437486bdf2b50acbd711a0b7b6cd2c","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.117 Mikuma_Kai 三隈改 中破.png","hash":"fb6f034fabb15c1b810d5f6ad8f404267e1ddca3","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.123 I_19 伊19 中破.png","hash":"d17183c78d09b84bd9e852dc5a0db3e77cf5eeb3","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.124 Suzuya 鈴谷 中破.png","hash":"868b99b8a690ac3a7cf0c9bdb098c1da0f428cd0","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.124 Suzuya 鈴谷 立绘.png","hash":"fa9e8aa5ea6e7d76d52396bc973224c3297a58b4","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.125 Kumano 熊野 立绘.png","hash":"216a61ea265e7ee73fc3dbb395cb5b3ad3582fe2","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.128 I_8 伊8 中破.png","hash":"d1258070120012f5de636acacc88388183932d5b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.128 I_8 伊8 立绘.png","hash":"02af74262a687d8033ae47b9947e321d6ccb4587","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.129 Suzuya_Kai 鈴谷改 立绘.png","hash":"7bdc8ce5ca9e01838e19d3008a858433a19778cb","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.129 Suzuya_Kai 鈴谷改 中破.png","hash":"4bd651ff6b0344ec1967e21cbb67152f10201998","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.130 Kumano_Kai 熊野改 立绘.png","hash":"f24789359c49923371fdda7f155abcd51b3684fa","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二 中破.png","hash":"9bef4a639fa46f934029140d250001768e6d3c25","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二 中破.png","hash":"b19e9bfef51bcfaf00b6755135b3d9052b069c2a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.145 Shigure_Kai_Ni 時雨改二 立绘.png","hash":"e4004f1fd6f73191c663a952e57ea23d9266ae9e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.168 Urakaze 浦風 中破.png","hash":"e26bb6fe062c432d13c2b84efdf23b693a129ba9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.168 Urakaze 浦風 立绘.png","hash":"e5a3a8e2801efdcc9e17709260ea301e88219bac","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.169 Tanikaze 谷風 立绘.png","hash":"ce72bc06c9d4071be2910c3618588428e3b8152c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei 中破.png","hash":"1d92f384895e411aacad5de4568a3077d33d8895","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze 天津風 中破.png","hash":"7a1d7e275c9d93cd87d56bbce36555f9db575de4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze_Kai 天津風改 中破.png","hash":"e09789a44b08a566de08d88a7e3f13c0f4206721","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze 天津風 立绘.png","hash":"b4a83e54a195112d65522f42ee212b8f1b43f477","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.181 Amatsukaze_Kai 天津風改 立绘.png","hash":"d66238be43a8e012c53604bb52f6c60eb371f990","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.185 Ryuuhou 龍鳯 中破.png","hash":"4b7e438efec39755fda3ed1df82bb2c0f0df8313","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.188 Tone_Kai_Ni 利根改二 立绘.png","hash":"895cc0dcea33f4e581d0344ef4b5ade6baff75fb","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.190 Ryuuhou_Kai 龍鳯改 中破.png","hash":"1fe55587fa7e1473cb981514b2568a4916e30011","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.205 Harusame 春雨 中破.png","hash":"af26ad0c44c369f71ffd6269dc7dd2e529974aab","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.205 Harusame 春雨 立绘.png","hash":"72b0f34f094e8360952006573142c9beae18d264","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.201 Unryuu 雲龍 中破.png","hash":"30677e9578548ac3afbb452fb41fb44c7add1594","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.207 Ushio_Kai_Ni潮改二 立绘.png","hash":"3a5b658ab1a6051fa3d93a1736088173381cc23b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二 中破.png","hash":"6c28a04e868c72129123574f824c0aa714b25ef4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo 朝雲 立绘.png","hash":"f19c980141b3095c020b75d0fa5670e9f1caab87","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo_Kai 朝雲改 立绘.png","hash":"d5621800f3c88a461c6c508f8edba7b1b511cef3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.221 Akizuki 秋月 立绘.png","hash":"1c5e260a544b9f33db25518f762b302060f070cd","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.23 Haruna 榛名 立绘.png","hash":"7e709f62d863298f1d3ee04f39f320c37b3fdee7","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.28 Tenryuu 天龍 中破.png","hash":"0e245ef3003af8d308da136835be92edeaee576a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.28 Tenryuu 天龍 立绘.png","hash":"7527496be9fd297a202f6c991b53df33327860c8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.29 Tatsuta 龍田 中破.png","hash":"b42fbf6230f039372f2a0fdf7cf77be709d1878b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.29 Tatsuta 龍田 立绘.png","hash":"7fb933e4b8472efb878f646bad68892d26a72d4d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.40 Tama 多摩 中破.png","hash":"8667457ff332e4e176e718a6935c1d622db07b37","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.41 Kiso 木曽 中破.png","hash":"439eb2b6d9cf461df617ccc9166d4bcb9cf506a0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara 長良 中破.png","hash":"1d12e3c1288a8d2ca0a1a3eb475f894906f14755","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara 長良 立绘.png","hash":"6edce8c6f4b9f4a3d9ea709a6a6d6a2832d869e2","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.42 Nagara 長良 中破改.png","hash":"c1ba19103dcc8652476419798cd5ff55c62cf52e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.44 Natori 名取 立绘.png","hash":"b5daed73fc4cade0a8123ab318480f938c0d4a21","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.45 Yura 由良 立绘.png","hash":"6d117d220292ea01f59aab215e074f95a480ad4b","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.46 Sendai 川内 立绘.png","hash":"7b06b566753dd2c4bc70a48bc0eb1e01df7febbf","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.48 Cristmas_Naka 圣诞那珂 立绘.png","hash":"92fb0cdb1ae171d90a969b600c04d5be84b3cbfc","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.48 Naka 那珂 中破.png","hash":"9d0b35006b9d915a9b6ac5e4395a275a2aa483a4","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.48 Naka 那珂 立绘.png","hash":"8c43c408ab0661749e6a6af2cb2c5872f012b752","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.49 Chitose 千歳 立绘.png","hash":"94856db77fdc5ddcfb4f79dca1870b5bafe7f484","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.50 Chiyoda 千代田 立绘.png","hash":"943eac8f08be292acda16e7c160029acd75cc041","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.51 Mogami 最上 中破.png","hash":"9563de39e6272c0b0f14fcd0ce2e878fa7344e66","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.51 Mogami 最上 立绘.png","hash":"a9b3a904f0abf1a2f79b73b83d0526c28324d75f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.54 Aoba 青葉 中破.png","hash":"07486564a159e82f9c512f485fa60c9f09771c0f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.54 Aoba 青葉 立绘.png","hash":"af53db3102b8ef85c49b6931d1d9a3304d9fd61f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.56 Nachi 那智 中破.png","hash":"f9307cf70228e165541cd3dcf402c821d3c1e388","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.59 Takao 高雄 中破.png","hash":"58e3c68ee47edb2587d669b0bbd8505c41c5e5b8","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.60 Atago 爱宕 立绘.png","hash":"f4457a88426992df41883b37d626fb48da36fbf6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.64 Chikuma 筑摩 中破.png","hash":"1bbca4ee34ab04861b71f4eb69a759c69e21a256","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame_Kai 村雨改 中破.png","hash":"4545bf51ca680f48619046e666f859565ee855d5","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.95 Chitose_Kai 千歳改 立绘.png","hash":"9761a1632c1f9f365beb8839e675ffc6fb10a28c","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.97 Ooi_Kai 大井改 中破.png","hash":"afed3d6e19671beb6643879c88578589a17b7d86","modified":1480007203000},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSans-BoldItalic.ttf","hash":"6b8cf662c4fad99b0e9fb4b554ac6b995ae57a71","modified":1443432432000},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSans-Bold.ttf","hash":"083d357b67c87ec1d2f92524444afae32ee2794e","modified":1443432432000},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSans-Italic.ttf","hash":"34e236d64960a82232f5bc7cebaf9f6f58bc25df","modified":1443432432000},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSansUI-Bold.ttf","hash":"55210bd5bc2e4b5780c8dd07ed493cb03be652db","modified":1443432434000},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSans-Regular.ttf","hash":"efd188840fffd54a51ee810b4dbfef24b9c43eef","modified":1443432432000},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSansUI-BoldItalic.ttf","hash":"9cb57c16fbf17330caffa75186fce26cda491d64","modified":1443432434000},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSansUI-Regular.ttf","hash":"5d46831131002aff826d64dfe6c08e43b5289891","modified":1443432434000},{"_id":"themes/morris/source/css/fonts/NotoSans/NotoSansUI-Italic.ttf","hash":"e98902c3c7fec2b31a06fd5bb0366b6060970856","modified":1443432434000},{"_id":"themes/morris/source/js/jquery-ui.js","hash":"75c20acdc6cbc6334fe2b918ab7afeec007f969e","modified":1473870856000},{"_id":"themes/morris/source/images/kancolle/no.1 Nagato 長門 立绘.png","hash":"e6eb47ff179ef2fe175bd4764fc9d7450b906d3a","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.10 Shimakaze 岛風 中破.png","hash":"03a5efe3f79cbacfefb50dc9915ee44aa2d0e0e4","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.10 Shimakaze 岛風 立绘.png","hash":"2c79e8e2b186e6eab845e35973cc23f7c708e934","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.103 Hyuuga_Kai 日向改 中破.png","hash":"ef34bbe90a868770c28f43827fedb5a8f0eb2402","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.103 Hyuuga_Kai 日向改 立绘.png","hash":"7e7ede6ed994174c251bdd9a9f5db5852ef8fcee","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.109 Kinu 鬼怒 中破.png","hash":"2e1331ad3963166a1f3f1933ed88796dd879a450","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.109 Kinu 鬼怒 立绘.png","hash":"e624cd86f9c57b350f4f899ad025fec29f5f39ac","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.110 Abukuma 阿武隈 中破.png","hash":"d2d95abb0f3f428e20d9a2145f5d76248ec9b072","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.110 Abukuma 阿武隈 立绘.png","hash":"2113eac6d08a10048454aa4cbe2cea2a4667bd02","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.111 Yuubari 夕張 立绘.png","hash":"6dd0d664c84ead2a6237d456b8dc23b371ce9a02","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.113 Zuihou_Kai 瑞鳯改 立绘.png","hash":"dfc3e7b2d654ed5c851e5f71a53b168c0828939f","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.112 Zuihou 瑞鳯 立绘.png","hash":"3e76d88d186dfa023ce1e694dd28f6a5afe550e1","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.119 Maikaze 舞風 中破.png","hash":"80a82c919a189a535db37f6b316f95674ad4fead","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.119 Maikaze 舞風 立绘.png","hash":"47008968aa954a9dd61ad4528369224f44ec3302","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.120 Kinugasa 衣笠 中破.png","hash":"86b79b80215fe5d19daa7a98f04b2b75aef80f2d","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.125 Kumano 熊野 中破.png","hash":"8aaa329562f889af44430aec5fe7bd9cae521648","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.133 Yuugumo 夕雲 立绘.png","hash":"b81f958bc592392822724052d54392c811c8a3c1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.135 Naganami 長波 中破.png","hash":"9c8d9cf9ff39a280ba5eec54658d88b74b2769c5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.135 Naganami 長波 立绘.png","hash":"c956273daf63ff5b69998255b349387ebc6a6b6f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.137 Agano 阿賀野 中破.png","hash":"bb16012d156507c788928759ef7e9da2716a7530","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.140 Sakawa 酒匂 中破.png","hash":"263744063e424c5ae6710ef9a28c928f5ceb37f2","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.140 Sakawa 酒匂 立绘.png","hash":"9ec43f975ed7b9cd28171109a0709839e75b655b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.141 Isuzu_Kai_Ni 五十鈴改二 立绘.png","hash":"ddb48fdd2c736e3a7607f4e7fd8d9f23e01f3a6c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.143 Musashi 武藏 中破.png","hash":"ecaa4c766786404cf8ee3398f32d743c1fa28d62","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.144 Yuudaichi_Kai_Ni 夕立改二 立绘.png","hash":"2275424b748ec4c2410bafd97d394b15245b631e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.149 Kongou_Kai_Ni 金刚改二 中破.png","hash":"c019a4d76fe40215e770429948f2f8fffbd5e831","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.148 Musashi_Kai 武藏改 中破.png","hash":"ac3a55038b676355132bb8c489ea334b84fbd236","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.150 Hiei_Kai_Ni 比叡改二 中破.png","hash":"e74511d5322f6eab44ac72e7af0072c86329afc9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.150 Hiei_Kai_Ni 比叡改二 立绘.png","hash":"56ed9190d2818375c8650b12167e346def21c7c3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二 中破.png","hash":"016ab5d79ec612103e47ec3630ebaa63d9991c02","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.151 Haruna_Kai_Ni 榛名改二 立绘.png","hash":"343eaaff338acf0f47b731536c794f0e0617848f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.151 Haruna_Kai_Ni 榛名改二 中破.png","hash":"d617d78db14ed1b040b4e7b7a25cc84a3d2a54c5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.153 Taihou 大鳯 中破.png","hash":"3bb25728fe5bab19b49199aeb21dc0c2277756ba","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.156 Taihou_Kai 大鳯改 中破.png","hash":"4bb954af4186aa3e5b03d77323fe065a06362297","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.156 Taihou_Kai 大鳯改 立绘.png","hash":"e8919709a1050600441bce450aedeb0b8089dd9f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.158 Sendai_Kai_Ni 川内改二 立绘.png","hash":"7e4c9cc824b41a47c9b19a4ec071e5d08fdf8313","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.159 Jintsuu_Kai_Ni 神通改二 立绘.png","hash":"7fc7789c8ac417f28387cf14693e43743b8621ed","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.160 Naka_Kai_Ni 那珂改二 立绘.png","hash":"a2a497d860d0c333c78738f205ef7026edeaa1ca","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.164 Yayoi 弥生 立绘.png","hash":"d8f83d0cd650befc121ffd979551d929d3206c11","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki 卯月 中破2.png","hash":"1f5ceb749036863a4a04902c1b6b923162e97805","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki 卯月 中破.png","hash":"a1a64c3e648b787ebc32370c83369a47e3e3bfad","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.165 Uzuki 卯月 立绘.png","hash":"2c1dee228d5e2c36115a74df5bd2cdf438046075","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.166 Akitsumaru_Kai 秋津丸改 立绘.png","hash":"4ff0bf662928493cdf122465612bffd975e19c93","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.167 Isokaze 磯風 中破.png","hash":"695e65c8f4d25fcc57548261420908194cb15bc3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.167 Isokaze 磯風 立绘.png","hash":"1f95097197f28d73cd195e7e4dcf38bc5c9c432b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.176 Prinz_Eugen 欧根亲王 中破.png","hash":"805439a9cd05ee8c485ea214002de4ef2ffec5b7","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.176 Prinz_Eugen 欧根亲王 立绘.png","hash":"ff0df2252a12e6bb85f016e31088648856c9c427","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改 中破.png","hash":"7a16936b6a63b13770a69203484560cd54913f6c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.177 Prinz_Eugen_Kai 欧根亲王改 立绘.png","hash":"924d4d63e7c38603641b2f9883a784a048f75059","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.185 Ryuuhou 龍鳯 立绘.png","hash":"4b0f96cdf896f5c54ab517ba4527405eca9859a9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.189 Chikuma_Kai_Ni 筑摩改二 立绘.png","hash":"5e44b576e562500881b85225fb935297a6a875a9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.194 Haguro_Kai_Ni 羽黑改二 立绘.png","hash":"a2601fe74fb54da0579b6d0b12c66f288f1c8551","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.191 Myoukou_Kai_Ni 妙高改二 立绘.png","hash":"512aa77432fff3928619ec22b79ef1a013bf1562","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二 中破.png","hash":"2308d88ff816262a179690d7c4c3facb569ada0d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二 中破.png","hash":"453c1faa1271e6cafe78052e61e3512f85045f1f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.195 Ayanami_Kai_Ni 綾波改二 立绘.png","hash":"15420182e62fd8b10ab4a629653b1b8f2476f546","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.196 Hiryuu_Kai_Ni 飛龍改二 立绘.png","hash":"b1147899f738dd37d1dd60846d730f1c9ed43dab","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.2 Mutsu 陆奥 立绘.png","hash":"d88af44f92f4bce739c16fcf3db00a3b5620e776","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二 中破.png","hash":"89765385ef40034e611acd85765f28562fa84b30","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.2 Mutsu 陆奥 中破.png","hash":"5d1f97d936e1d630fa91c50572c140205fe6a0c3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.206 Unryuu_Kai 雲龍改 中破.png","hash":"6128e46fa2ba2dd3a52b76c8eb94af4e3e68a23d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.209 Hayashimo 早霜 中破.png","hash":"2e93d5e1f93cfc0c92eba12351503fef3143445c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.209 Hayashimo 早霜 立绘.png","hash":"01fe8f63d4220d333ea7633e8a43f5803ed15fe2","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.210 Kiyoshimo 清霜 中破.png","hash":"5e74635f0ea32d555d53007b59f34f7c60edf82d","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.21 Kongou 金刚 中破.png","hash":"e3e6840ecfe476e1be3be36b6eae563e1e1a2707","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.21 Kongou 金刚 立绘.png","hash":"070c1a9508bb0136c9da97451237eb3268735113","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.210 Kiyoshimo 清霜 立绘.png","hash":"c7dea096dc5cd568316ae0fe993309e668d95ab6","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo 朝雲 中破.png","hash":"39fd1cdf6557b5268303d15e598be3289a869de3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.213 Asagumo_Kai 朝雲改 中破.png","hash":"27155961a013641111a529c1d0f957cba242ac62","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.23 Haruna 榛名 中破.png","hash":"31c405f7d48c81dd52fa4620963ea6492cd505fc","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.24 Kirishima 雾岛 中破.png","hash":"503a6568eabbb35ee045dfda279b6e882bbc5423","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.24 Kirishima 雾岛 立绘.png","hash":"91641855c6312a404428a23671ee545b36488f10","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.3 Ise 伊势 立绘.png","hash":"db7cf72c48f3d79d170191ed083819d5aa909fce","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou 龍驤 中破.png","hash":"84516b94ffa80aafa6d596735ae718c1d7bc9ed2","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.39 Kuma 球磨 立绘.png","hash":"bee8be8652e66303c206bcc61e05a2bc14d9fb47","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.39 Kuma 球磨 中破.png","hash":"e2ec082729ef12d15c00e9be40f5955c85883bcb","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.4 Hyuuga 日向 中破.png","hash":"ce52dc7c85f9948e1b1f56470e555c45e1cf5060","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.4 Hyuuga 日向 立绘.png","hash":"81bcf442875a1c8740df4f7c23fc2df5283c5554","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.41 Kiso 木曽 立绘.png","hash":"f60fd6b9ebc9975dd6eb4229aff0e599dcdc3993","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.43 Isuzu 五十鈴 中破.png","hash":"71d17293d2ef2186243d55d6637b9ec734a175c1","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.43 Isuzu 五十鈴 立绘.png","hash":"39acb57236008cd646591c495e191fd24699512e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.44 Natori 名取 中破.png","hash":"f96d526d11b9abebc3412306ac9773600e879bcd","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.44 Natori 名取 中破改.png","hash":"0d80ab6b11f4ce810ad2853ae22e9b6991d724f9","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.45 Yura 由良 中破.png","hash":"bb07caf26c64439325583e5be83304462d6390ab","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.46 Sendai 川内 中破.png","hash":"97db5a0f9237a1f7557a1e9b26451c633e515b39","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.52 Furutaka 古鹰 立绘.png","hash":"9628d680e4fa59afa9031ec9e3ccec50898a211e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.52 Furutaka 古鹰 中破.png","hash":"56384252ecae731b7aed3faefbb2b3a768c2cf90","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.53 Kako 加古 立绘.png","hash":"7a18dc844ad76093b5c2d3bd379506f00d2a8ec3","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.53 Kako 加古 中破.png","hash":"064fff1ebc21a3b10d632fb77aef5f3fc3e72a40","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.55  Myoukou 妙高 中破.png","hash":"4a96af6714fea52a52d31ffb0d23f10dd4b5829b","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.60 Atago 爱宕 中破.png","hash":"761de7dc042655579aab07e6b9917d77041a19be","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.62 Choukai 鳥海 中破.png","hash":"a9f27d3bef61cdc1ada0e95c748977594d2dd066","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.62 Choukai 鳥海 立绘.png","hash":"9477c697ed3c3f0276259a8525cee07241bcc822","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou 飛鷹 立绘.png","hash":"58c1f41762f0c75b8627e1af1ea38106a3d2ff2c","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou_Kai 飛鷹改-2 中破.png","hash":"753dd2c361f122d2bc6b382550b0224fe97b60a0","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame_Kai 村雨改 立绘.png","hash":"d16874f90081fc2388a2a4c5224b60d46a4fd20e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.99 Chitose_A 千歳甲 立绘.png","hash":"d0d448f80e11204b22cf461e7f72aa6ea096ecc8","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/no.1 Nagato 長門 中破.png","hash":"4e6be4933957f456e27f161cbc6a90e4f2c5228f","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.102 Ise_Kai 伊势改 中破.png","hash":"3275e647cf7c8cc71501f26047402315edbf0898","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.102 Ise_Kai 伊势改 立绘.png","hash":"9d77b861a77dddaabba7fe8146f6f1185b408896","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.108 Zuikaku_Kai 瑞鶴改 立绘.png","hash":"6a69bc1d0b6322791acdac601d8ed609eb2773bb","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.111 Yuubari 夕張 中破.png","hash":"b490ab56cfb5f0654beedf919dfa78053b610275","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.120 Kinugasa 衣笠 立绘.png","hash":"041ff6ec4ccd124daf042f33f145736b91b1b3ac","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.132 Akugumo 秋雲 立绘.png","hash":"14c10e3f452093c7f4f83fd9b99844b9c76ad1b1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.138 Noshiro 能代 中破.png","hash":"393b293d8ef1071587460e37600dddff78099100","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二 中破.png","hash":"55e60ec639941b3d048a50d42f4f48a0b116d4ac","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.142 Kinugasa_Kai_Ni 衣笠改二 立绘.png","hash":"79fc7fd3081e684f9ef45ea554d81b13da27d70a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.143 Musashi 武藏 立绘.png","hash":"3f0e1f7bc001b8933aba51154a74aca55eaff442","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.148 Musashi_Kai 武藏改 立绘.png","hash":"3f454da5615a8600220fefa57a28f581c747fe79","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.149 Kongou_Kai_Ni 金刚改二 立绘.png","hash":"97f91d0fb3c5dde2ab5aedd22547b2c1fa35ecfb","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.152 Kirishima_Kai_Ni 雾岛改二 立绘.png","hash":"adbfce88ff37d283e499dc94a24856665cc8ab97","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.153 Taihou 大鳯 立绘.png","hash":"3cd5a976531b4e692148038a880d02a6f79758ea","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.157 Ryuujou_Kai_Ni 龍驤改二 立绘.png","hash":"32a799bf534ab34d0298c85713738c2690959920","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.171 Bismarck 俾斯麦 中破.png","hash":"e91400051cdd2ae978ba0475f835b89e5360408b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.172 Bismarck_Kai 俾斯麦改 中破.png","hash":"68e40b0725e85b1e74ab2f9461a193d941d04863","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei 中破.png","hash":"fc1978fd9148d5278245d42c392613fe47626c99","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.183a Ooyodo 大淀 中破.png","hash":"7a7ca4c53a39b8a00929f16e9b11f62c6e740394","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.197 Souryuu_Kai_Ni 蒼龍改二 立绘.png","hash":"aea461260679a888049e602bd2390eb055638dc9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.22 Hiei 比叡 中破.png","hash":"e4de84023d949e686570b80c5043ce125c8d49c4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.22 Hiei 比叡 立绘.png","hash":"be38c5f659745f7c3b34979186e9ae95c10bee12","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou_Kai 扶桑改 中破.png","hash":"1c6a3b03de567fb7cf8b57f19f75f5e0f33be52a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro 山城 立绘.png","hash":"e09c3ea14c66d62ea68e6e0148e419ac26029a83","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro 山城 中破.png","hash":"be98d017e15260e36e45918ad5e21c51a4856180","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro_Kai 山城改 立绘.png","hash":"9b356f0be8f677ff38471fe5de5c1277d892dc96","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.27 Yamashiro_Kai 山城改 中破.png","hash":"f6114bcab705b32158dc0a1e38e1e9e4b49ff4e8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.3 Ise 伊势 中破.png","hash":"4325e5d16014a200ab32ce83268881bffc23eaaf","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou 龍驤 立绘.png","hash":"dbcf1bc670b18c1534ec0fdbe8f01b16183e5c56","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.30 Ryuujou_Kai 龍驤改-2 立绘.png","hash":"01a4a5b1f347adef5e29abf2e80224f934e25234","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.49 Chitose 千歳 中破.png","hash":"a7473a50662b75dc08633c9dd42869d3af643c63","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.50 Chiyoda 千代田 中破.png","hash":"60397b7f62d96dea7bfbe63ffbb5c8cec10b6a47","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.95 Chitose_Kai 千歳改 中破.png","hash":"ce42c890e08404802567d8e8d987d80c426d0546","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.96 Chiyoda_Kai 千代田改 立绘.png","hash":"4cdb4d086b7ec3f4e3407d9b5c48531bd2d0af73","modified":1480007203000},{"_id":"source/img/gaimport.png","hash":"3d8f04e185a252682a163159f246e7fae41a34d5","modified":1480007207000},{"_id":"themes/morris/source/images/kancolle/no.100 Chiyoda_A 千代田甲 立绘.png","hash":"33d00d0fef742a9107821b9a799e8e129292ce36","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.104 Chitose_Carrier 千歳航 中破.png","hash":"e0aa4306b2779421f4e506923c017d518a35c118","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.104 Chitose_Carrier 千歳航 立绘.png","hash":"d8a205cde451d9e1efbd79a5c6585bd9e33ef6fa","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二 中破.png","hash":"4f6ff12d1442fb50faf9926f9b435526fc34559b","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.131 Yamato 大和 立绘.png","hash":"6e87c178be8c61e4fd10c85e723e490dbf1adad6","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.133 Yuugumo 夕雲 中破.png","hash":"36593d79de426315ed94f55d5e1c733d75242205","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.132 Akugumo 秋雲 中破.png","hash":"4da37a73abfea33ac28c6d95bb4260583e7505a0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.136 Yamato_Kai 大和改 立绘.png","hash":"3596af3216c8d6fafdb555e9cc475d577c46dbcd","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.138 Noshiro 能代 立绘.png","hash":"ab3e2971e0fe8c6c82d93479f275313b50f936df","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.139 Yahagi 矢矧 中破.png","hash":"5da2b4ab5510ca094d4b101a86f901d1f438d9db","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.139 Yahagi 矢矧 立绘.png","hash":"b3f580a8bba7446edb294f0c284a7e23219eacc1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.146 Kiso_Kai_Ni 木曽改二 中破.png","hash":"f226f79b560ff5a8538d9fc79064f345abc518c9","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.146 Kiso_Kai_Ni 木曽改二 立绘.png","hash":"dd9384de3fd23eef83cbedf6a63034973491484f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.171 Bismarck 俾斯麦 立绘.png","hash":"80848ca1cbd9f1fe0c42f6a9244158e0a4d184f1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.173 Bismarck_Zwei 俾斯麦Zwei 立绘.png","hash":"4b5b4efc49ef77652d1953ea2cd368a1a2bc6326","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.178 Bismarck_Drei 俾斯麦Drei 立绘.png","hash":"8f6c8675e614c210edc299c77d185b7f7d9cc484","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.182 Akashi 明石 立绘.png","hash":"51a92ea7e42a4531e6705eb2e1b3c67ebadad59f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.183a Ooyodo 大淀 立绘.png","hash":"d5050b3dfb6f9cc81854302b805d3191a005cb1b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.183b Ooyodo_Kai大淀改 中破.png","hash":"1c52ee5d0f9fe1e54c0f6b44e320791c647d5691","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.183b Ooyodo_Kai大淀改 立绘.png","hash":"6093c99a8486236487b2b55326509eaf219d86a1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.187 Akashi_Kai 明石改 中破.png","hash":"2e8be1b172cb8ce9335aeeb8e60b4d35ab8452ce","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.190 Ryuuhou_Kai 龍鳯改 立绘.png","hash":"1a4dc5f639829462fd09f0fcb5c9d294c102f840","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二 中破.png","hash":"319994e00d10daa465033c61fb12bb42ffb8b58a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.204 Hatsuharu_Kai_Ni 初春改二 立绘.png","hash":"23ae06c04989bfe406a508ea88d0f515800056b0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou_Kai 扶桑改 立绘.png","hash":"e95a2167ad9fceada23f424070d12f84fc06855a","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou 扶桑 中破.png","hash":"d11fe8ed618659412ca6b7ead0f40abeec06207e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou 飛鷹 中破.png","hash":"f4e48d35a11b87a0c5a7d3dec47d2779e8a867d6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.66 Junyou 隼鷹 中破.png","hash":"221c61a9087620b48b3edb334d92ba2bcc7a26cd","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.99 Chitose_A 千歳甲 中破.png","hash":"188dd01c20ccc20cc91f90899c332e0faa014b63","modified":1480007203000},{"_id":"themes/morris/source/css/fonts/FontAwesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1479707114000},{"_id":"themes/morris/source/images/kancolle/no.105 Chiyoda_Carrier 千代田航 立绘.png","hash":"c085c377d46d728b16a4af41c678a5e69ae0e5f9","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.121 Chitose_Carrier_Kai_2 千歳航改二 立绘.png","hash":"7ed7178db5e0c085de1dacc940f56af2245c85b5","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二 中破.png","hash":"aee6b87c9ddd6179382c57fe024c8bac8aa25787","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.131 Yamato 大和 中破.png","hash":"d3ff275d606ef9b33360aa063e92e2c61cc50630","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.136 Yamato_Kai 大和改 中破.png","hash":"eb15bebf9815aac9b63a889a3197803d57035fbf","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.137 Agano 阿賀野 立绘.png","hash":"abc993af615a8275bcbb8345db8b7c281edbfe41","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.170 Hamakaze 浜風 立绘.png","hash":"87036cc6883052042f021d83851875bf8fd474c5","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.172 Bismarck_Kai 俾斯麦改 立绘.png","hash":"2d1721ca9fdc454ed091b1a52d2f62e850f47ace","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.182 Akashi 明石 中破.png","hash":"e401920416bf1884da2e7d659f9e170e490910c1","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.187 Akashi_Kai 明石改 立绘.png","hash":"c4e3060f7ec3bf45fcaf39cd900b8b2ac646b0d3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.201 Unryuu 雲龍 立绘.png","hash":"b9e228519acd835d69362a562a59f1416315cbc0","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.65 Hiyou_Kai 飛鷹改-2 立绘.png","hash":"39761fcea8b2ad3a7f7eb7487d62752fdd9158d6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.66 Junyou 隼鷹 立绘.png","hash":"03bc14de9f773faad6133c8772f337409fc785f3","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.96 Chiyoda_Kai 千代田改 中破.png","hash":"8d955150a784562a5e00dcfed18049390fd364f1","modified":1480007203000},{"_id":"themes/morris/source/images/kancolle/no.105 Chiyoda_Carrier 千代田航 中破.png","hash":"575c757c95aee3698c71cd6528092afc129a943c","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.122 Chiyoda_Carrier_Kai_Ni 千代田航改二 立绘.png","hash":"551444a114ce8af95e403a1ce820b95d89692d6a","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.26 Fusou 扶桑 立绘.png","hash":"41a805df38526204c70f0d41b7de83397303adee","modified":1480007205000},{"_id":"source/img/kcgame.png","hash":"3d2b9c893d3dacb14016ace90b56059432f6f6e2","modified":1480007207000},{"_id":"themes/morris/source/images/kancolle/no.100 Chiyoda_A 千代田甲 中破.png","hash":"dac563e33e8eda2a21e36d0d479a48153c57f284","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.206 Unryuu_Kai 雲龍改 立绘.png","hash":"c03a394eea66d584b945d2ef714bba4896e6acc4","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.208 Junyou_Kai_Ni 隼鷹改二 立绘.png","hash":"86871dbb8c03a69489f0a32864c24744de92454a","modified":1480007205000},{"_id":"source/img/sslbanner.png","hash":"114892944b5bb300fa5310d02d334c2f64d14315","modified":1480007207000},{"_id":"source/img/gacreate.png","hash":"22ff6e160f3db075b50bb5168eed57e423735a0c","modified":1480007207000},{"_id":"source/img/kcastart.png","hash":"f04ac3df310a21e361c6942550bc7158531aaa60","modified":1483940129000},{"_id":"themes/morris/source/images/kancolle/no.147 Верный 中破.png","hash":"24eed66fb42d84892dc8d57032801243d308f0f0","modified":1480007205000},{"_id":"source/img/gacert.png","hash":"99ad14fb9d21e2392c9895148156e9cc28a50e3c","modified":1480007207000},{"_id":"source/img/ngcompare.png","hash":"a59a685adea4f2ebd02b635925028543b1e79d6e","modified":1480007207000},{"_id":"themes/morris/source/images/kancolle/no.147 Верный 立绘.png","hash":"f29133bdf1c77179df9122ca7da047140cfc8863","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.38 Mochizuki 望月 中破.png","hash":"1bf70fa09a62be3eff677414fd8cc9c4c8aaf709","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.72 Hibiki 響 立绘.png","hash":"f04124f67493fe660bf22bc7a561e295de74681a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.74 Inazuma 電 立绘.png","hash":"6c5ba42067a6f00ad35c396aacf0a0a16c9a614f","modified":1480007204000},{"_id":"source/img/kcaandroid.png","hash":"b34d72ec043245d2531ac9f00830d99f4c456d74","modified":1483940129000},{"_id":"themes/morris/source/images/kancolle/no.35 Nagatsuki 長月 立绘.png","hash":"94455ac8d45b83b319ac7f72ba16101703f52d07","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu_Kai 白露改 中破.png","hash":"3ac6350e54e40783f4097e9312f4db2e5aba9159","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.134 Makigumo 卷雲 中破.png","hash":"e2c60a4fea94b54a30b44ed959a8564f8b7532fb","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.77 Wakaba 若葉 立绘.png","hash":"d2de4134b72a9ad6fb7021858c0a4d83aaeae2bb","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.134 Makigumo 卷雲 立绘.png","hash":"cf87ac79d42bfbdda61e91b8cdab15addc0a020b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.77 Wakaba 若葉 中破.png","hash":"5314c836501cd39ccf057c4b6d84a0a09aadb9b9","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.86 Ooshio 大潮 中破.png","hash":"3ce7c8deb6fcc93a56208da932a777a4947fdc72","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.86 Ooshio 大潮 立绘.png","hash":"8e924c46e7ee9b5607bf37b0fc352441fb2ee68e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.13 Hatsuyuki 初雪 立绘.png","hash":"3640ad01cba39e5b795fb027ef1aac45f22787ee","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.13 Hatsuyuki 初雪 中破.png","hash":"fe33837933db77402d1b2fb6ac96a01839496431","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.14 Miyuki 深雪 立绘.png","hash":"df689f28edeb546ab6513f87d81e8e5fdf86a609","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.14 Miyuki 深雪 中破.png","hash":"4b907053689af6e752ee28558d9b2aca15dde0b2","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.32 Kisaragi 如月 立绘.png","hash":"83f0c8ce34c59dca8d41318530c70f27b0f24e19","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.31 Mutsuki 睦月 中破.png","hash":"5a881defdc05442799336a5643823750c868afcf","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.31 Mutsuki 睦月 立绘.png","hash":"fcfd1098c939cdbe2c3b93fce740533bf4637994","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.34 Fumizuki 文月 中破.png","hash":"e87860baf3e43558a289ad74f3e95696606bf25f","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.37 Mikazuki 三日月 立绘.png","hash":"d87b0feabf5eefd7c57918498e12295303b41a8c","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.38 Mochizuki 望月 立绘.png","hash":"384fd2139ed4fcd671ffdb873c7acdca81801675","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.36 Kikuzuki 菊月 中破.png","hash":"4169cf6c6ffe3eefe7809335c26e2f031ae687e8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.72 Hibiki 響 中破.png","hash":"501b62edf0d805dba483bba1ceddcfff5f5db54e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.73 Ikazuchi 雷 中破.png","hash":"4018f4ed194f012f017e8f4fc74062a16eecdfee","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.70 Ushio 潮 立绘.png","hash":"1d6d05a736e5701b61509f4e905b1d6a445bdd5b","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.73 Ikazuchi 雷 立绘.png","hash":"4a296d2b3c967785e6f291f10d6ec049e1ab62cc","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.74 Inazuma 電 中破.png","hash":"23a561f96f50e052d494a71cd918397b125be15a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame 村雨 中破.png","hash":"b1e9e7aba9d8788788564bdd2a45a0983fc1ed25","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.81 Murasame 村雨 立绘.png","hash":"2005ba967b4aac088384127af7c947d1214c9ce4","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.78 Hatsushimo 初霜 中破.png","hash":"83f70191958b73ffca80d55dccf6308b90f71bb6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.80 Shigure 時雨 立绘.png","hash":"5ea9959dc67359cca54cab5c92d0f1817945cfac","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.80 Shigure 時雨 中破.png","hash":"9e3fa9a41f8e1b3edd5a538a610e1d6efc6ff648","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.82 Yuudaichi 夕立 中破.png","hash":"1723c6ee9976ec46d7113f345671063353555a69","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.82 Yuudaichi 夕立 立绘.png","hash":"52243909ef81907e2e13caeb68b914b88218cdb1","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.85 Asashio 朝潮 立绘.png","hash":"d859d768c145ecfee70c4cb4b42a3ca73c1989f1","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.85 Asashio 朝潮 中破.png","hash":"0614395d901981a396709bca3990a98e29688788","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.87 Michishio 満潮 中破.png","hash":"38d08a13779fe8e23c3d2a0bac20cac809b6c89b","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.87 Michishio 満潮 立绘.png","hash":"7b1ed3785293a887daabdeedaed71ba241859ec6","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.32 Kisaragi 如月 中破.png","hash":"a144e274ae47a2e53a18b0f7480a605a62f70172","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.71 Akatsuki 暁 立绘.png","hash":"b5f61157beb2947796d98e281e41c52e27332898","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.71 Akatsuki 暁 中破.png","hash":"6f7a63588ac709b39da6a0a9f94fde7bddb7146a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.8 Souryuu 蒼龍 中破.png","hash":"1e4eb89479462e6fffee8421c5f532bb5d62673d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.8 Souryuu 蒼龍 立绘.png","hash":"aaae2b1fc67d93276dfbf651db8cb304c3645673","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.90 Kasumi 霞 立绘.png","hash":"90017a6ce7d41250d989f4a35c36f72ee636e28d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.90 Kasumi 霞 中破.png","hash":"eb932c6dac0575d8ac7c7144350355e214617140","modified":1480007204000},{"_id":"source/img/kchome.png","hash":"42b5effb5e4954e90f0412cd5dc2c66dc7028d89","modified":1480007207000},{"_id":"source/img/qtbanner.png","hash":"ac3fe675813b534ab7705e9c4a3c490133b97701","modified":1480007207000},{"_id":"themes/morris/source/images/kancolle/no.17 Ayanami 綾波 立绘.png","hash":"57e283a7f9e8cc010f796b8a2f3cdb8e1cd95033","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.17 Ayanami 綾波 中破.png","hash":"8d476adac8a48fc5ee65e6a2ba3a16b9c3fca7d8","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.18 Shikinami 敷波 中破.png","hash":"18d4217187475fb1d0463d69c2dac04ebc108758","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.18 Shikinami 敷波 立绘.png","hash":"054d59358c06a0626e3afe14d4c9d9a2eaed3784","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.34 Fumizuki 文月 立绘.png","hash":"4c8ac45c66d0d92f69537a195c6c5446ca56e500","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.35 Nagatsuki 長月 中破.png","hash":"62ce240f1efe2dbab4799d44bf56aa5eea637438","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.6 Akagi 赤城 中破.png","hash":"c3c3d7c7b68096d799b0e8fe789f19885fa1624f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.6 Akagi 赤城 立绘.png","hash":"d186c4d25121bc8d55c0ba2530ffb0c0bcf9f69d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu_Kai 白露改 立绘.png","hash":"2204aba411498bce4e157ba2a11550ade0435a1d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.88 Arashio 荒潮 中破.png","hash":"1cafc7b809636f8cc2320bd291ef9d43628232be","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.88 Arashio 荒潮 立绘.png","hash":"979d186e55a037dc2b72a86c9c5475a17043ba77","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.93 Kuroshio 黑潮 立绘.png","hash":"d187c6f7e1e002b7df0340651fbbf3cd57d6a0cc","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.93 Kuroshio 黑潮 中破.png","hash":"2ca83623ec6a1436ce01ba9e0a62bf0a6975f88b","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu 白露 中破.png","hash":"fa1512a0b29eb6db75022a3c4481648ba1ed61ca","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.89 Arare 霰 中破.png","hash":"32daf707b1c9ecd517920313aa12038258954073","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.89 Arare 霰 立绘.png","hash":"75c08629c29fe7084dd8dcf34588cd27af800a56","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.106 Shoukaku 翔鶴 中破.png","hash":"624bc32c8c4c8f50964b87661834eb70ead330bd","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.106 Shoukaku 翔鶴 立绘.png","hash":"ed3cda6af4a1b32100be67497e9de86c272807b9","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.107 Zuikaku 瑞鶴 中破.png","hash":"a9384907541f1bcfbf4475b8827de157cba40416","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.118 Hatsukaze 初風 中破.png","hash":"064b8ffbabc1763cc33a706eab930e00f4cf3437","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.11 Fubuki 吹雪 中破.png","hash":"7e8fdccbe65e13bc20d245ebf613bb1cca2b9b7b","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.107 Zuikaku 瑞鶴 立绘.png","hash":"40d26312b3b5896a6eb97d9b6b27aab74115fd12","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.11 Fubuki 吹雪 立绘.png","hash":"5f59fa37eef50703581ebea6fa363a3101de25ec","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.126 I_168 伊168 立绘.png","hash":"7646c063ebfc3d6417f423ef4660d53042f4e7ca","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.127 I_58 伊58 立绘.png","hash":"bdfde344d219135f91cd2c9580e37eeb88ddada3","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.127 I_58 伊58 中破.png","hash":"a049e6494e4b9a8347ba69c4702513e3628d7289","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.126 I_168 伊168 中破.png","hash":"775bbc95e57d202815dc49fb8c266ef07b43910a","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.12 Shirayuki 白雪 中破.png","hash":"f6df6c9781785ebd71882071a5f8468630ccd205","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.118 Hatsukaze 初風 立绘.png","hash":"24b4ead0d00507063de4fafa272bb18f0207cf08","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.16 Isonami 磯波 中破.png","hash":"dd159421e6e75e5547a749ba8bf5aae937d1e161","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.16 Isonami 磯波 立绘.png","hash":"944127e47cfb567b24316fec8105a35706307843","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.33 Satsuki 皐月 中破.png","hash":"46685a78083a7d05496a2eaacb4168b4a9008013","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.12 Shirayuki 白雪 立绘.png","hash":"cc79269b59cf304baf7568901ed1be7cad9b9941","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.5 Yukikaze 雪風 中破.png","hash":"60fd4cc6c4dc4cc14cb33ddf66baa17509785d90","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.69 Sazanami 漣 立绘.png","hash":"923544964dc07583017958dbaf7db12242483bed","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.68 Akebono 曙 立绘.png","hash":"cce314a08ef53ea0cd7b96fc7fb88557f2a91350","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.69 Sazanami 漣 中破.png","hash":"aa1b7cd93d27012a30558272e343960a03ee4edb","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.5 Yukikaze 雪風 立绘.png","hash":"c344547b3d91d16e077c311797f7a29d3dedbb82","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.67 Oboro 朧 中破.png","hash":"1aea1c48f8826a83fd62a9aef84c2b6f5a72da50","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.67 Oboro 朧 立绘.png","hash":"bee2a105b666efc8859848093cdad086c16bbe7c","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.68 Akebono 曙 中破.png","hash":"9fc9e9dc8d8fa78650c9189188212e9e8de96ebb","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.84 Suzukaze 涼风 立绘.png","hash":"64e139baf409876a6f772fdc1ad06070898da405","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.84 Suzukaze 涼风 中破.png","hash":"acdf388bad2ee343aa5250f2e4f0a6327217c9c2","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.83 Samidare 五月雨 中破.png","hash":"4dcfdb9d5af66d9aa3c316738cf87390aca12145","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.83 Samidare 五月雨 立绘.png","hash":"a6ece97563692c19435cc95778700202659a8fd3","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.91 Kagerou 陽炎 立绘.png","hash":"88693c183b4762b76a15263f904f40a2d6ae129e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.91 Kagerou 陽炎 中破.png","hash":"b8532e26b05c8d5b63bd03cb4a0b49656e15702a","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.78 Hatsushimo 初霜 立绘.png","hash":"692961767fdbccb0d4dd64bbc046713a97bec864","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.33 Satsuki 皐月 立绘.png","hash":"7aa99337b96d899c278af04f555fd2d0ca128e8b","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.36 Kikuzuki 菊月 立绘.png","hash":"a13592d6c5680e30407f7a24b9bbb5f02159cd0e","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.37 Mikazuki 三日月 中破.png","hash":"1b9589faca210dee9a80a752d3d13fb44814b4eb","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.70 Ushio 潮 中破.png","hash":"32ce66909680cb2603ef765772ddfdfb2479c19d","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.76 Nenohi 子日 立绘.png","hash":"d7698055250e82e53699c52716d13e8ab184f608","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.75 Hatsuharu 初春 立绘.png","hash":"7ec931b67527bc839129f4540d01ca83e0c3d9f3","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.75 Hatsuharu 初春 中破.png","hash":"fe61b22f413f98f84373357f67f80270437cbf2b","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.76 Nenohi 子日 中破.png","hash":"1618a32e0e2a14475e7f0f3dac70a4023efd0b89","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.79 Shiratsuyu 白露 立绘.png","hash":"f297c781856ab885966d23b651ffa7d3372de46e","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.92 Shiranui 不知火 中破.png","hash":"d0be3c7a8fb94711b635afe1c4c3ac3df1b9c955","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.92 Shiranui 不知火 立绘.png","hash":"621f0bf518d9d0abee561e81d8974f16f942df7f","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/NPC 給糧艦 Mamiya 間宮.png","hash":"7ff2f7736df5b5f4549e4883659ddaef967db672","modified":1480007206000},{"_id":"themes/morris/source/images/kancolle/no.7 Kaga 加賀 立绘.png","hash":"fe793d82b79da46af400f3c4a01534a84285fb2b","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.7 Kaga 加賀 中破.png","hash":"9c012219dd33af2d558f3ad8c6901d6286541786","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.9 Hiryuu 飛龍 立绘.png","hash":"918cbdb33d5dc9d57d45e0faa206850bf06a68a5","modified":1480007204000},{"_id":"themes/morris/source/images/kancolle/no.9 Hiryuu 飛龍 中破.png","hash":"a0ad37839af7a02a682fa929a1534898b60aa5ec","modified":1480007204000},{"_id":"source/img/kcabanner.png","hash":"84adae6f714bd13c362776838311e75dfffb1577","modified":1483947893000},{"_id":"themes/morris/source/images/kancolle/no.15 Murakumo 叢雲 中破.png","hash":"a9faff3e4cf79bdeac01054dde11791179989768","modified":1480007205000},{"_id":"themes/morris/source/images/kancolle/no.15 Murakumo 叢雲 立绘.png","hash":"18768f4aef1c5716ac58673e104d5186f57db63b","modified":1480007205000},{"_id":"source/img/oled.gif","hash":"49caff8ac331124403ae8b53ec53f48a6d4c367b","modified":1487309931000},{"_id":"themes/morris/source/css/images/banner'.jpg","hash":"04cd39e475b8ff3dcd77916b25bf8d10261c43dd","modified":1480007206000},{"_id":"themes/morris/source/css/images/lovelive.png","hash":"6fae6794de98fae5833d4a32dc732649ec5a64eb","modified":1480007206000},{"_id":"source/img/kcbanner.png","hash":"000054999f307fa41d60d50b9ea12db091dc76e3","modified":1480007207000},{"_id":"themes/morris/source/files/Time After Time.mp3","hash":"331314bf471e642eb0f4c0f5bb9f21b302058e90","modified":1480007206000},{"_id":"themes/morris/source/files/Only My Railgun.mp3","hash":"3e879900aebfbcb11113f1daa6869cea37cb51eb","modified":1480007206000},{"_id":"themes/morris/source/files/轮回之境.mp3","hash":"d5ce46a145698a755eb073fb4ee67d2681902822","modified":1480007206000},{"_id":"themes/morris/source/files/海色.mp3","hash":"c1ca47252f370763d59d1aed8da53f98d9d0b3c1","modified":1480007206000},{"_id":"themes/morris/source/files/吹雪.mp3","hash":"3f6bfd71ceaa3911cd11b39ae3d76195fe62f753","modified":1480007206000},{"_id":"themes/morris/source/files/輝夜の城で踊りたい.mp3","hash":"2d940b527a92e2b3ce98ed7275b0113a6004ab2b","modified":1480007206000},{"_id":"themes/morris/source/files/Higanbana.mp3","hash":"8ff194673bb530e2474525f34cd281be2663b273","modified":1480007206000},{"_id":"source/files/spigot.jar","hash":"6c6589e1bcca12faf95eac8b134409252545c28c","modified":1480007207000}],"Category":[{"name":"网络","_id":"cizmvz0rn00068mpr5y3ta3s8"},{"name":"奇技淫巧","_id":"cizmvz0s7000c8mpr2rhoqc0k"},{"name":"科学上网","parent":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0t9000o8mprbdjpbti3"},{"name":"手帐","_id":"cizmvz0td000s8mpr3e8iveji"},{"name":"路由器","parent":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0tg000x8mprmukmxydu"},{"name":"Android","parent":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0to00158mprvbhh7p37"},{"name":"网站部署","parent":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0tx001e8mprvc74vzwn"},{"name":"macOS","parent":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0u4001v8mprff071tvs"},{"name":"＊nix","parent":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0ua00238mpr4e2af2zx"},{"name":"实习","parent":"cizmvz0td000s8mpr3e8iveji","_id":"cizmvz0up00318mprlwvxx5fa"},{"name":"ACG","_id":"cizmvz0us00378mpr9ge7xskn"},{"name":"Windows","parent":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0uz003s8mprle1jojjw"},{"name":"树莓派","parent":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0v0003w8mpr6i6phjpp"},{"name":"课程","parent":"cizmvz0td000s8mpr3e8iveji","_id":"cizmvz0v4004e8mprnzhzm9bd"},{"name":"Minecraft","parent":"cizmvz0us00378mpr9ge7xskn","_id":"cizmvz0v6004l8mpr7qhlh59b"},{"name":"艦隊これくしょん","parent":"cizmvz0us00378mpr9ge7xskn","_id":"cizmvz0v8004s8mprlckb0iu6"}],"Data":[],"Page":[{"title":"Page Not Found!","toc":false,"_content":"![](/img/404.png)","source":"404.md","raw":"title: Page Not Found!\ntoc: false\n---\n![](/img/404.png)","date":"2016-11-24T17:06:40.000Z","updated":"2016-11-24T17:06:40.000Z","path":"404.html","comments":1,"layout":"page","_id":"cizmvz0gu00008mpr8t5mzlvt","content":"<p><img src=\"/img/404.png\" alt=\"\"></p>\n","excerpt":"","more":"<p><img src=\"/img/404.png\" alt=\"\"></p>\n"},{"_content":"{\n  \"name\": \"Shintaku's Blog\",\n  \"icons\": [\n    {\n      \"src\": \"/images/icon.png\",\n      \"sizes\": \"48x48\",\n      \"type\": \"/image/png\",\n      \"density\": \"1.0\"\n    }\n  ],\n  \"start_url\": \"index.html\",\n  \"display\": \"standalone\",\n  \"orientation\": \"portrait\"\n}","source":"manifest.json","raw":"{\n  \"name\": \"Shintaku's Blog\",\n  \"icons\": [\n    {\n      \"src\": \"/images/icon.png\",\n      \"sizes\": \"48x48\",\n      \"type\": \"/image/png\",\n      \"density\": \"1.0\"\n    }\n  ],\n  \"start_url\": \"index.html\",\n  \"display\": \"standalone\",\n  \"orientation\": \"portrait\"\n}","date":"2017-02-18T09:08:10.000Z","updated":"2017-02-18T09:08:10.000Z","path":"manifest.json","layout":"false","title":"","comments":1,"_id":"cizmvz0i800018mprargm2raj","content":"{\"name\":\"Shintaku's Blog\",\"icons\":[{\"src\":\"/images/icon.png\",\"sizes\":\"48x48\",\"type\":\"/image/png\",\"density\":\"1.0\"}],\"start_url\":\"index.html\",\"display\":\"standalone\",\"orientation\":\"portrait\"}","excerpt":"","more":"{\"name\":\"Shintaku's Blog\",\"icons\":[{\"src\":\"/images/icon.png\",\"sizes\":\"48x48\",\"type\":\"/image/png\",\"density\":\"1.0\"}],\"start_url\":\"index.html\",\"display\":\"standalone\",\"orientation\":\"portrait\"}"},{"title":"个人简历","date":"1969-12-31T16:00:00.000Z","toc":false,"_content":"\n## 基本信息\n\n**天津大学 计算机科学与技术专业** ***2017届本科生***\n\n+ 电子邮箱：[liangzhenduo0608@hotmail.com](mailto:liangzhenduo0608@hotmail.com)\n+ 个人主页：[https://www.shintaku.cc/](https://www.shintaku.cc/)\n+ GitHub：[https://github.com/liangzhenduo0608](https://github.com/liangzhenduo0608)\n\n## 个人能力\n\n+ 熟练使用**Linux / OS X**平台进行开发\n+ 熟悉**C++ / Java**等高级语言\n+ 有一定的**PHP**开发经验\n+ 熟练使用**MySQL**数据库\n+ 对**Shell**和**Python**有一定的了解\n\n## 项目经历\n\n### 天津市某研究院调研数据库\n\n+ Feb 2016 - Mar 2016\n+ PHP Web Application\n+ 基于LNMP的问卷调查统计系统，包括数据录入、数据管理、信息检索等功能。\n\n### 图书管理系统\n\n+ Oct 2015 - Nov 2015\n+ C++ Qt Application\n+ 使用Qt开发的跨平台图书管理系统，能实现基本的图书借还管理功能。\n\n### 网上购物商城\n\n+ Mar 2015 - Jun 2015\n+ PHP Web Application\n+ 基于LAMP的简单网上购物平台，包括用户注册登录、商品选购、购物车等基本功能。\n\n### 文本编辑器\n\n+ Dec 2014 - Jan 2015\n+ Java Application\n+ 使用Java开发的简易文本编辑器，功能参考Windows的记事本，外加一些代码编辑器的特性，如关键字高亮、等宽字体等。\n\n### 画图工具\n\n+ Nov 2014 - Dec 2014\n+ Java Applet\n+ 使用Java开发的简易画图工具，可以通过拖拽绘制简单的几何图形。\n\n## 获奖经历\n\n|<div style=\"text-align:center\">时间</div>|<div style=\"text-align:center\">竞赛名称</div>|<div style=\"text-align:center\">奖项</div>|\n|---|---|---|\n|<div style=\"text-align:center\">Nov 2015|<div style=\"text-align:center\">2015 ACM-ICPC Asia Regional Contest @Shanghai |<div style=\"text-align:center\">**荣誉提名** |\n|<div style=\"text-align:center\">Sep 2015|<div style=\"text-align:center\">全国大学生数学建模竞赛天津赛区                     |<div style=\"text-align:center\">**一等奖**             |\n|<div style=\"text-align:center\">Jun 2015|<div style=\"text-align:center\">“美团杯”天津大学程序设计挑战赛                     |<div style=\"text-align:center\">**三等奖**             |\n|<div style=\"text-align:center\">Nov 2014|<div style=\"text-align:center\">IBM Master the Mainframe Contest 2014         |<div style=\"text-align:center\">**三等奖**             |\n|<div style=\"text-align:center\">Jun 2014|<div style=\"text-align:center\">“微乐校园开发者杯”天津大学程序设计挑战赛             |<div style=\"text-align:center\">**优秀奖**             |\n\n<br><br><br><br><br><br>\n\n## Infomation\n**Bachelor of Computer Science and Technology, Tianjin University**\n\n+ Email：[liangzhenduo0608@hotmail.com](mailto:liangzhenduo0608@hotmail.com)\n+ Homepage：[https://www.shintaku.cc/](https://www.shintaku.cc/)\n+ GitHub：[https://github.com/liangzhenduo0608](https://github.com/liangzhenduo0608)\n\n## Skills\n\n+ Familiar with **Linux / OS X** Development Environment\n+ Known **C++ / Java** well\n+ Experienced **PHP Development**\n+ Skilled use **MySQL Database**\n+ Understood **Shell / Python**\n\n## Projects\n\n### Research Database System\n\n+ Feb 2016 - Mar 2016\n+ PHP Web Application (LNMP)\n\n### Library Management System\n\n+ Oct 2015 - Nov 2015\n+ C++ Qt Application (Windows/Linux/Mac OS X)\n\n### Web Store\n\n+ Mar 2015 - Jun 2015\n+ PHP Web Application (LAMP)\n\n### Text Editor\n\n+ Dec 2014 - Jan 2015\n+ Java Application\n\n### Paint Panel\n\n+ Nov 2014 - Dec 2014\n+ Java Applet\n\n## Awards\n\n|<div style=\"text-align:center\">PERIOD</div>|<div style=\"text-align:center\">CONTEST</div>|<div style=\"text-align:center\">AWARD</div>|\n|---|---|---|\n|<div style=\"text-align:center\">2015.11|<div style=\"text-align:center\">2015 ACM-ICPC Asia Regional Contest @Shanghai |<div style=\"text-align:center\">**Honorable Mention** |\n|<div style=\"text-align:center\">2015.09|<div style=\"text-align:center\">2015 China Undergraduate Mathematical Contest in Modeling                     |<div style=\"text-align:center\">**1st Prize**             |\n|<div style=\"text-align:center\">2015.06|<div style=\"text-align:center\">'Meituan Cup' Programing Challenge Contest                     |<div style=\"text-align:center\">**3rd Prize**             |\n|<div style=\"text-align:center\">2014.11|<div style=\"text-align:center\">IBM Master the Mainframe Contest 2014         |<div style=\"text-align:center\">**Part 2 Finisher**             |\n|<div style=\"text-align:center\">2014.06|<div style=\"text-align:center\">'Weile Cup' Programing Challenge Contest             |<div style=\"text-align:center\">**Winner**             |","source":"about/index.md","raw":"title: 个人简历\ndate: 1970-01-01 00:00:00\ntoc: false\n---\n\n## 基本信息\n\n**天津大学 计算机科学与技术专业** ***2017届本科生***\n\n+ 电子邮箱：[liangzhenduo0608@hotmail.com](mailto:liangzhenduo0608@hotmail.com)\n+ 个人主页：[https://www.shintaku.cc/](https://www.shintaku.cc/)\n+ GitHub：[https://github.com/liangzhenduo0608](https://github.com/liangzhenduo0608)\n\n## 个人能力\n\n+ 熟练使用**Linux / OS X**平台进行开发\n+ 熟悉**C++ / Java**等高级语言\n+ 有一定的**PHP**开发经验\n+ 熟练使用**MySQL**数据库\n+ 对**Shell**和**Python**有一定的了解\n\n## 项目经历\n\n### 天津市某研究院调研数据库\n\n+ Feb 2016 - Mar 2016\n+ PHP Web Application\n+ 基于LNMP的问卷调查统计系统，包括数据录入、数据管理、信息检索等功能。\n\n### 图书管理系统\n\n+ Oct 2015 - Nov 2015\n+ C++ Qt Application\n+ 使用Qt开发的跨平台图书管理系统，能实现基本的图书借还管理功能。\n\n### 网上购物商城\n\n+ Mar 2015 - Jun 2015\n+ PHP Web Application\n+ 基于LAMP的简单网上购物平台，包括用户注册登录、商品选购、购物车等基本功能。\n\n### 文本编辑器\n\n+ Dec 2014 - Jan 2015\n+ Java Application\n+ 使用Java开发的简易文本编辑器，功能参考Windows的记事本，外加一些代码编辑器的特性，如关键字高亮、等宽字体等。\n\n### 画图工具\n\n+ Nov 2014 - Dec 2014\n+ Java Applet\n+ 使用Java开发的简易画图工具，可以通过拖拽绘制简单的几何图形。\n\n## 获奖经历\n\n|<div style=\"text-align:center\">时间</div>|<div style=\"text-align:center\">竞赛名称</div>|<div style=\"text-align:center\">奖项</div>|\n|---|---|---|\n|<div style=\"text-align:center\">Nov 2015|<div style=\"text-align:center\">2015 ACM-ICPC Asia Regional Contest @Shanghai |<div style=\"text-align:center\">**荣誉提名** |\n|<div style=\"text-align:center\">Sep 2015|<div style=\"text-align:center\">全国大学生数学建模竞赛天津赛区                     |<div style=\"text-align:center\">**一等奖**             |\n|<div style=\"text-align:center\">Jun 2015|<div style=\"text-align:center\">“美团杯”天津大学程序设计挑战赛                     |<div style=\"text-align:center\">**三等奖**             |\n|<div style=\"text-align:center\">Nov 2014|<div style=\"text-align:center\">IBM Master the Mainframe Contest 2014         |<div style=\"text-align:center\">**三等奖**             |\n|<div style=\"text-align:center\">Jun 2014|<div style=\"text-align:center\">“微乐校园开发者杯”天津大学程序设计挑战赛             |<div style=\"text-align:center\">**优秀奖**             |\n\n<br><br><br><br><br><br>\n\n## Infomation\n**Bachelor of Computer Science and Technology, Tianjin University**\n\n+ Email：[liangzhenduo0608@hotmail.com](mailto:liangzhenduo0608@hotmail.com)\n+ Homepage：[https://www.shintaku.cc/](https://www.shintaku.cc/)\n+ GitHub：[https://github.com/liangzhenduo0608](https://github.com/liangzhenduo0608)\n\n## Skills\n\n+ Familiar with **Linux / OS X** Development Environment\n+ Known **C++ / Java** well\n+ Experienced **PHP Development**\n+ Skilled use **MySQL Database**\n+ Understood **Shell / Python**\n\n## Projects\n\n### Research Database System\n\n+ Feb 2016 - Mar 2016\n+ PHP Web Application (LNMP)\n\n### Library Management System\n\n+ Oct 2015 - Nov 2015\n+ C++ Qt Application (Windows/Linux/Mac OS X)\n\n### Web Store\n\n+ Mar 2015 - Jun 2015\n+ PHP Web Application (LAMP)\n\n### Text Editor\n\n+ Dec 2014 - Jan 2015\n+ Java Application\n\n### Paint Panel\n\n+ Nov 2014 - Dec 2014\n+ Java Applet\n\n## Awards\n\n|<div style=\"text-align:center\">PERIOD</div>|<div style=\"text-align:center\">CONTEST</div>|<div style=\"text-align:center\">AWARD</div>|\n|---|---|---|\n|<div style=\"text-align:center\">2015.11|<div style=\"text-align:center\">2015 ACM-ICPC Asia Regional Contest @Shanghai |<div style=\"text-align:center\">**Honorable Mention** |\n|<div style=\"text-align:center\">2015.09|<div style=\"text-align:center\">2015 China Undergraduate Mathematical Contest in Modeling                     |<div style=\"text-align:center\">**1st Prize**             |\n|<div style=\"text-align:center\">2015.06|<div style=\"text-align:center\">'Meituan Cup' Programing Challenge Contest                     |<div style=\"text-align:center\">**3rd Prize**             |\n|<div style=\"text-align:center\">2014.11|<div style=\"text-align:center\">IBM Master the Mainframe Contest 2014         |<div style=\"text-align:center\">**Part 2 Finisher**             |\n|<div style=\"text-align:center\">2014.06|<div style=\"text-align:center\">'Weile Cup' Programing Challenge Contest             |<div style=\"text-align:center\">**Winner**             |","updated":"2017-01-09T04:29:17.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cizmvz0rg00038mpr1z6gwf5k","content":"<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p><strong>天津大学 计算机科学与技术专业</strong> <strong><em>2017届本科生</em></strong></p>\n<ul>\n<li>电子邮箱：<a href=\"mailto:liangzhenduo0608@hotmail.com\" target=\"_blank\" rel=\"external\">liangzhenduo0608@hotmail.com</a></li>\n<li>个人主页：<a href=\"https://www.shintaku.cc/\">https://www.shintaku.cc/</a></li>\n<li>GitHub：<a href=\"https://github.com/liangzhenduo0608\" target=\"_blank\" rel=\"external\">https://github.com/liangzhenduo0608</a></li>\n</ul>\n<h2 id=\"个人能力\"><a href=\"#个人能力\" class=\"headerlink\" title=\"个人能力\"></a>个人能力</h2><ul>\n<li>熟练使用<strong>Linux / OS X</strong>平台进行开发</li>\n<li>熟悉<strong>C++ / Java</strong>等高级语言</li>\n<li>有一定的<strong>PHP</strong>开发经验</li>\n<li>熟练使用<strong>MySQL</strong>数据库</li>\n<li>对<strong>Shell</strong>和<strong>Python</strong>有一定的了解</li>\n</ul>\n<h2 id=\"项目经历\"><a href=\"#项目经历\" class=\"headerlink\" title=\"项目经历\"></a>项目经历</h2><h3 id=\"天津市某研究院调研数据库\"><a href=\"#天津市某研究院调研数据库\" class=\"headerlink\" title=\"天津市某研究院调研数据库\"></a>天津市某研究院调研数据库</h3><ul>\n<li>Feb 2016 - Mar 2016</li>\n<li>PHP Web Application</li>\n<li>基于LNMP的问卷调查统计系统，包括数据录入、数据管理、信息检索等功能。</li>\n</ul>\n<h3 id=\"图书管理系统\"><a href=\"#图书管理系统\" class=\"headerlink\" title=\"图书管理系统\"></a>图书管理系统</h3><ul>\n<li>Oct 2015 - Nov 2015</li>\n<li>C++ Qt Application</li>\n<li>使用Qt开发的跨平台图书管理系统，能实现基本的图书借还管理功能。</li>\n</ul>\n<h3 id=\"网上购物商城\"><a href=\"#网上购物商城\" class=\"headerlink\" title=\"网上购物商城\"></a>网上购物商城</h3><ul>\n<li>Mar 2015 - Jun 2015</li>\n<li>PHP Web Application</li>\n<li>基于LAMP的简单网上购物平台，包括用户注册登录、商品选购、购物车等基本功能。</li>\n</ul>\n<h3 id=\"文本编辑器\"><a href=\"#文本编辑器\" class=\"headerlink\" title=\"文本编辑器\"></a>文本编辑器</h3><ul>\n<li>Dec 2014 - Jan 2015</li>\n<li>Java Application</li>\n<li>使用Java开发的简易文本编辑器，功能参考Windows的记事本，外加一些代码编辑器的特性，如关键字高亮、等宽字体等。</li>\n</ul>\n<h3 id=\"画图工具\"><a href=\"#画图工具\" class=\"headerlink\" title=\"画图工具\"></a>画图工具</h3><ul>\n<li>Nov 2014 - Dec 2014</li>\n<li>Java Applet</li>\n<li>使用Java开发的简易画图工具，可以通过拖拽绘制简单的几何图形。</li>\n</ul>\n<h2 id=\"获奖经历\"><a href=\"#获奖经历\" class=\"headerlink\" title=\"获奖经历\"></a>获奖经历</h2><table>\n<thead>\n<tr>\n<th><div style=\"text-align:center\">时间</div></th>\n<th><div style=\"text-align:center\">竞赛名称</div></th>\n<th><div style=\"text-align:center\">奖项</div></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><div style=\"text-align:center\">Nov 2015</div></td>\n<td><div style=\"text-align:center\">2015 ACM-ICPC Asia Regional Contest @Shanghai</div></td>\n<td><div style=\"text-align:center\"><strong>荣誉提名</strong></div></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">Sep 2015</div></td>\n<td><div style=\"text-align:center\">全国大学生数学建模竞赛天津赛区</div></td>\n<td><div style=\"text-align:center\"><strong>一等奖</strong></div></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">Jun 2015</div></td>\n<td><div style=\"text-align:center\">“美团杯”天津大学程序设计挑战赛</div></td>\n<td><div style=\"text-align:center\"><strong>三等奖</strong></div></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">Nov 2014</div></td>\n<td><div style=\"text-align:center\">IBM Master the Mainframe Contest 2014</div></td>\n<td><div style=\"text-align:center\"><strong>三等奖</strong></div></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">Jun 2014</div></td>\n<td><div style=\"text-align:center\">“微乐校园开发者杯”天津大学程序设计挑战赛</div></td>\n<td><div style=\"text-align:center\"><strong>优秀奖</strong></div></td>\n</tr>\n</tbody>\n</table>\n<p><br><br><br><br><br><br></p>\n<h2 id=\"Infomation\"><a href=\"#Infomation\" class=\"headerlink\" title=\"Infomation\"></a>Infomation</h2><p><strong>Bachelor of Computer Science and Technology, Tianjin University</strong></p>\n<ul>\n<li>Email：<a href=\"mailto:liangzhenduo0608@hotmail.com\" target=\"_blank\" rel=\"external\">liangzhenduo0608@hotmail.com</a></li>\n<li>Homepage：<a href=\"https://www.shintaku.cc/\">https://www.shintaku.cc/</a></li>\n<li>GitHub：<a href=\"https://github.com/liangzhenduo0608\" target=\"_blank\" rel=\"external\">https://github.com/liangzhenduo0608</a></li>\n</ul>\n<h2 id=\"Skills\"><a href=\"#Skills\" class=\"headerlink\" title=\"Skills\"></a>Skills</h2><ul>\n<li>Familiar with <strong>Linux / OS X</strong> Development Environment</li>\n<li>Known <strong>C++ / Java</strong> well</li>\n<li>Experienced <strong>PHP Development</strong></li>\n<li>Skilled use <strong>MySQL Database</strong></li>\n<li>Understood <strong>Shell / Python</strong></li>\n</ul>\n<h2 id=\"Projects\"><a href=\"#Projects\" class=\"headerlink\" title=\"Projects\"></a>Projects</h2><h3 id=\"Research-Database-System\"><a href=\"#Research-Database-System\" class=\"headerlink\" title=\"Research Database System\"></a>Research Database System</h3><ul>\n<li>Feb 2016 - Mar 2016</li>\n<li>PHP Web Application (LNMP)</li>\n</ul>\n<h3 id=\"Library-Management-System\"><a href=\"#Library-Management-System\" class=\"headerlink\" title=\"Library Management System\"></a>Library Management System</h3><ul>\n<li>Oct 2015 - Nov 2015</li>\n<li>C++ Qt Application (Windows/Linux/Mac OS X)</li>\n</ul>\n<h3 id=\"Web-Store\"><a href=\"#Web-Store\" class=\"headerlink\" title=\"Web Store\"></a>Web Store</h3><ul>\n<li>Mar 2015 - Jun 2015</li>\n<li>PHP Web Application (LAMP)</li>\n</ul>\n<h3 id=\"Text-Editor\"><a href=\"#Text-Editor\" class=\"headerlink\" title=\"Text Editor\"></a>Text Editor</h3><ul>\n<li>Dec 2014 - Jan 2015</li>\n<li>Java Application</li>\n</ul>\n<h3 id=\"Paint-Panel\"><a href=\"#Paint-Panel\" class=\"headerlink\" title=\"Paint Panel\"></a>Paint Panel</h3><ul>\n<li>Nov 2014 - Dec 2014</li>\n<li>Java Applet</li>\n</ul>\n<h2 id=\"Awards\"><a href=\"#Awards\" class=\"headerlink\" title=\"Awards\"></a>Awards</h2><table>\n<thead>\n<tr>\n<th><div style=\"text-align:center\">PERIOD</div></th>\n<th><div style=\"text-align:center\">CONTEST</div></th>\n<th><div style=\"text-align:center\">AWARD</div></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><div style=\"text-align:center\">2015.11</div></td>\n<td><div style=\"text-align:center\">2015 ACM-ICPC Asia Regional Contest @Shanghai</div></td>\n<td><div style=\"text-align:center\"><strong>Honorable Mention</strong></div></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">2015.09</div></td>\n<td><div style=\"text-align:center\">2015 China Undergraduate Mathematical Contest in Modeling</div></td>\n<td><div style=\"text-align:center\"><strong>1st Prize</strong></div></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">2015.06</div></td>\n<td><div style=\"text-align:center\">‘Meituan Cup’ Programing Challenge Contest</div></td>\n<td><div style=\"text-align:center\"><strong>3rd Prize</strong></div></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">2014.11</div></td>\n<td><div style=\"text-align:center\">IBM Master the Mainframe Contest 2014</div></td>\n<td><div style=\"text-align:center\"><strong>Part 2 Finisher</strong></div></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">2014.06</div></td>\n<td><div style=\"text-align:center\">‘Weile Cup’ Programing Challenge Contest</div></td>\n<td><div style=\"text-align:center\"><strong>Winner</strong></div></td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p><strong>天津大学 计算机科学与技术专业</strong> <strong><em>2017届本科生</em></strong></p>\n<ul>\n<li>电子邮箱：<a href=\"mailto:liangzhenduo0608@hotmail.com\">liangzhenduo0608@hotmail.com</a></li>\n<li>个人主页：<a href=\"https://www.shintaku.cc/\">https://www.shintaku.cc/</a></li>\n<li>GitHub：<a href=\"https://github.com/liangzhenduo0608\">https://github.com/liangzhenduo0608</a></li>\n</ul>\n<h2 id=\"个人能力\"><a href=\"#个人能力\" class=\"headerlink\" title=\"个人能力\"></a>个人能力</h2><ul>\n<li>熟练使用<strong>Linux / OS X</strong>平台进行开发</li>\n<li>熟悉<strong>C++ / Java</strong>等高级语言</li>\n<li>有一定的<strong>PHP</strong>开发经验</li>\n<li>熟练使用<strong>MySQL</strong>数据库</li>\n<li>对<strong>Shell</strong>和<strong>Python</strong>有一定的了解</li>\n</ul>\n<h2 id=\"项目经历\"><a href=\"#项目经历\" class=\"headerlink\" title=\"项目经历\"></a>项目经历</h2><h3 id=\"天津市某研究院调研数据库\"><a href=\"#天津市某研究院调研数据库\" class=\"headerlink\" title=\"天津市某研究院调研数据库\"></a>天津市某研究院调研数据库</h3><ul>\n<li>Feb 2016 - Mar 2016</li>\n<li>PHP Web Application</li>\n<li>基于LNMP的问卷调查统计系统，包括数据录入、数据管理、信息检索等功能。</li>\n</ul>\n<h3 id=\"图书管理系统\"><a href=\"#图书管理系统\" class=\"headerlink\" title=\"图书管理系统\"></a>图书管理系统</h3><ul>\n<li>Oct 2015 - Nov 2015</li>\n<li>C++ Qt Application</li>\n<li>使用Qt开发的跨平台图书管理系统，能实现基本的图书借还管理功能。</li>\n</ul>\n<h3 id=\"网上购物商城\"><a href=\"#网上购物商城\" class=\"headerlink\" title=\"网上购物商城\"></a>网上购物商城</h3><ul>\n<li>Mar 2015 - Jun 2015</li>\n<li>PHP Web Application</li>\n<li>基于LAMP的简单网上购物平台，包括用户注册登录、商品选购、购物车等基本功能。</li>\n</ul>\n<h3 id=\"文本编辑器\"><a href=\"#文本编辑器\" class=\"headerlink\" title=\"文本编辑器\"></a>文本编辑器</h3><ul>\n<li>Dec 2014 - Jan 2015</li>\n<li>Java Application</li>\n<li>使用Java开发的简易文本编辑器，功能参考Windows的记事本，外加一些代码编辑器的特性，如关键字高亮、等宽字体等。</li>\n</ul>\n<h3 id=\"画图工具\"><a href=\"#画图工具\" class=\"headerlink\" title=\"画图工具\"></a>画图工具</h3><ul>\n<li>Nov 2014 - Dec 2014</li>\n<li>Java Applet</li>\n<li>使用Java开发的简易画图工具，可以通过拖拽绘制简单的几何图形。</li>\n</ul>\n<h2 id=\"获奖经历\"><a href=\"#获奖经历\" class=\"headerlink\" title=\"获奖经历\"></a>获奖经历</h2><table>\n<thead>\n<tr>\n<th><div style=\"text-align:center\">时间</div></th>\n<th><div style=\"text-align:center\">竞赛名称</div></th>\n<th><div style=\"text-align:center\">奖项</div></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><div style=\"text-align:center\">Nov 2015</td>\n<td><div style=\"text-align:center\">2015 ACM-ICPC Asia Regional Contest @Shanghai</td>\n<td><div style=\"text-align:center\"><strong>荣誉提名</strong></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">Sep 2015</td>\n<td><div style=\"text-align:center\">全国大学生数学建模竞赛天津赛区</td>\n<td><div style=\"text-align:center\"><strong>一等奖</strong></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">Jun 2015</td>\n<td><div style=\"text-align:center\">“美团杯”天津大学程序设计挑战赛</td>\n<td><div style=\"text-align:center\"><strong>三等奖</strong></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">Nov 2014</td>\n<td><div style=\"text-align:center\">IBM Master the Mainframe Contest 2014</td>\n<td><div style=\"text-align:center\"><strong>三等奖</strong></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">Jun 2014</td>\n<td><div style=\"text-align:center\">“微乐校园开发者杯”天津大学程序设计挑战赛</td>\n<td><div style=\"text-align:center\"><strong>优秀奖</strong></td>\n</tr>\n</tbody>\n</table>\n<p><br><br><br><br><br><br></p>\n<h2 id=\"Infomation\"><a href=\"#Infomation\" class=\"headerlink\" title=\"Infomation\"></a>Infomation</h2><p><strong>Bachelor of Computer Science and Technology, Tianjin University</strong></p>\n<ul>\n<li>Email：<a href=\"mailto:liangzhenduo0608@hotmail.com\">liangzhenduo0608@hotmail.com</a></li>\n<li>Homepage：<a href=\"https://www.shintaku.cc/\">https://www.shintaku.cc/</a></li>\n<li>GitHub：<a href=\"https://github.com/liangzhenduo0608\">https://github.com/liangzhenduo0608</a></li>\n</ul>\n<h2 id=\"Skills\"><a href=\"#Skills\" class=\"headerlink\" title=\"Skills\"></a>Skills</h2><ul>\n<li>Familiar with <strong>Linux / OS X</strong> Development Environment</li>\n<li>Known <strong>C++ / Java</strong> well</li>\n<li>Experienced <strong>PHP Development</strong></li>\n<li>Skilled use <strong>MySQL Database</strong></li>\n<li>Understood <strong>Shell / Python</strong></li>\n</ul>\n<h2 id=\"Projects\"><a href=\"#Projects\" class=\"headerlink\" title=\"Projects\"></a>Projects</h2><h3 id=\"Research-Database-System\"><a href=\"#Research-Database-System\" class=\"headerlink\" title=\"Research Database System\"></a>Research Database System</h3><ul>\n<li>Feb 2016 - Mar 2016</li>\n<li>PHP Web Application (LNMP)</li>\n</ul>\n<h3 id=\"Library-Management-System\"><a href=\"#Library-Management-System\" class=\"headerlink\" title=\"Library Management System\"></a>Library Management System</h3><ul>\n<li>Oct 2015 - Nov 2015</li>\n<li>C++ Qt Application (Windows/Linux/Mac OS X)</li>\n</ul>\n<h3 id=\"Web-Store\"><a href=\"#Web-Store\" class=\"headerlink\" title=\"Web Store\"></a>Web Store</h3><ul>\n<li>Mar 2015 - Jun 2015</li>\n<li>PHP Web Application (LAMP)</li>\n</ul>\n<h3 id=\"Text-Editor\"><a href=\"#Text-Editor\" class=\"headerlink\" title=\"Text Editor\"></a>Text Editor</h3><ul>\n<li>Dec 2014 - Jan 2015</li>\n<li>Java Application</li>\n</ul>\n<h3 id=\"Paint-Panel\"><a href=\"#Paint-Panel\" class=\"headerlink\" title=\"Paint Panel\"></a>Paint Panel</h3><ul>\n<li>Nov 2014 - Dec 2014</li>\n<li>Java Applet</li>\n</ul>\n<h2 id=\"Awards\"><a href=\"#Awards\" class=\"headerlink\" title=\"Awards\"></a>Awards</h2><table>\n<thead>\n<tr>\n<th><div style=\"text-align:center\">PERIOD</div></th>\n<th><div style=\"text-align:center\">CONTEST</div></th>\n<th><div style=\"text-align:center\">AWARD</div></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><div style=\"text-align:center\">2015.11</td>\n<td><div style=\"text-align:center\">2015 ACM-ICPC Asia Regional Contest @Shanghai</td>\n<td><div style=\"text-align:center\"><strong>Honorable Mention</strong></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">2015.09</td>\n<td><div style=\"text-align:center\">2015 China Undergraduate Mathematical Contest in Modeling</td>\n<td><div style=\"text-align:center\"><strong>1st Prize</strong></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">2015.06</td>\n<td><div style=\"text-align:center\">‘Meituan Cup’ Programing Challenge Contest</td>\n<td><div style=\"text-align:center\"><strong>3rd Prize</strong></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">2014.11</td>\n<td><div style=\"text-align:center\">IBM Master the Mainframe Contest 2014</td>\n<td><div style=\"text-align:center\"><strong>Part 2 Finisher</strong></td>\n</tr>\n<tr>\n<td><div style=\"text-align:center\">2014.06</td>\n<td><div style=\"text-align:center\">‘Weile Cup’ Programing Challenge Contest</td>\n<td><div style=\"text-align:center\"><strong>Winner</strong></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Gallery","toc":false,"_content":"","source":"gallery/index.md","raw":"title: Gallery\ntoc: false\n---\n","date":"2016-11-24T17:06:41.000Z","updated":"2016-11-24T17:06:41.000Z","path":"gallery/index.html","comments":1,"layout":"page","_id":"cizmvz0rk00058mpr7tqwu2fy","content":"","excerpt":"","more":""},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.md","raw":"title: Tags\nlayout: tags\n---","date":"2016-11-24T17:06:41.000Z","updated":"2016-11-24T17:06:41.000Z","path":"tags/index.html","comments":1,"_id":"cizmvz0rx00098mprpn975skh","content":"","excerpt":"","more":""}],"Post":[{"title":"OpenWrt路由器的IPv6代理","date":"2015-12-15T07:15:15.000Z","photos":["/img/6rbanner.png"],"_content":"\n之前本来是想用路由器获取IPv6地址并使用双栈连接的代理服务器访问互联网。虽然之前网件自己的固件是有**穿透模式**并可以获取v6地址，但是无法安装ShadowSocks，所以才刷成了OpenWrt。但是这个固件默认是没有**穿透模式**的，所以需要自己配一发。\n\n现在我们需要用到以下软件：\n\n+ shadowsocks-libev-spec\n+ luci-app-shadowsocks-spec\n+ 6relayd\n\n# 安装ShadowSocks\n在OpenWrt上我们可以安装`shdowsocks-libev`版本，顺便搭配LuCI界面的`luci-app`使用，这个项目在[sourceforge](https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/)有发布，可以从这里下载最新的。如果被墙了也可以从我备份在服务器上的较老版本（注意软件所适配的架构是ar71xx）：\n\n\twget https://www.shintaku.cc/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\n\twget https://www.shintaku.cc/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n\t\n下载完成后使用`opkg`命令安装：\n\n\topkg install shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\n\topkg install luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n\t\n安装完成后`reboot`命令重启路由器，再次进入LuCI界面可以看到多了一个`Services`-`ShadowSocks`：\n\t\n![ShadowSocks](/img/opss.png)\n\n就说明安装正确，在里面输入ShadowSocks服务器信息就可以自动代理了，凡是连上这台路由器的设备获取到的都是代理后的网络了。\n\n# 安装6relayd\n由于现在即使通过代理上网也是消耗校内流量的，为了不走流量，我们只能借助IPv6网络。但是普通的路由器很少可以正常获取IPv6地址，即使路由器能获取到连接设备也很难获取，除了NETGEAR的部分路由器（包括WNR2200）的新版固件是有IPv6连接的，并且本人亲测使用`穿透模式`可以正常使用IPv6网络。所以我希望在OpenWrt上也能使用`穿透模式`，再通过ShadowSocks代理IPv6网络就可以免流量访问外网了。\n\n要使用`穿透模式`就少不了[6relayd](https://wiki.openwrt.org/doc/uci/6relayd)这个软件。可是官方源如今没提供这个包，于是可以获取我的备份并安装：\n\n\twget https://www.shintaku.cc/files/6relayd_2013-10-21_ar71xx.ipk\n\topkg install 6relayd_2013-10-21_ar71xx.ipk\n\t\n安装完成之后编辑`/etc/config/6relayd`文件在默认配置后面加一组：\n\n```sh\nconfig relay\n\toption master   'wan'\n\toption network  'lan'\n\toption rd       'relay'\n\toption dhcpv6   'relay'\n\toption ndp      'relay'\n```\n保存后使用下面的命令开启服务并设置为开机启动即可：\n\n\t/etc/init.d/6relayd start\n\t/etc/init.d/6relayd enable\n\n# 配置路由器\n现在要到LuCI界面下找到`Network`-`Interfaces`并添加一个新的接口：\n\n![Add new interface](/img/opnew.png)\n\n接口名叫`wan6`，协议选择`DHCPv6 client`，接口自定义为`@wan`：\n\n![wan6](/img/opwan6.png)\n\n保存应用后重启路由器，就会发现多了一个WAN6接口，并且WAN口获取到IPv6地址了：\n\n![IPv6地址](/img/opipv6.png)\n\n这时回到ShadowSocks的配置界面，将服务器地址改为VPS的IPv6地址就可以了：\n\n![ShadowSocks设置](/img/opsss.png)\n\n记得要开全局代理，因为毕竟PPPoE拨着号呢，~~在校园网11月30日改革后有线网拨号后不用登录就能上网让我很慌啊，路由器一直连着网终归是有偷跑流量的风险，所以打开IPv6全局代理最为保险，使得能通过代理的IPv6网络可以使用而IPv4网络因为通不过代理无法使用。~~2016年春季学期开学后发现即使拨号路由器也无法获取IPv6地址了。\n\n于是现在得到的效果就是任何连接到这台路由器的设备无需任何登录即可**访问外网**，而且**不消耗校内网流量**，网络还**自带科学上网Buff**，从此妈妈再也不用担心我流量不够用了。","source":"_posts/6relayd.md","raw":"title: OpenWrt路由器的IPv6代理\ndate: 2015-12-15 15:15:15\ntags: [ShadowSocks, OpenWrt, 科学上网, 路由器, Linux, ssh]\ncategories: [网络, 科学上网]\nphotos:\n\t- /img/6rbanner.png\n---\n\n之前本来是想用路由器获取IPv6地址并使用双栈连接的代理服务器访问互联网。虽然之前网件自己的固件是有**穿透模式**并可以获取v6地址，但是无法安装ShadowSocks，所以才刷成了OpenWrt。但是这个固件默认是没有**穿透模式**的，所以需要自己配一发。\n\n现在我们需要用到以下软件：\n\n+ shadowsocks-libev-spec\n+ luci-app-shadowsocks-spec\n+ 6relayd\n\n# 安装ShadowSocks\n在OpenWrt上我们可以安装`shdowsocks-libev`版本，顺便搭配LuCI界面的`luci-app`使用，这个项目在[sourceforge](https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/)有发布，可以从这里下载最新的。如果被墙了也可以从我备份在服务器上的较老版本（注意软件所适配的架构是ar71xx）：\n\n\twget https://www.shintaku.cc/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\n\twget https://www.shintaku.cc/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n\t\n下载完成后使用`opkg`命令安装：\n\n\topkg install shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\n\topkg install luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n\t\n安装完成后`reboot`命令重启路由器，再次进入LuCI界面可以看到多了一个`Services`-`ShadowSocks`：\n\t\n![ShadowSocks](/img/opss.png)\n\n就说明安装正确，在里面输入ShadowSocks服务器信息就可以自动代理了，凡是连上这台路由器的设备获取到的都是代理后的网络了。\n\n# 安装6relayd\n由于现在即使通过代理上网也是消耗校内流量的，为了不走流量，我们只能借助IPv6网络。但是普通的路由器很少可以正常获取IPv6地址，即使路由器能获取到连接设备也很难获取，除了NETGEAR的部分路由器（包括WNR2200）的新版固件是有IPv6连接的，并且本人亲测使用`穿透模式`可以正常使用IPv6网络。所以我希望在OpenWrt上也能使用`穿透模式`，再通过ShadowSocks代理IPv6网络就可以免流量访问外网了。\n\n要使用`穿透模式`就少不了[6relayd](https://wiki.openwrt.org/doc/uci/6relayd)这个软件。可是官方源如今没提供这个包，于是可以获取我的备份并安装：\n\n\twget https://www.shintaku.cc/files/6relayd_2013-10-21_ar71xx.ipk\n\topkg install 6relayd_2013-10-21_ar71xx.ipk\n\t\n安装完成之后编辑`/etc/config/6relayd`文件在默认配置后面加一组：\n\n```sh\nconfig relay\n\toption master   'wan'\n\toption network  'lan'\n\toption rd       'relay'\n\toption dhcpv6   'relay'\n\toption ndp      'relay'\n```\n保存后使用下面的命令开启服务并设置为开机启动即可：\n\n\t/etc/init.d/6relayd start\n\t/etc/init.d/6relayd enable\n\n# 配置路由器\n现在要到LuCI界面下找到`Network`-`Interfaces`并添加一个新的接口：\n\n![Add new interface](/img/opnew.png)\n\n接口名叫`wan6`，协议选择`DHCPv6 client`，接口自定义为`@wan`：\n\n![wan6](/img/opwan6.png)\n\n保存应用后重启路由器，就会发现多了一个WAN6接口，并且WAN口获取到IPv6地址了：\n\n![IPv6地址](/img/opipv6.png)\n\n这时回到ShadowSocks的配置界面，将服务器地址改为VPS的IPv6地址就可以了：\n\n![ShadowSocks设置](/img/opsss.png)\n\n记得要开全局代理，因为毕竟PPPoE拨着号呢，~~在校园网11月30日改革后有线网拨号后不用登录就能上网让我很慌啊，路由器一直连着网终归是有偷跑流量的风险，所以打开IPv6全局代理最为保险，使得能通过代理的IPv6网络可以使用而IPv4网络因为通不过代理无法使用。~~2016年春季学期开学后发现即使拨号路由器也无法获取IPv6地址了。\n\n于是现在得到的效果就是任何连接到这台路由器的设备无需任何登录即可**访问外网**，而且**不消耗校内网流量**，网络还**自带科学上网Buff**，从此妈妈再也不用担心我流量不够用了。","slug":"6relayd","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0rb00028mprg04umxs0","content":"<p>之前本来是想用路由器获取IPv6地址并使用双栈连接的代理服务器访问互联网。虽然之前网件自己的固件是有<strong>穿透模式</strong>并可以获取v6地址，但是无法安装ShadowSocks，所以才刷成了OpenWrt。但是这个固件默认是没有<strong>穿透模式</strong>的，所以需要自己配一发。</p>\n<p>现在我们需要用到以下软件：</p>\n<ul>\n<li>shadowsocks-libev-spec</li>\n<li>luci-app-shadowsocks-spec</li>\n<li>6relayd</li>\n</ul>\n<h1 id=\"安装ShadowSocks\"><a href=\"#安装ShadowSocks\" class=\"headerlink\" title=\"安装ShadowSocks\"></a>安装ShadowSocks</h1><p>在OpenWrt上我们可以安装<code>shdowsocks-libev</code>版本，顺便搭配LuCI界面的<code>luci-app</code>使用，这个项目在<a href=\"https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/\" target=\"_blank\" rel=\"external\">sourceforge</a>有发布，可以从这里下载最新的。如果被墙了也可以从我备份在服务器上的较老版本（注意软件所适配的架构是ar71xx）：</p>\n<pre><code>wget https://www.shintaku.cc/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\nwget https://www.shintaku.cc/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n</code></pre><p>下载完成后使用<code>opkg</code>命令安装：</p>\n<pre><code>opkg install shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\nopkg install luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n</code></pre><p>安装完成后<code>reboot</code>命令重启路由器，再次进入LuCI界面可以看到多了一个<code>Services</code>-<code>ShadowSocks</code>：</p>\n<p><img src=\"/img/opss.png\" alt=\"ShadowSocks\"></p>\n<p>就说明安装正确，在里面输入ShadowSocks服务器信息就可以自动代理了，凡是连上这台路由器的设备获取到的都是代理后的网络了。</p>\n<h1 id=\"安装6relayd\"><a href=\"#安装6relayd\" class=\"headerlink\" title=\"安装6relayd\"></a>安装6relayd</h1><p>由于现在即使通过代理上网也是消耗校内流量的，为了不走流量，我们只能借助IPv6网络。但是普通的路由器很少可以正常获取IPv6地址，即使路由器能获取到连接设备也很难获取，除了NETGEAR的部分路由器（包括WNR2200）的新版固件是有IPv6连接的，并且本人亲测使用<code>穿透模式</code>可以正常使用IPv6网络。所以我希望在OpenWrt上也能使用<code>穿透模式</code>，再通过ShadowSocks代理IPv6网络就可以免流量访问外网了。</p>\n<p>要使用<code>穿透模式</code>就少不了<a href=\"https://wiki.openwrt.org/doc/uci/6relayd\" target=\"_blank\" rel=\"external\">6relayd</a>这个软件。可是官方源如今没提供这个包，于是可以获取我的备份并安装：</p>\n<pre><code>wget https://www.shintaku.cc/files/6relayd_2013-10-21_ar71xx.ipk\nopkg install 6relayd_2013-10-21_ar71xx.ipk\n</code></pre><p>安装完成之后编辑<code>/etc/config/6relayd</code>文件在默认配置后面加一组：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">config relay</div><div class=\"line\">\toption master   <span class=\"string\">'wan'</span></div><div class=\"line\">\toption network  <span class=\"string\">'lan'</span></div><div class=\"line\">\toption rd       <span class=\"string\">'relay'</span></div><div class=\"line\">\toption dhcpv6   <span class=\"string\">'relay'</span></div><div class=\"line\">\toption ndp      <span class=\"string\">'relay'</span></div></pre></td></tr></table></figure>\n<p>保存后使用下面的命令开启服务并设置为开机启动即可：</p>\n<pre><code>/etc/init.d/6relayd start\n/etc/init.d/6relayd enable\n</code></pre><h1 id=\"配置路由器\"><a href=\"#配置路由器\" class=\"headerlink\" title=\"配置路由器\"></a>配置路由器</h1><p>现在要到LuCI界面下找到<code>Network</code>-<code>Interfaces</code>并添加一个新的接口：</p>\n<p><img src=\"/img/opnew.png\" alt=\"Add new interface\"></p>\n<p>接口名叫<code>wan6</code>，协议选择<code>DHCPv6 client</code>，接口自定义为<code>@wan</code>：</p>\n<p><img src=\"/img/opwan6.png\" alt=\"wan6\"></p>\n<p>保存应用后重启路由器，就会发现多了一个WAN6接口，并且WAN口获取到IPv6地址了：</p>\n<p><img src=\"/img/opipv6.png\" alt=\"IPv6地址\"></p>\n<p>这时回到ShadowSocks的配置界面，将服务器地址改为VPS的IPv6地址就可以了：</p>\n<p><img src=\"/img/opsss.png\" alt=\"ShadowSocks设置\"></p>\n<p>记得要开全局代理，因为毕竟PPPoE拨着号呢，<del>在校园网11月30日改革后有线网拨号后不用登录就能上网让我很慌啊，路由器一直连着网终归是有偷跑流量的风险，所以打开IPv6全局代理最为保险，使得能通过代理的IPv6网络可以使用而IPv4网络因为通不过代理无法使用。</del>2016年春季学期开学后发现即使拨号路由器也无法获取IPv6地址了。</p>\n<p>于是现在得到的效果就是任何连接到这台路由器的设备无需任何登录即可<strong>访问外网</strong>，而且<strong>不消耗校内网流量</strong>，网络还<strong>自带科学上网Buff</strong>，从此妈妈再也不用担心我流量不够用了。</p>\n","excerpt":"","more":"<p>之前本来是想用路由器获取IPv6地址并使用双栈连接的代理服务器访问互联网。虽然之前网件自己的固件是有<strong>穿透模式</strong>并可以获取v6地址，但是无法安装ShadowSocks，所以才刷成了OpenWrt。但是这个固件默认是没有<strong>穿透模式</strong>的，所以需要自己配一发。</p>\n<p>现在我们需要用到以下软件：</p>\n<ul>\n<li>shadowsocks-libev-spec</li>\n<li>luci-app-shadowsocks-spec</li>\n<li>6relayd</li>\n</ul>\n<h1 id=\"安装ShadowSocks\"><a href=\"#安装ShadowSocks\" class=\"headerlink\" title=\"安装ShadowSocks\"></a>安装ShadowSocks</h1><p>在OpenWrt上我们可以安装<code>shdowsocks-libev</code>版本，顺便搭配LuCI界面的<code>luci-app</code>使用，这个项目在<a href=\"https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/\">sourceforge</a>有发布，可以从这里下载最新的。如果被墙了也可以从我备份在服务器上的较老版本（注意软件所适配的架构是ar71xx）：</p>\n<pre><code>wget https://www.shintaku.cc/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\nwget https://www.shintaku.cc/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n</code></pre><p>下载完成后使用<code>opkg</code>命令安装：</p>\n<pre><code>opkg install shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\nopkg install luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n</code></pre><p>安装完成后<code>reboot</code>命令重启路由器，再次进入LuCI界面可以看到多了一个<code>Services</code>-<code>ShadowSocks</code>：</p>\n<p><img src=\"/img/opss.png\" alt=\"ShadowSocks\"></p>\n<p>就说明安装正确，在里面输入ShadowSocks服务器信息就可以自动代理了，凡是连上这台路由器的设备获取到的都是代理后的网络了。</p>\n<h1 id=\"安装6relayd\"><a href=\"#安装6relayd\" class=\"headerlink\" title=\"安装6relayd\"></a>安装6relayd</h1><p>由于现在即使通过代理上网也是消耗校内流量的，为了不走流量，我们只能借助IPv6网络。但是普通的路由器很少可以正常获取IPv6地址，即使路由器能获取到连接设备也很难获取，除了NETGEAR的部分路由器（包括WNR2200）的新版固件是有IPv6连接的，并且本人亲测使用<code>穿透模式</code>可以正常使用IPv6网络。所以我希望在OpenWrt上也能使用<code>穿透模式</code>，再通过ShadowSocks代理IPv6网络就可以免流量访问外网了。</p>\n<p>要使用<code>穿透模式</code>就少不了<a href=\"https://wiki.openwrt.org/doc/uci/6relayd\">6relayd</a>这个软件。可是官方源如今没提供这个包，于是可以获取我的备份并安装：</p>\n<pre><code>wget https://www.shintaku.cc/files/6relayd_2013-10-21_ar71xx.ipk\nopkg install 6relayd_2013-10-21_ar71xx.ipk\n</code></pre><p>安装完成之后编辑<code>/etc/config/6relayd</code>文件在默认配置后面加一组：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">config relay</div><div class=\"line\">\toption master   <span class=\"string\">'wan'</span></div><div class=\"line\">\toption network  <span class=\"string\">'lan'</span></div><div class=\"line\">\toption rd       <span class=\"string\">'relay'</span></div><div class=\"line\">\toption dhcpv6   <span class=\"string\">'relay'</span></div><div class=\"line\">\toption ndp      <span class=\"string\">'relay'</span></div></pre></td></tr></table></figure>\n<p>保存后使用下面的命令开启服务并设置为开机启动即可：</p>\n<pre><code>/etc/init.d/6relayd start\n/etc/init.d/6relayd enable\n</code></pre><h1 id=\"配置路由器\"><a href=\"#配置路由器\" class=\"headerlink\" title=\"配置路由器\"></a>配置路由器</h1><p>现在要到LuCI界面下找到<code>Network</code>-<code>Interfaces</code>并添加一个新的接口：</p>\n<p><img src=\"/img/opnew.png\" alt=\"Add new interface\"></p>\n<p>接口名叫<code>wan6</code>，协议选择<code>DHCPv6 client</code>，接口自定义为<code>@wan</code>：</p>\n<p><img src=\"/img/opwan6.png\" alt=\"wan6\"></p>\n<p>保存应用后重启路由器，就会发现多了一个WAN6接口，并且WAN口获取到IPv6地址了：</p>\n<p><img src=\"/img/opipv6.png\" alt=\"IPv6地址\"></p>\n<p>这时回到ShadowSocks的配置界面，将服务器地址改为VPS的IPv6地址就可以了：</p>\n<p><img src=\"/img/opsss.png\" alt=\"ShadowSocks设置\"></p>\n<p>记得要开全局代理，因为毕竟PPPoE拨着号呢，<del>在校园网11月30日改革后有线网拨号后不用登录就能上网让我很慌啊，路由器一直连着网终归是有偷跑流量的风险，所以打开IPv6全局代理最为保险，使得能通过代理的IPv6网络可以使用而IPv4网络因为通不过代理无法使用。</del>2016年春季学期开学后发现即使拨号路由器也无法获取IPv6地址了。</p>\n<p>于是现在得到的效果就是任何连接到这台路由器的设备无需任何登录即可<strong>访问外网</strong>，而且<strong>不消耗校内网流量</strong>，网络还<strong>自带科学上网Buff</strong>，从此妈妈再也不用担心我流量不够用了。</p>\n"},{"title":"使用adb工具刷机","date":"2016-07-07T13:11:11.000Z","photos":["/img/adbbanner.png"],"_content":"\n今天刷机小王子**一加3**终于给送来了，趁此机会总结一下之前用过的`adb`命令备查。\n\n之前曾经用过Odin线刷、卡刷等方式，直到接触了**Android Debug Bridge**才发现命令行的强大。\n\n首先通过Homebrew安装adb工具：\n\t\n\tbrew install android-platform-tools\n\n# OEM解锁\n拿到一部新机一般OEM是上锁的。为了刷机我们需要对Bootloader进行解锁。这个过程会清除设备中的数据，所以需要提前进行备份。\n\n首先进入**关于手机**连击**版本号**打开**开发者模式**，然后进入**开发者模式**打开**OEM解锁**，顺便将**USB调试**也打开。\n\n这时用数据线将手机与电脑相连进行USB调试，在命令行里输入：\n\n\tadb devices\n\t\n如果设备列表中出现Android设备则说明连接成功，接着输入：\n\n\tadb reboot bootloader\n\t\n设备会重启到bootloader，此时使用命令：\n\n\tfastboot oem unlock\n\n在手机上进行确认后就解锁了bootloader。\n\n# 刷入Recovery\n设备自带的Recovery一般可能不如第三方的功能强大，这里推荐一个叫**TWRP**的Recovery，因为如果要刷Gapps的话可能需要用到它。首先到[TeamWin](https://twrp.me/)下载对应设备的recovery包。\n\n接着通过`adb reboot bootloader`进入bootloader，再输入：\n\n\tfastboot flash recovery Recovery.img\n\t\n就刷入新的recovery了，再通过`fastboot reboot`重启就可以了。\n\n# 刷入ROM\n先通过命令使设备重启为recovery模式：\n\n\tadb reboot recovery\n\n如果是刷入新系统建议先*四清*（System、Data、Cache、Dalvik Cache），如果是升级系统建议先*三清*（Data、Cache、Dalvik Cache），如果希望保留数据，*双清*（Cache、Dalvik Cache）就可以了。无论怎样最好都先备份数据。\n\n首先将对应的ROM下载到电脑上。然后到手机上进入TWRP的`Advanced`，选择`ADB Sideload`。在电脑终端输入：\n\n\tadb sideload ROM.zip\n\n等待刷完就可以了。刷完后建议双清一下再重启。\n\n# 刷入GAPPS（可选）\n如果想要装上Google全家桶，在刷完ROM后先不要急于重启。先到[OpenGAPPS](http://opengapps.org/)下载对应版本的GAPPS到电脑上（注意Platform和Android版本），不同Variant区别在于：\n\n| Variant | Description |\n|---|---|\n| aroma | 图形化界面的super版，可以选择安装GAPPS |\n| super | 包含Google设备的所有Google Apps |\n| stock | 包含最新Nexus机型上预装的应用，并以GAPPS替换AOSP的同类应用 |\n| full  | 与stock版的内容相似，但不会替换AOSP应用 |\n| mini  | 包含完整的Google Play服务框架和主流应用 |\n| micro | 包含完整的Google Play服务框架和少数应用（Gmail、Calender、Google Now） |\n| nano  | 仅包含完整的Google Play服务框架 |\n| pico  | 仅包含最基础的Google Play服务框架 |\n\n可以根据自己的需要进行下载。\n\n最好在刷完ROM后立刻刷入GAPPS。依然进入`ADB Sideload`，并输入命令：\n\n\tadb sideload open_gapps.zip\n\n等待刷完后最好先双清一下再重启，否则可能会出现无限重启或停止工作的问题。\n\n# Root（可选）\nroot权限可以通过安装SuperSU的方式获取（CM13之类的系统可以在开发者选项里直接获取）。\n\n先到[chainfire](https://chainfire.eu/)下载最新版本的SuperSU，然后进入TWRP的`ADB Sideload`模式下直接通过`adb sideload SuperSU.zip`命令刷入即可。\n\n# 安装apk（可选）\n如果apk下载到了电脑上，无需拷贝到手机通过以下命令便可直接安装：\n\n\tadb install APP.apk","source":"_posts/adb.md","raw":"title: 使用adb工具刷机\ndate: 2016-07-07 21:11:11\ntags: [Android, 刷机]\ncategories: [奇技淫巧, Android]\nphotos: \n\t- /img/adbbanner.png\n---\n\n今天刷机小王子**一加3**终于给送来了，趁此机会总结一下之前用过的`adb`命令备查。\n\n之前曾经用过Odin线刷、卡刷等方式，直到接触了**Android Debug Bridge**才发现命令行的强大。\n\n首先通过Homebrew安装adb工具：\n\t\n\tbrew install android-platform-tools\n\n# OEM解锁\n拿到一部新机一般OEM是上锁的。为了刷机我们需要对Bootloader进行解锁。这个过程会清除设备中的数据，所以需要提前进行备份。\n\n首先进入**关于手机**连击**版本号**打开**开发者模式**，然后进入**开发者模式**打开**OEM解锁**，顺便将**USB调试**也打开。\n\n这时用数据线将手机与电脑相连进行USB调试，在命令行里输入：\n\n\tadb devices\n\t\n如果设备列表中出现Android设备则说明连接成功，接着输入：\n\n\tadb reboot bootloader\n\t\n设备会重启到bootloader，此时使用命令：\n\n\tfastboot oem unlock\n\n在手机上进行确认后就解锁了bootloader。\n\n# 刷入Recovery\n设备自带的Recovery一般可能不如第三方的功能强大，这里推荐一个叫**TWRP**的Recovery，因为如果要刷Gapps的话可能需要用到它。首先到[TeamWin](https://twrp.me/)下载对应设备的recovery包。\n\n接着通过`adb reboot bootloader`进入bootloader，再输入：\n\n\tfastboot flash recovery Recovery.img\n\t\n就刷入新的recovery了，再通过`fastboot reboot`重启就可以了。\n\n# 刷入ROM\n先通过命令使设备重启为recovery模式：\n\n\tadb reboot recovery\n\n如果是刷入新系统建议先*四清*（System、Data、Cache、Dalvik Cache），如果是升级系统建议先*三清*（Data、Cache、Dalvik Cache），如果希望保留数据，*双清*（Cache、Dalvik Cache）就可以了。无论怎样最好都先备份数据。\n\n首先将对应的ROM下载到电脑上。然后到手机上进入TWRP的`Advanced`，选择`ADB Sideload`。在电脑终端输入：\n\n\tadb sideload ROM.zip\n\n等待刷完就可以了。刷完后建议双清一下再重启。\n\n# 刷入GAPPS（可选）\n如果想要装上Google全家桶，在刷完ROM后先不要急于重启。先到[OpenGAPPS](http://opengapps.org/)下载对应版本的GAPPS到电脑上（注意Platform和Android版本），不同Variant区别在于：\n\n| Variant | Description |\n|---|---|\n| aroma | 图形化界面的super版，可以选择安装GAPPS |\n| super | 包含Google设备的所有Google Apps |\n| stock | 包含最新Nexus机型上预装的应用，并以GAPPS替换AOSP的同类应用 |\n| full  | 与stock版的内容相似，但不会替换AOSP应用 |\n| mini  | 包含完整的Google Play服务框架和主流应用 |\n| micro | 包含完整的Google Play服务框架和少数应用（Gmail、Calender、Google Now） |\n| nano  | 仅包含完整的Google Play服务框架 |\n| pico  | 仅包含最基础的Google Play服务框架 |\n\n可以根据自己的需要进行下载。\n\n最好在刷完ROM后立刻刷入GAPPS。依然进入`ADB Sideload`，并输入命令：\n\n\tadb sideload open_gapps.zip\n\n等待刷完后最好先双清一下再重启，否则可能会出现无限重启或停止工作的问题。\n\n# Root（可选）\nroot权限可以通过安装SuperSU的方式获取（CM13之类的系统可以在开发者选项里直接获取）。\n\n先到[chainfire](https://chainfire.eu/)下载最新版本的SuperSU，然后进入TWRP的`ADB Sideload`模式下直接通过`adb sideload SuperSU.zip`命令刷入即可。\n\n# 安装apk（可选）\n如果apk下载到了电脑上，无需拷贝到手机通过以下命令便可直接安装：\n\n\tadb install APP.apk","slug":"adb","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0rh00048mprjnax9c14","content":"<p>今天刷机小王子<strong>一加3</strong>终于给送来了，趁此机会总结一下之前用过的<code>adb</code>命令备查。</p>\n<p>之前曾经用过Odin线刷、卡刷等方式，直到接触了<strong>Android Debug Bridge</strong>才发现命令行的强大。</p>\n<p>首先通过Homebrew安装adb工具：</p>\n<pre><code>brew install android-platform-tools\n</code></pre><h1 id=\"OEM解锁\"><a href=\"#OEM解锁\" class=\"headerlink\" title=\"OEM解锁\"></a>OEM解锁</h1><p>拿到一部新机一般OEM是上锁的。为了刷机我们需要对Bootloader进行解锁。这个过程会清除设备中的数据，所以需要提前进行备份。</p>\n<p>首先进入<strong>关于手机</strong>连击<strong>版本号</strong>打开<strong>开发者模式</strong>，然后进入<strong>开发者模式</strong>打开<strong>OEM解锁</strong>，顺便将<strong>USB调试</strong>也打开。</p>\n<p>这时用数据线将手机与电脑相连进行USB调试，在命令行里输入：</p>\n<pre><code>adb devices\n</code></pre><p>如果设备列表中出现Android设备则说明连接成功，接着输入：</p>\n<pre><code>adb reboot bootloader\n</code></pre><p>设备会重启到bootloader，此时使用命令：</p>\n<pre><code>fastboot oem unlock\n</code></pre><p>在手机上进行确认后就解锁了bootloader。</p>\n<h1 id=\"刷入Recovery\"><a href=\"#刷入Recovery\" class=\"headerlink\" title=\"刷入Recovery\"></a>刷入Recovery</h1><p>设备自带的Recovery一般可能不如第三方的功能强大，这里推荐一个叫<strong>TWRP</strong>的Recovery，因为如果要刷Gapps的话可能需要用到它。首先到<a href=\"https://twrp.me/\" target=\"_blank\" rel=\"external\">TeamWin</a>下载对应设备的recovery包。</p>\n<p>接着通过<code>adb reboot bootloader</code>进入bootloader，再输入：</p>\n<pre><code>fastboot flash recovery Recovery.img\n</code></pre><p>就刷入新的recovery了，再通过<code>fastboot reboot</code>重启就可以了。</p>\n<h1 id=\"刷入ROM\"><a href=\"#刷入ROM\" class=\"headerlink\" title=\"刷入ROM\"></a>刷入ROM</h1><p>先通过命令使设备重启为recovery模式：</p>\n<pre><code>adb reboot recovery\n</code></pre><p>如果是刷入新系统建议先<em>四清</em>（System、Data、Cache、Dalvik Cache），如果是升级系统建议先<em>三清</em>（Data、Cache、Dalvik Cache），如果希望保留数据，<em>双清</em>（Cache、Dalvik Cache）就可以了。无论怎样最好都先备份数据。</p>\n<p>首先将对应的ROM下载到电脑上。然后到手机上进入TWRP的<code>Advanced</code>，选择<code>ADB Sideload</code>。在电脑终端输入：</p>\n<pre><code>adb sideload ROM.zip\n</code></pre><p>等待刷完就可以了。刷完后建议双清一下再重启。</p>\n<h1 id=\"刷入GAPPS（可选）\"><a href=\"#刷入GAPPS（可选）\" class=\"headerlink\" title=\"刷入GAPPS（可选）\"></a>刷入GAPPS（可选）</h1><p>如果想要装上Google全家桶，在刷完ROM后先不要急于重启。先到<a href=\"http://opengapps.org/\" target=\"_blank\" rel=\"external\">OpenGAPPS</a>下载对应版本的GAPPS到电脑上（注意Platform和Android版本），不同Variant区别在于：</p>\n<table>\n<thead>\n<tr>\n<th>Variant</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>aroma</td>\n<td>图形化界面的super版，可以选择安装GAPPS</td>\n</tr>\n<tr>\n<td>super</td>\n<td>包含Google设备的所有Google Apps</td>\n</tr>\n<tr>\n<td>stock</td>\n<td>包含最新Nexus机型上预装的应用，并以GAPPS替换AOSP的同类应用</td>\n</tr>\n<tr>\n<td>full</td>\n<td>与stock版的内容相似，但不会替换AOSP应用</td>\n</tr>\n<tr>\n<td>mini</td>\n<td>包含完整的Google Play服务框架和主流应用</td>\n</tr>\n<tr>\n<td>micro</td>\n<td>包含完整的Google Play服务框架和少数应用（Gmail、Calender、Google Now）</td>\n</tr>\n<tr>\n<td>nano</td>\n<td>仅包含完整的Google Play服务框架</td>\n</tr>\n<tr>\n<td>pico</td>\n<td>仅包含最基础的Google Play服务框架</td>\n</tr>\n</tbody>\n</table>\n<p>可以根据自己的需要进行下载。</p>\n<p>最好在刷完ROM后立刻刷入GAPPS。依然进入<code>ADB Sideload</code>，并输入命令：</p>\n<pre><code>adb sideload open_gapps.zip\n</code></pre><p>等待刷完后最好先双清一下再重启，否则可能会出现无限重启或停止工作的问题。</p>\n<h1 id=\"Root（可选）\"><a href=\"#Root（可选）\" class=\"headerlink\" title=\"Root（可选）\"></a>Root（可选）</h1><p>root权限可以通过安装SuperSU的方式获取（CM13之类的系统可以在开发者选项里直接获取）。</p>\n<p>先到<a href=\"https://chainfire.eu/\" target=\"_blank\" rel=\"external\">chainfire</a>下载最新版本的SuperSU，然后进入TWRP的<code>ADB Sideload</code>模式下直接通过<code>adb sideload SuperSU.zip</code>命令刷入即可。</p>\n<h1 id=\"安装apk（可选）\"><a href=\"#安装apk（可选）\" class=\"headerlink\" title=\"安装apk（可选）\"></a>安装apk（可选）</h1><p>如果apk下载到了电脑上，无需拷贝到手机通过以下命令便可直接安装：</p>\n<pre><code>adb install APP.apk\n</code></pre>","excerpt":"","more":"<p>今天刷机小王子<strong>一加3</strong>终于给送来了，趁此机会总结一下之前用过的<code>adb</code>命令备查。</p>\n<p>之前曾经用过Odin线刷、卡刷等方式，直到接触了<strong>Android Debug Bridge</strong>才发现命令行的强大。</p>\n<p>首先通过Homebrew安装adb工具：</p>\n<pre><code>brew install android-platform-tools\n</code></pre><h1 id=\"OEM解锁\"><a href=\"#OEM解锁\" class=\"headerlink\" title=\"OEM解锁\"></a>OEM解锁</h1><p>拿到一部新机一般OEM是上锁的。为了刷机我们需要对Bootloader进行解锁。这个过程会清除设备中的数据，所以需要提前进行备份。</p>\n<p>首先进入<strong>关于手机</strong>连击<strong>版本号</strong>打开<strong>开发者模式</strong>，然后进入<strong>开发者模式</strong>打开<strong>OEM解锁</strong>，顺便将<strong>USB调试</strong>也打开。</p>\n<p>这时用数据线将手机与电脑相连进行USB调试，在命令行里输入：</p>\n<pre><code>adb devices\n</code></pre><p>如果设备列表中出现Android设备则说明连接成功，接着输入：</p>\n<pre><code>adb reboot bootloader\n</code></pre><p>设备会重启到bootloader，此时使用命令：</p>\n<pre><code>fastboot oem unlock\n</code></pre><p>在手机上进行确认后就解锁了bootloader。</p>\n<h1 id=\"刷入Recovery\"><a href=\"#刷入Recovery\" class=\"headerlink\" title=\"刷入Recovery\"></a>刷入Recovery</h1><p>设备自带的Recovery一般可能不如第三方的功能强大，这里推荐一个叫<strong>TWRP</strong>的Recovery，因为如果要刷Gapps的话可能需要用到它。首先到<a href=\"https://twrp.me/\">TeamWin</a>下载对应设备的recovery包。</p>\n<p>接着通过<code>adb reboot bootloader</code>进入bootloader，再输入：</p>\n<pre><code>fastboot flash recovery Recovery.img\n</code></pre><p>就刷入新的recovery了，再通过<code>fastboot reboot</code>重启就可以了。</p>\n<h1 id=\"刷入ROM\"><a href=\"#刷入ROM\" class=\"headerlink\" title=\"刷入ROM\"></a>刷入ROM</h1><p>先通过命令使设备重启为recovery模式：</p>\n<pre><code>adb reboot recovery\n</code></pre><p>如果是刷入新系统建议先<em>四清</em>（System、Data、Cache、Dalvik Cache），如果是升级系统建议先<em>三清</em>（Data、Cache、Dalvik Cache），如果希望保留数据，<em>双清</em>（Cache、Dalvik Cache）就可以了。无论怎样最好都先备份数据。</p>\n<p>首先将对应的ROM下载到电脑上。然后到手机上进入TWRP的<code>Advanced</code>，选择<code>ADB Sideload</code>。在电脑终端输入：</p>\n<pre><code>adb sideload ROM.zip\n</code></pre><p>等待刷完就可以了。刷完后建议双清一下再重启。</p>\n<h1 id=\"刷入GAPPS（可选）\"><a href=\"#刷入GAPPS（可选）\" class=\"headerlink\" title=\"刷入GAPPS（可选）\"></a>刷入GAPPS（可选）</h1><p>如果想要装上Google全家桶，在刷完ROM后先不要急于重启。先到<a href=\"http://opengapps.org/\">OpenGAPPS</a>下载对应版本的GAPPS到电脑上（注意Platform和Android版本），不同Variant区别在于：</p>\n<table>\n<thead>\n<tr>\n<th>Variant</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>aroma</td>\n<td>图形化界面的super版，可以选择安装GAPPS</td>\n</tr>\n<tr>\n<td>super</td>\n<td>包含Google设备的所有Google Apps</td>\n</tr>\n<tr>\n<td>stock</td>\n<td>包含最新Nexus机型上预装的应用，并以GAPPS替换AOSP的同类应用</td>\n</tr>\n<tr>\n<td>full</td>\n<td>与stock版的内容相似，但不会替换AOSP应用</td>\n</tr>\n<tr>\n<td>mini</td>\n<td>包含完整的Google Play服务框架和主流应用</td>\n</tr>\n<tr>\n<td>micro</td>\n<td>包含完整的Google Play服务框架和少数应用（Gmail、Calender、Google Now）</td>\n</tr>\n<tr>\n<td>nano</td>\n<td>仅包含完整的Google Play服务框架</td>\n</tr>\n<tr>\n<td>pico</td>\n<td>仅包含最基础的Google Play服务框架</td>\n</tr>\n</tbody>\n</table>\n<p>可以根据自己的需要进行下载。</p>\n<p>最好在刷完ROM后立刻刷入GAPPS。依然进入<code>ADB Sideload</code>，并输入命令：</p>\n<pre><code>adb sideload open_gapps.zip\n</code></pre><p>等待刷完后最好先双清一下再重启，否则可能会出现无限重启或停止工作的问题。</p>\n<h1 id=\"Root（可选）\"><a href=\"#Root（可选）\" class=\"headerlink\" title=\"Root（可选）\"></a>Root（可选）</h1><p>root权限可以通过安装SuperSU的方式获取（CM13之类的系统可以在开发者选项里直接获取）。</p>\n<p>先到<a href=\"https://chainfire.eu/\">chainfire</a>下载最新版本的SuperSU，然后进入TWRP的<code>ADB Sideload</code>模式下直接通过<code>adb sideload SuperSU.zip</code>命令刷入即可。</p>\n<h1 id=\"安装apk（可选）\"><a href=\"#安装apk（可选）\" class=\"headerlink\" title=\"安装apk（可选）\"></a>安装apk（可选）</h1><p>如果apk下载到了电脑上，无需拷贝到手机通过以下命令便可直接安装：</p>\n<pre><code>adb install APP.apk\n</code></pre>"},{"title":"将jar程序打包成app","date":"2016-05-20T12:00:00.000Z","photos":["/img/appbanner.png"],"_content":"Mac下的Minecraft启动器是jar文件，每次需要启动的时候都要进入到它所在的目录下双击用**Jar Launcher**运行，或者使用`jawa -jar`命令启动，非常麻烦。所以想了一个办法，用**Automator**将它打包成app文件放到`Application`目录下就会出现在**Launchpad**里了。\n\n# 新建app\n首先打开Automator创建一个Application：\n\n![Application](/img/appnew.png)\n\n选择`Run Shell Script`并将jar的运行命令填进去：\n\n\tjava -jar /Applications/Minecraft.app/Contents/Jar/Minecraft\\ Launcher.jar\n\t\n![Run Shell Script](/img/appshell.png)\n\n然后改个名字保存到Application下。\n\n# 打包jar\n打开新建好的app的Contents，在里面新建一个Jar目录，并将启动器的jar文件移进去（只要跟上面命令的路径自洽即可）：\n\n![Jar](/img/appjar.png)\n\n然后可以用Automator右上角的Run测试一下是否可以正常执行：\n\n![Run](/img/apprun.png)\n\n# 更改图标\n打开app的Info，点击图标后会出现一个蓝圈：\n\n![Info](/img/appicon.png)\n\n这时将复制好的图片粘贴到这里就可以更改图标了。\n\n现在就可以到Launchpad里启动Minecraft的启动器了：\n\n![Launchpad](/img/applaunch.png)","source":"_posts/app.md","raw":"title: 将jar程序打包成app\ndate: 2016-05-20 20:00:00\ntags: [macOS, Minecraft]\ncategories: [奇技淫巧, macOS]\nphotos: \n\t- /img/appbanner.png\n---\nMac下的Minecraft启动器是jar文件，每次需要启动的时候都要进入到它所在的目录下双击用**Jar Launcher**运行，或者使用`jawa -jar`命令启动，非常麻烦。所以想了一个办法，用**Automator**将它打包成app文件放到`Application`目录下就会出现在**Launchpad**里了。\n\n# 新建app\n首先打开Automator创建一个Application：\n\n![Application](/img/appnew.png)\n\n选择`Run Shell Script`并将jar的运行命令填进去：\n\n\tjava -jar /Applications/Minecraft.app/Contents/Jar/Minecraft\\ Launcher.jar\n\t\n![Run Shell Script](/img/appshell.png)\n\n然后改个名字保存到Application下。\n\n# 打包jar\n打开新建好的app的Contents，在里面新建一个Jar目录，并将启动器的jar文件移进去（只要跟上面命令的路径自洽即可）：\n\n![Jar](/img/appjar.png)\n\n然后可以用Automator右上角的Run测试一下是否可以正常执行：\n\n![Run](/img/apprun.png)\n\n# 更改图标\n打开app的Info，点击图标后会出现一个蓝圈：\n\n![Info](/img/appicon.png)\n\n这时将复制好的图片粘贴到这里就可以更改图标了。\n\n现在就可以到Launchpad里启动Minecraft的启动器了：\n\n![Launchpad](/img/applaunch.png)","slug":"app","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0rs00088mprsu20ra62","content":"<p>Mac下的Minecraft启动器是jar文件，每次需要启动的时候都要进入到它所在的目录下双击用<strong>Jar Launcher</strong>运行，或者使用<code>jawa -jar</code>命令启动，非常麻烦。所以想了一个办法，用<strong>Automator</strong>将它打包成app文件放到<code>Application</code>目录下就会出现在<strong>Launchpad</strong>里了。</p>\n<h1 id=\"新建app\"><a href=\"#新建app\" class=\"headerlink\" title=\"新建app\"></a>新建app</h1><p>首先打开Automator创建一个Application：</p>\n<p><img src=\"/img/appnew.png\" alt=\"Application\"></p>\n<p>选择<code>Run Shell Script</code>并将jar的运行命令填进去：</p>\n<pre><code>java -jar /Applications/Minecraft.app/Contents/Jar/Minecraft\\ Launcher.jar\n</code></pre><p><img src=\"/img/appshell.png\" alt=\"Run Shell Script\"></p>\n<p>然后改个名字保存到Application下。</p>\n<h1 id=\"打包jar\"><a href=\"#打包jar\" class=\"headerlink\" title=\"打包jar\"></a>打包jar</h1><p>打开新建好的app的Contents，在里面新建一个Jar目录，并将启动器的jar文件移进去（只要跟上面命令的路径自洽即可）：</p>\n<p><img src=\"/img/appjar.png\" alt=\"Jar\"></p>\n<p>然后可以用Automator右上角的Run测试一下是否可以正常执行：</p>\n<p><img src=\"/img/apprun.png\" alt=\"Run\"></p>\n<h1 id=\"更改图标\"><a href=\"#更改图标\" class=\"headerlink\" title=\"更改图标\"></a>更改图标</h1><p>打开app的Info，点击图标后会出现一个蓝圈：</p>\n<p><img src=\"/img/appicon.png\" alt=\"Info\"></p>\n<p>这时将复制好的图片粘贴到这里就可以更改图标了。</p>\n<p>现在就可以到Launchpad里启动Minecraft的启动器了：</p>\n<p><img src=\"/img/applaunch.png\" alt=\"Launchpad\"></p>\n","excerpt":"","more":"<p>Mac下的Minecraft启动器是jar文件，每次需要启动的时候都要进入到它所在的目录下双击用<strong>Jar Launcher</strong>运行，或者使用<code>jawa -jar</code>命令启动，非常麻烦。所以想了一个办法，用<strong>Automator</strong>将它打包成app文件放到<code>Application</code>目录下就会出现在<strong>Launchpad</strong>里了。</p>\n<h1 id=\"新建app\"><a href=\"#新建app\" class=\"headerlink\" title=\"新建app\"></a>新建app</h1><p>首先打开Automator创建一个Application：</p>\n<p><img src=\"/img/appnew.png\" alt=\"Application\"></p>\n<p>选择<code>Run Shell Script</code>并将jar的运行命令填进去：</p>\n<pre><code>java -jar /Applications/Minecraft.app/Contents/Jar/Minecraft\\ Launcher.jar\n</code></pre><p><img src=\"/img/appshell.png\" alt=\"Run Shell Script\"></p>\n<p>然后改个名字保存到Application下。</p>\n<h1 id=\"打包jar\"><a href=\"#打包jar\" class=\"headerlink\" title=\"打包jar\"></a>打包jar</h1><p>打开新建好的app的Contents，在里面新建一个Jar目录，并将启动器的jar文件移进去（只要跟上面命令的路径自洽即可）：</p>\n<p><img src=\"/img/appjar.png\" alt=\"Jar\"></p>\n<p>然后可以用Automator右上角的Run测试一下是否可以正常执行：</p>\n<p><img src=\"/img/apprun.png\" alt=\"Run\"></p>\n<h1 id=\"更改图标\"><a href=\"#更改图标\" class=\"headerlink\" title=\"更改图标\"></a>更改图标</h1><p>打开app的Info，点击图标后会出现一个蓝圈：</p>\n<p><img src=\"/img/appicon.png\" alt=\"Info\"></p>\n<p>这时将复制好的图片粘贴到这里就可以更改图标了。</p>\n<p>现在就可以到Launchpad里启动Minecraft的启动器了：</p>\n<p><img src=\"/img/applaunch.png\" alt=\"Launchpad\"></p>\n"},{"title":"使用aria2多线程下载","date":"2015-12-03T15:33:33.000Z","photos":["/img/arbanner.png"],"_content":"**aria2**是一款轻量级多线程的命令行下载工具，支持**HTTP/HTTPS**、**FTP**、**SFTP**、**BitTorrent**和**Metalink**等多种下载方式。程序支持Mac OS X、Linux、Windows等多平台。\n\n这个下载器最大的优点就是多线程。最开始接触它的时候是因为在Mac下下载百度云的资源非常不方便，不借助其他工具只能通过浏览器下载，而且一个线程速度超慢，一不小心就会下载失败。后来从知乎上看到这个神器，~~用了*金坷垃*，~~速度**一千八**。\n\n# 下载安装\n首先到[GitHub](https://github.com/tatsuhiro-t/aria2/releases)下载对应系统的安装文件进行安装；如果在macOS下也可以通过`homebrew`安装：\n\n\tbrew install aria2\n\n# 配置文件\n先新建一个配置文件叫`aria2.conf`：\n\n\tmkdir ~/.aria2\n\tvi ~/.aria2/aria2.conf\n\t\n放在这个目录下的主要原因是可以在启动时不再指定其配置文件的位置。然后编辑它：\n\n```ini\n# Basic Options\ndir=/Users/$USER/Downloads\ninput-file=/Users/$USER/.aria2/session.dat\nlog=/Users/$USER/.aria2/aria2.log\nmax-concurrent-downloads=15\nmax-connection-per-server=15\ncheck-integrity=true\ncontinue=true\n\n# BitTorrent/Metalink Options\nbt-enable-lpd=true\nbt-max-open-files=16\nbt-max-peers=8\ndht-file-path=/opt/var/aria2/dht.dat\ndht-file-path6=/opt/var/aria2/dht6.dat\ndht-listen-port=6801\n#enable-dht6=true\nlisten-port=6801\nmax-overall-upload-limit=0K\nseed-ratio=0\n\n# RPC Options\nenable-rpc=true\nrpc-allow-origin-all=true\nrpc-listen-all=true\nrpc-listen-port=6800\n#rpc-secret=123456\n#rpc-secure=true\n\n# Advanced Options\ndaemon=true\ndisable-ipv6=true\n#enable-mmap=true\nforce-save=true\nfile-allocation=none\nlog-level=warn\nmax-overall-download-limit=0K\nsave-session=/Users/$USER/.aria2/session.dat\nalways-resume=true\nsplit=10\nmin-split-size=10M\n\n# Pan.baidu.com\nuser-agent=netdisk;5.2.6;PC;PC-Windows;6.2.9200;WindowsBaiduYunGuanJia\nreferer=http://pan.baidu.com/disk/home\n```\n配置文件中所有`$USER`要改成自己的用户名，`dir`参数设置的是下载路径，也可以按自己的习惯更改；`input-file`、`save-session`参数是指定session（保存下载进度）的存储位置，如果没有那个文件可以手动创建：\n\n\ttouch session.dat\n\n`log`参数指定log路径，会自动生成。这时可以通过`aria2c`命令启动服务了。可以通过`ps aux | grep aria2c`命令检查是否启动成功。\n\n# 开机启动\n若要配置macOS开机启动，可以在`~/Library/LaunchAgents`下创建一个plist文件`homebrew.mxcl.aria2.plist`，内容如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n  <dict>\n    <key>Label</key>\n    <string>homebrew.mxcl.aria2</string>\n    <key>RunAtLoad</key>\n    <true/>\n    <key>KeepAlive</key>\n    <true/>\n    <key>Program</key>\n    <string>/usr/local/opt/aria2/bin/aria2c</string>\n  </dict>\n</plist>\n```\n\n编辑完后将将其权限设为`-rw-------`：\n\n\tchmod 600 ~/Library/LaunchAgents/homebrew.mxcl.aria2.plist\n\n# 配置GUI\n由于aria2是一个命令行工具，所以在没有其他辅助的情况下需要通过命令行来操作。具体使用方法请参阅[aria2.github.io](https://aria2.github.io/)。\n\n为了更加便于使用，GitHub上的[ziahamza](https://github.com/ziahamza)开发了一个WebUI，可以通过网页界面来操作aria2：\n\n![WebUI](/img/arui.png)\t\n\n简单来说就是打开[http://ziahamza.github.io/webui-aria2/](http://ziahamza.github.io/webui-aria2/)就能使用了。也可以将[项目源码](https://github.com/ziahamza/webui-aria2/archive/master.zip)下载下来放到本地或者放到自己的服务器上来用，比如[http://aria.shintaku.cc/](http://aria.shintaku.cc/)。\n\n打开以后如果右上角出现：\n\n![连接成功](/img/arsuccess.png)\t\n\t\n就说明连接成功了，这时就可以直接输入下载链接下载了。\n\n如果连接不成功请到`Setting`-`Connection Setting`检查端口是不是6800，并且确保6800端口没被别的服务占用：\n\n![连接设置](/img/arsetting.png)\t\n\n# 百度网盘插件\n百度网盘如果使用普通下载的话~~可能得到的是一个临时的链接？~~不能断点续传，所以需要一个叫[BaiduExporter](https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno)的Chrome插件像百度云的客户端一样获取地址。如果Chrome商店被墙了也可以到[GitHub](https://github.com/acgotaku/BaiduExporter/releases)上直接下载`crx`文件手动添加。\n\n添加成功后再打开百度云会发现多了一个`导出下载`按钮：\n\n![导出下载](/img/arbaiduyun.png)\t\n\n打开`设置`，按照如下设置：\n\n![导出设置](/img/aryunsetting.png)\n\n其中`User-agent`需要设置为`netdisk;5.2.7;PC;PC-Windows;6.2.9200;WindowsBaiduYunGuanJia`，`referer`设置为`http://pan.baidu.com/disk/home`，将aria2伪装成百度云管家来解除限速。\n\n应用后选择百度云上的文件，通过`导出下载`-`ARIA2 RPC`：\n\n![下载成功](/img/ardownload.png)\n\n这时再通过WebUI查看应当已经有新添加的任务以一千八的速度在下载了。","source":"_posts/aria2.md","raw":"title: 使用aria2多线程下载\ndate: 2015-12-03 23:33:33\ntags: [下载, Unix, Linux]\ncategories: [奇技淫巧, ＊nix]\nphotos: \n\t- /img/arbanner.png\n---\n**aria2**是一款轻量级多线程的命令行下载工具，支持**HTTP/HTTPS**、**FTP**、**SFTP**、**BitTorrent**和**Metalink**等多种下载方式。程序支持Mac OS X、Linux、Windows等多平台。\n\n这个下载器最大的优点就是多线程。最开始接触它的时候是因为在Mac下下载百度云的资源非常不方便，不借助其他工具只能通过浏览器下载，而且一个线程速度超慢，一不小心就会下载失败。后来从知乎上看到这个神器，~~用了*金坷垃*，~~速度**一千八**。\n\n# 下载安装\n首先到[GitHub](https://github.com/tatsuhiro-t/aria2/releases)下载对应系统的安装文件进行安装；如果在macOS下也可以通过`homebrew`安装：\n\n\tbrew install aria2\n\n# 配置文件\n先新建一个配置文件叫`aria2.conf`：\n\n\tmkdir ~/.aria2\n\tvi ~/.aria2/aria2.conf\n\t\n放在这个目录下的主要原因是可以在启动时不再指定其配置文件的位置。然后编辑它：\n\n```ini\n# Basic Options\ndir=/Users/$USER/Downloads\ninput-file=/Users/$USER/.aria2/session.dat\nlog=/Users/$USER/.aria2/aria2.log\nmax-concurrent-downloads=15\nmax-connection-per-server=15\ncheck-integrity=true\ncontinue=true\n\n# BitTorrent/Metalink Options\nbt-enable-lpd=true\nbt-max-open-files=16\nbt-max-peers=8\ndht-file-path=/opt/var/aria2/dht.dat\ndht-file-path6=/opt/var/aria2/dht6.dat\ndht-listen-port=6801\n#enable-dht6=true\nlisten-port=6801\nmax-overall-upload-limit=0K\nseed-ratio=0\n\n# RPC Options\nenable-rpc=true\nrpc-allow-origin-all=true\nrpc-listen-all=true\nrpc-listen-port=6800\n#rpc-secret=123456\n#rpc-secure=true\n\n# Advanced Options\ndaemon=true\ndisable-ipv6=true\n#enable-mmap=true\nforce-save=true\nfile-allocation=none\nlog-level=warn\nmax-overall-download-limit=0K\nsave-session=/Users/$USER/.aria2/session.dat\nalways-resume=true\nsplit=10\nmin-split-size=10M\n\n# Pan.baidu.com\nuser-agent=netdisk;5.2.6;PC;PC-Windows;6.2.9200;WindowsBaiduYunGuanJia\nreferer=http://pan.baidu.com/disk/home\n```\n配置文件中所有`$USER`要改成自己的用户名，`dir`参数设置的是下载路径，也可以按自己的习惯更改；`input-file`、`save-session`参数是指定session（保存下载进度）的存储位置，如果没有那个文件可以手动创建：\n\n\ttouch session.dat\n\n`log`参数指定log路径，会自动生成。这时可以通过`aria2c`命令启动服务了。可以通过`ps aux | grep aria2c`命令检查是否启动成功。\n\n# 开机启动\n若要配置macOS开机启动，可以在`~/Library/LaunchAgents`下创建一个plist文件`homebrew.mxcl.aria2.plist`，内容如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n  <dict>\n    <key>Label</key>\n    <string>homebrew.mxcl.aria2</string>\n    <key>RunAtLoad</key>\n    <true/>\n    <key>KeepAlive</key>\n    <true/>\n    <key>Program</key>\n    <string>/usr/local/opt/aria2/bin/aria2c</string>\n  </dict>\n</plist>\n```\n\n编辑完后将将其权限设为`-rw-------`：\n\n\tchmod 600 ~/Library/LaunchAgents/homebrew.mxcl.aria2.plist\n\n# 配置GUI\n由于aria2是一个命令行工具，所以在没有其他辅助的情况下需要通过命令行来操作。具体使用方法请参阅[aria2.github.io](https://aria2.github.io/)。\n\n为了更加便于使用，GitHub上的[ziahamza](https://github.com/ziahamza)开发了一个WebUI，可以通过网页界面来操作aria2：\n\n![WebUI](/img/arui.png)\t\n\n简单来说就是打开[http://ziahamza.github.io/webui-aria2/](http://ziahamza.github.io/webui-aria2/)就能使用了。也可以将[项目源码](https://github.com/ziahamza/webui-aria2/archive/master.zip)下载下来放到本地或者放到自己的服务器上来用，比如[http://aria.shintaku.cc/](http://aria.shintaku.cc/)。\n\n打开以后如果右上角出现：\n\n![连接成功](/img/arsuccess.png)\t\n\t\n就说明连接成功了，这时就可以直接输入下载链接下载了。\n\n如果连接不成功请到`Setting`-`Connection Setting`检查端口是不是6800，并且确保6800端口没被别的服务占用：\n\n![连接设置](/img/arsetting.png)\t\n\n# 百度网盘插件\n百度网盘如果使用普通下载的话~~可能得到的是一个临时的链接？~~不能断点续传，所以需要一个叫[BaiduExporter](https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno)的Chrome插件像百度云的客户端一样获取地址。如果Chrome商店被墙了也可以到[GitHub](https://github.com/acgotaku/BaiduExporter/releases)上直接下载`crx`文件手动添加。\n\n添加成功后再打开百度云会发现多了一个`导出下载`按钮：\n\n![导出下载](/img/arbaiduyun.png)\t\n\n打开`设置`，按照如下设置：\n\n![导出设置](/img/aryunsetting.png)\n\n其中`User-agent`需要设置为`netdisk;5.2.7;PC;PC-Windows;6.2.9200;WindowsBaiduYunGuanJia`，`referer`设置为`http://pan.baidu.com/disk/home`，将aria2伪装成百度云管家来解除限速。\n\n应用后选择百度云上的文件，通过`导出下载`-`ARIA2 RPC`：\n\n![下载成功](/img/ardownload.png)\n\n这时再通过WebUI查看应当已经有新添加的任务以一千八的速度在下载了。","slug":"aria2","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0s1000a8mprurstbq2w","content":"<p><strong>aria2</strong>是一款轻量级多线程的命令行下载工具，支持<strong>HTTP/HTTPS</strong>、<strong>FTP</strong>、<strong>SFTP</strong>、<strong>BitTorrent</strong>和<strong>Metalink</strong>等多种下载方式。程序支持Mac OS X、Linux、Windows等多平台。</p>\n<p>这个下载器最大的优点就是多线程。最开始接触它的时候是因为在Mac下下载百度云的资源非常不方便，不借助其他工具只能通过浏览器下载，而且一个线程速度超慢，一不小心就会下载失败。后来从知乎上看到这个神器，<del>用了<em>金坷垃</em>，</del>速度<strong>一千八</strong>。</p>\n<h1 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h1><p>首先到<a href=\"https://github.com/tatsuhiro-t/aria2/releases\" target=\"_blank\" rel=\"external\">GitHub</a>下载对应系统的安装文件进行安装；如果在macOS下也可以通过<code>homebrew</code>安装：</p>\n<pre><code>brew install aria2\n</code></pre><h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><p>先新建一个配置文件叫<code>aria2.conf</code>：</p>\n<pre><code>mkdir ~/.aria2\nvi ~/.aria2/aria2.conf\n</code></pre><p>放在这个目录下的主要原因是可以在启动时不再指定其配置文件的位置。然后编辑它：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Basic Options</span></div><div class=\"line\"><span class=\"attr\">dir</span>=/Users/<span class=\"variable\">$USER</span>/Downloads</div><div class=\"line\"><span class=\"attr\">input-file</span>=/Users/<span class=\"variable\">$USER</span>/.aria2/session.dat</div><div class=\"line\"><span class=\"attr\">log</span>=/Users/<span class=\"variable\">$USER</span>/.aria2/aria2.log</div><div class=\"line\"><span class=\"attr\">max-concurrent-downloads</span>=<span class=\"number\">15</span></div><div class=\"line\"><span class=\"attr\">max-connection-per-server</span>=<span class=\"number\">15</span></div><div class=\"line\"><span class=\"attr\">check-integrity</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">continue</span>=<span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># BitTorrent/Metalink Options</span></div><div class=\"line\"><span class=\"attr\">bt-enable-lpd</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">bt-max-open-files</span>=<span class=\"number\">16</span></div><div class=\"line\"><span class=\"attr\">bt-max-peers</span>=<span class=\"number\">8</span></div><div class=\"line\"><span class=\"attr\">dht-file-path</span>=/opt/var/aria2/dht.dat</div><div class=\"line\"><span class=\"attr\">dht-file-path6</span>=/opt/var/aria2/dht6.dat</div><div class=\"line\"><span class=\"attr\">dht-listen-port</span>=<span class=\"number\">6801</span></div><div class=\"line\"><span class=\"comment\">#enable-dht6=true</span></div><div class=\"line\"><span class=\"attr\">listen-port</span>=<span class=\"number\">6801</span></div><div class=\"line\"><span class=\"attr\">max-overall-upload-limit</span>=<span class=\"number\">0</span>K</div><div class=\"line\"><span class=\"attr\">seed-ratio</span>=<span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># RPC Options</span></div><div class=\"line\"><span class=\"attr\">enable-rpc</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">rpc-allow-origin-all</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">rpc-listen-all</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">rpc-listen-port</span>=<span class=\"number\">6800</span></div><div class=\"line\"><span class=\"comment\">#rpc-secret=123456</span></div><div class=\"line\"><span class=\"comment\">#rpc-secure=true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Advanced Options</span></div><div class=\"line\"><span class=\"attr\">daemon</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">disable-ipv6</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"comment\">#enable-mmap=true</span></div><div class=\"line\"><span class=\"attr\">force-save</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">file-allocation</span>=none</div><div class=\"line\"><span class=\"attr\">log-level</span>=warn</div><div class=\"line\"><span class=\"attr\">max-overall-download-limit</span>=<span class=\"number\">0</span>K</div><div class=\"line\"><span class=\"attr\">save-session</span>=/Users/<span class=\"variable\">$USER</span>/.aria2/session.dat</div><div class=\"line\"><span class=\"attr\">always-resume</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">split</span>=<span class=\"number\">10</span></div><div class=\"line\"><span class=\"attr\">min-split-size</span>=<span class=\"number\">10</span>M</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Pan.baidu.com</span></div><div class=\"line\"><span class=\"attr\">user-agent</span>=netdisk;<span class=\"number\">5.2</span>.<span class=\"number\">6</span>;PC;PC-Windows;<span class=\"number\">6.2</span>.<span class=\"number\">9200</span>;WindowsBaiduYunGuanJia</div><div class=\"line\"><span class=\"attr\">referer</span>=http://pan.baidu.com/disk/home</div></pre></td></tr></table></figure>\n<p>配置文件中所有<code>$USER</code>要改成自己的用户名，<code>dir</code>参数设置的是下载路径，也可以按自己的习惯更改；<code>input-file</code>、<code>save-session</code>参数是指定session（保存下载进度）的存储位置，如果没有那个文件可以手动创建：</p>\n<pre><code>touch session.dat\n</code></pre><p><code>log</code>参数指定log路径，会自动生成。这时可以通过<code>aria2c</code>命令启动服务了。可以通过<code>ps aux | grep aria2c</code>命令检查是否启动成功。</p>\n<h1 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h1><p>若要配置macOS开机启动，可以在<code>~/Library/LaunchAgents</code>下创建一个plist文件<code>homebrew.mxcl.aria2.plist</code>，内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plist</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Label<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>homebrew.mxcl.aria2<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>RunAtLoad<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>KeepAlive<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Program<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>/usr/local/opt/aria2/bin/aria2c<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plist</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>编辑完后将将其权限设为<code>-rw-------</code>：</p>\n<pre><code>chmod 600 ~/Library/LaunchAgents/homebrew.mxcl.aria2.plist\n</code></pre><h1 id=\"配置GUI\"><a href=\"#配置GUI\" class=\"headerlink\" title=\"配置GUI\"></a>配置GUI</h1><p>由于aria2是一个命令行工具，所以在没有其他辅助的情况下需要通过命令行来操作。具体使用方法请参阅<a href=\"https://aria2.github.io/\" target=\"_blank\" rel=\"external\">aria2.github.io</a>。</p>\n<p>为了更加便于使用，GitHub上的<a href=\"https://github.com/ziahamza\" target=\"_blank\" rel=\"external\">ziahamza</a>开发了一个WebUI，可以通过网页界面来操作aria2：</p>\n<p><img src=\"/img/arui.png\" alt=\"WebUI\">    </p>\n<p>简单来说就是打开<a href=\"http://ziahamza.github.io/webui-aria2/\" target=\"_blank\" rel=\"external\">http://ziahamza.github.io/webui-aria2/</a>就能使用了。也可以将<a href=\"https://github.com/ziahamza/webui-aria2/archive/master.zip\" target=\"_blank\" rel=\"external\">项目源码</a>下载下来放到本地或者放到自己的服务器上来用，比如<a href=\"http://aria.shintaku.cc/\" target=\"_blank\" rel=\"external\">http://aria.shintaku.cc/</a>。</p>\n<p>打开以后如果右上角出现：</p>\n<p><img src=\"/img/arsuccess.png\" alt=\"连接成功\">    </p>\n<p>就说明连接成功了，这时就可以直接输入下载链接下载了。</p>\n<p>如果连接不成功请到<code>Setting</code>-<code>Connection Setting</code>检查端口是不是6800，并且确保6800端口没被别的服务占用：</p>\n<p><img src=\"/img/arsetting.png\" alt=\"连接设置\">    </p>\n<h1 id=\"百度网盘插件\"><a href=\"#百度网盘插件\" class=\"headerlink\" title=\"百度网盘插件\"></a>百度网盘插件</h1><p>百度网盘如果使用普通下载的话<del>可能得到的是一个临时的链接？</del>不能断点续传，所以需要一个叫<a href=\"https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno\" target=\"_blank\" rel=\"external\">BaiduExporter</a>的Chrome插件像百度云的客户端一样获取地址。如果Chrome商店被墙了也可以到<a href=\"https://github.com/acgotaku/BaiduExporter/releases\" target=\"_blank\" rel=\"external\">GitHub</a>上直接下载<code>crx</code>文件手动添加。</p>\n<p>添加成功后再打开百度云会发现多了一个<code>导出下载</code>按钮：</p>\n<p><img src=\"/img/arbaiduyun.png\" alt=\"导出下载\">    </p>\n<p>打开<code>设置</code>，按照如下设置：</p>\n<p><img src=\"/img/aryunsetting.png\" alt=\"导出设置\"></p>\n<p>其中<code>User-agent</code>需要设置为<code>netdisk;5.2.7;PC;PC-Windows;6.2.9200;WindowsBaiduYunGuanJia</code>，<code>referer</code>设置为<code>http://pan.baidu.com/disk/home</code>，将aria2伪装成百度云管家来解除限速。</p>\n<p>应用后选择百度云上的文件，通过<code>导出下载</code>-<code>ARIA2 RPC</code>：</p>\n<p><img src=\"/img/ardownload.png\" alt=\"下载成功\"></p>\n<p>这时再通过WebUI查看应当已经有新添加的任务以一千八的速度在下载了。</p>\n","excerpt":"","more":"<p><strong>aria2</strong>是一款轻量级多线程的命令行下载工具，支持<strong>HTTP/HTTPS</strong>、<strong>FTP</strong>、<strong>SFTP</strong>、<strong>BitTorrent</strong>和<strong>Metalink</strong>等多种下载方式。程序支持Mac OS X、Linux、Windows等多平台。</p>\n<p>这个下载器最大的优点就是多线程。最开始接触它的时候是因为在Mac下下载百度云的资源非常不方便，不借助其他工具只能通过浏览器下载，而且一个线程速度超慢，一不小心就会下载失败。后来从知乎上看到这个神器，<del>用了<em>金坷垃</em>，</del>速度<strong>一千八</strong>。</p>\n<h1 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h1><p>首先到<a href=\"https://github.com/tatsuhiro-t/aria2/releases\">GitHub</a>下载对应系统的安装文件进行安装；如果在macOS下也可以通过<code>homebrew</code>安装：</p>\n<pre><code>brew install aria2\n</code></pre><h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><p>先新建一个配置文件叫<code>aria2.conf</code>：</p>\n<pre><code>mkdir ~/.aria2\nvi ~/.aria2/aria2.conf\n</code></pre><p>放在这个目录下的主要原因是可以在启动时不再指定其配置文件的位置。然后编辑它：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Basic Options</span></div><div class=\"line\"><span class=\"attr\">dir</span>=/Users/<span class=\"variable\">$USER</span>/Downloads</div><div class=\"line\"><span class=\"attr\">input-file</span>=/Users/<span class=\"variable\">$USER</span>/.aria2/session.dat</div><div class=\"line\"><span class=\"attr\">log</span>=/Users/<span class=\"variable\">$USER</span>/.aria2/aria2.log</div><div class=\"line\"><span class=\"attr\">max-concurrent-downloads</span>=<span class=\"number\">15</span></div><div class=\"line\"><span class=\"attr\">max-connection-per-server</span>=<span class=\"number\">15</span></div><div class=\"line\"><span class=\"attr\">check-integrity</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">continue</span>=<span class=\"literal\">true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># BitTorrent/Metalink Options</span></div><div class=\"line\"><span class=\"attr\">bt-enable-lpd</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">bt-max-open-files</span>=<span class=\"number\">16</span></div><div class=\"line\"><span class=\"attr\">bt-max-peers</span>=<span class=\"number\">8</span></div><div class=\"line\"><span class=\"attr\">dht-file-path</span>=/opt/var/aria2/dht.dat</div><div class=\"line\"><span class=\"attr\">dht-file-path6</span>=/opt/var/aria2/dht6.dat</div><div class=\"line\"><span class=\"attr\">dht-listen-port</span>=<span class=\"number\">6801</span></div><div class=\"line\"><span class=\"comment\">#enable-dht6=true</span></div><div class=\"line\"><span class=\"attr\">listen-port</span>=<span class=\"number\">6801</span></div><div class=\"line\"><span class=\"attr\">max-overall-upload-limit</span>=<span class=\"number\">0</span>K</div><div class=\"line\"><span class=\"attr\">seed-ratio</span>=<span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># RPC Options</span></div><div class=\"line\"><span class=\"attr\">enable-rpc</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">rpc-allow-origin-all</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">rpc-listen-all</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">rpc-listen-port</span>=<span class=\"number\">6800</span></div><div class=\"line\"><span class=\"comment\">#rpc-secret=123456</span></div><div class=\"line\"><span class=\"comment\">#rpc-secure=true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Advanced Options</span></div><div class=\"line\"><span class=\"attr\">daemon</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">disable-ipv6</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"comment\">#enable-mmap=true</span></div><div class=\"line\"><span class=\"attr\">force-save</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">file-allocation</span>=none</div><div class=\"line\"><span class=\"attr\">log-level</span>=warn</div><div class=\"line\"><span class=\"attr\">max-overall-download-limit</span>=<span class=\"number\">0</span>K</div><div class=\"line\"><span class=\"attr\">save-session</span>=/Users/<span class=\"variable\">$USER</span>/.aria2/session.dat</div><div class=\"line\"><span class=\"attr\">always-resume</span>=<span class=\"literal\">true</span></div><div class=\"line\"><span class=\"attr\">split</span>=<span class=\"number\">10</span></div><div class=\"line\"><span class=\"attr\">min-split-size</span>=<span class=\"number\">10</span>M</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Pan.baidu.com</span></div><div class=\"line\"><span class=\"attr\">user-agent</span>=netdisk;<span class=\"number\">5.2</span>.<span class=\"number\">6</span>;PC;PC-Windows;<span class=\"number\">6.2</span>.<span class=\"number\">9200</span>;WindowsBaiduYunGuanJia</div><div class=\"line\"><span class=\"attr\">referer</span>=http://pan.baidu.com/disk/home</div></pre></td></tr></table></figure>\n<p>配置文件中所有<code>$USER</code>要改成自己的用户名，<code>dir</code>参数设置的是下载路径，也可以按自己的习惯更改；<code>input-file</code>、<code>save-session</code>参数是指定session（保存下载进度）的存储位置，如果没有那个文件可以手动创建：</p>\n<pre><code>touch session.dat\n</code></pre><p><code>log</code>参数指定log路径，会自动生成。这时可以通过<code>aria2c</code>命令启动服务了。可以通过<code>ps aux | grep aria2c</code>命令检查是否启动成功。</p>\n<h1 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h1><p>若要配置macOS开机启动，可以在<code>~/Library/LaunchAgents</code>下创建一个plist文件<code>homebrew.mxcl.aria2.plist</code>，内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plist</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Label<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>homebrew.mxcl.aria2<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>RunAtLoad<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>KeepAlive<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Program<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>/usr/local/opt/aria2/bin/aria2c<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plist</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>编辑完后将将其权限设为<code>-rw-------</code>：</p>\n<pre><code>chmod 600 ~/Library/LaunchAgents/homebrew.mxcl.aria2.plist\n</code></pre><h1 id=\"配置GUI\"><a href=\"#配置GUI\" class=\"headerlink\" title=\"配置GUI\"></a>配置GUI</h1><p>由于aria2是一个命令行工具，所以在没有其他辅助的情况下需要通过命令行来操作。具体使用方法请参阅<a href=\"https://aria2.github.io/\">aria2.github.io</a>。</p>\n<p>为了更加便于使用，GitHub上的<a href=\"https://github.com/ziahamza\">ziahamza</a>开发了一个WebUI，可以通过网页界面来操作aria2：</p>\n<p><img src=\"/img/arui.png\" alt=\"WebUI\">    </p>\n<p>简单来说就是打开<a href=\"http://ziahamza.github.io/webui-aria2/\">http://ziahamza.github.io/webui-aria2/</a>就能使用了。也可以将<a href=\"https://github.com/ziahamza/webui-aria2/archive/master.zip\">项目源码</a>下载下来放到本地或者放到自己的服务器上来用，比如<a href=\"http://aria.shintaku.cc/\">http://aria.shintaku.cc/</a>。</p>\n<p>打开以后如果右上角出现：</p>\n<p><img src=\"/img/arsuccess.png\" alt=\"连接成功\">    </p>\n<p>就说明连接成功了，这时就可以直接输入下载链接下载了。</p>\n<p>如果连接不成功请到<code>Setting</code>-<code>Connection Setting</code>检查端口是不是6800，并且确保6800端口没被别的服务占用：</p>\n<p><img src=\"/img/arsetting.png\" alt=\"连接设置\">    </p>\n<h1 id=\"百度网盘插件\"><a href=\"#百度网盘插件\" class=\"headerlink\" title=\"百度网盘插件\"></a>百度网盘插件</h1><p>百度网盘如果使用普通下载的话<del>可能得到的是一个临时的链接？</del>不能断点续传，所以需要一个叫<a href=\"https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno\">BaiduExporter</a>的Chrome插件像百度云的客户端一样获取地址。如果Chrome商店被墙了也可以到<a href=\"https://github.com/acgotaku/BaiduExporter/releases\">GitHub</a>上直接下载<code>crx</code>文件手动添加。</p>\n<p>添加成功后再打开百度云会发现多了一个<code>导出下载</code>按钮：</p>\n<p><img src=\"/img/arbaiduyun.png\" alt=\"导出下载\">    </p>\n<p>打开<code>设置</code>，按照如下设置：</p>\n<p><img src=\"/img/aryunsetting.png\" alt=\"导出设置\"></p>\n<p>其中<code>User-agent</code>需要设置为<code>netdisk;5.2.7;PC;PC-Windows;6.2.9200;WindowsBaiduYunGuanJia</code>，<code>referer</code>设置为<code>http://pan.baidu.com/disk/home</code>，将aria2伪装成百度云管家来解除限速。</p>\n<p>应用后选择百度云上的文件，通过<code>导出下载</code>-<code>ARIA2 RPC</code>：</p>\n<p><img src=\"/img/ardownload.png\" alt=\"下载成功\"></p>\n<p>这时再通过WebUI查看应当已经有新添加的任务以一千八的速度在下载了。</p>\n"},{"title":"百度PHP实习生面试实录","date":"2016-07-01T13:11:11.000Z","photos":["/img/dubanner.png"],"_content":"> 人呐就都不知道，自己不可以预料，一个人的命运啊，当然要靠自我奋斗，但是也要考虑到历史的行程。我绝对不知道，我作为一个蒟蒻本科生怎么把我选到百度去了。所以HR同我讲话，说“人力资源部都决定了，你来当实习生。”我说另请高明吧，我实在也不是谦虚，我一个天津学生怎么到北京来了呢？但是，HR讲“大家已经研究决定了”。后来我念了两首诗，叫**“苟利实习生死以，岂因远近避趋之”**。所以我就作文以记之。\n\n# 1番目\n第一次是在6月17日（周五）下午，因为周六要考六级，所以正在复习~~周日要考的数理方程~~。两点钟左右面试官发来短信说三点开始电话面试，所以我花了一个小时的时间突击了一下我感觉会问到的*算法、数据结构、操作系统、网络*的知识。~~然而事实证明并没有什么卵用~~。\n\n3点过一点打来电话，听对面环境非常嘈杂，所以听起来非常吃力：\n\n+ 首先先做一下自我介绍吧（大概是在翻简历）\n> 私は……\n\n+ 有什么项目经历吗？\n> （简要列举了一下做过的项目）\n\n+ 我看了你的GitHub发现有不少项目，简要介绍几个吧~\n> （随便挑几个说了）\n\n+ 熟悉C++吧，说一说继承和多态吧~\n> （因为面向对象用的不多，就随便说了说自己的理解）继承应该就是使用现有类的所有功能，在无需重新编写原来的类的情况下对这些功能进行扩展；多态就是允许将子类类型的指针赋值给父类类型的指针\n\n+ C++最新的标准是多少？\n> 莫非是C++11？（后来查了一下发现都有C++17了）\n\n+ 那你知道C++中的*??*（这两个字因为他那边太嘈杂了到现在都不知道说的是什么）吗？\n> 呃……（然后又问了几遍还是没听清，接下来就是蜜汁沉默）\n\n+ （他察觉出这方面我不是很熟悉）不知道没关系，咱们再聊点别的。Java和C++的区别在哪？\n> （随便扯一扯，大概是Java没指针、不支持多继承、对象只能由引用传递，C++没有包、接口、不能多个相同线程并发运行等等吧）\n\n+ 那么来说一说重载和覆盖吧~\n> （虽然不大清楚还是扯了一扯）重载一般是用于在一个类内实现若干重载的方法，这些方法的名称相同而参数形式不同；覆盖一般是用于子类在继承父类时，重写父类中的方法\n\n+ PHP方面做过什么项目呢？\n> （就把之前做过的PHP的东西详细说了说）\n\n+ 有什么特别的功能吗？\n> （就想了想项目里的亮点说了说）\n\n+ 具体是怎么实现的？\n> （一时没想起来就翻了一下GitHub跟他讲了讲）\n\n+ 你在实验室中做些什么？\n> （简要介绍了一下自己在实验室的工作）\n\n+ 我这边问得差不多了，我先来介绍一下我们这边的情况吧（blabla一堆）……然后你有什么想问的吗？\n> （就随便问了几个无关紧要的问题就结束了）\n\n第一次电话面试大概用了一个小时的时间，由于时间太久远了肯定遗漏了很多问题没写出来，不过在最后比较有用的信息大概就是实习生面试大概有**两到三轮技术面**，一般没有HR面，面试题目基本看面试官个人喜好，基本觉得差不多就给通过了，差不多一周左右就会进入下一轮面试，不会要求太高。话虽如此，不过还是感觉自己面炸了，就没有往下准备~\n\n\n# 2番目\n\n第二次是在6月28日（周二）下午，因为第二天要检查FPGA大作业但那时还没有人做出来，所以在研究那个。大概差一刻6点的时候面试官打来电话问我什么时候方便电面，我说就现在吧~~早面试完早搞FPGA~~，于是他准备了5分钟再次打来电话开始面试：\n\n+ 首先先做一下自我介绍吧（老套路）\n> 私は……\n\n+ 我看你简历上写熟悉Linux，列举几条你常用的Linux命令吧~\n> `wc`、`diff`、`grep`、`find`等等吧\n\n+ 看起来都是些查找统计的命令，要是对比两个目录下的文件名用什么命令？\n> 应该也是用`diff`吧，再加个参数，具体什么参数不清楚~\n\n+ 那你回来再查查吧；如果让你杀死某个进程要怎么做？\n> 先用ps找到进程号然后`kill`掉吧~\n\n+ 要是只用一条命令怎么写呢？（这时对面响起了敲键盘的声音）\n> 要用到管道吧，先把PID`cut`出来（当时口误说成`cat`了），具体怎么写没想出来（对方还提示了半天）\n\n+ `awk`你了解吗？\n> 用的不是很多，不太熟悉~\n\n+ 问点PHP吧，你知道`include()`和`require()`的区别在哪吗？\n> (这个之前看过，但是一时想不起来，就扯了扯`require()`和`require_once()`的区别，答案应该是遇到错误时`include()`会产生一个警告，而`require()`导致一个致命错误）\n\n+ PHP怎么获取用户ip地址？\n> 应该是`$_SERVER[]`吧~\n\n+ 那么怎么获取网页内容？\n> 这个没用过，真不知道（其实应该是`file_get_contents($url)`）\n\n+ 介绍一下简历上的*XX*项目吧，都有什么功能？\n> （介绍一下功能）\n\n+ 用户登录是怎么实现的？\n> 用了个全局变量表示登录状态（当时写的比较SB，怎么会用这种方法呢）~\n\n+ 那样的话关闭浏览器再打开状态就丢了吧~一般要用`SESSION`吧，SESSION你知道吗？\n> （这时我才恍然大悟刚才直接说这个不就好了吗）用过用过，在YY项目里登录我是用SESSION实现的。\n\n+ 那你再介绍一下*YY*项目的工程吧~\n> （blabla一大堆）\n\n+ 那么数据库中*ZZ*的数据是怎么存的呢？\n> （balbla介绍了一下数据库的结构）\n\n+ 怎么按条件查询呢？\n> （blabla介绍了一下查询方法）\n\n+ 我看你还写过Java，做过Java的什么项目吗？\n> 并没有，只是写了点Application，Android的算吗？\n\n+ 算吧，说说看~\n> （blabbla介绍了一下功能）\n\n+ 具体是怎么实现的呢？\n> 调用了为了*CC*而使用的*GG*接口~\n\n+ 哦，那和Windows下的*JJ*挺像的。你还了解一点Python是吧？\n> 一般当脚本用的，处理数据用。\n\n+ 我们这边还会用到go来开发平台，go你知道吗？\n> golang啊，听说过。\n\n+ 对，要是来我们这边也会用到。你那边还有一些其他问题要问吗？\n> 暂时想不到了，第一轮时基本问过了（因为我赶着做大作业啊）~\n\n然后寒暄了一阵就挂掉了电话，总共用时大约半小时。虽然没有抱太大希望，但是感觉百度的面试官还是非常Nice的，但是这样的面试真心无从准备，但是一定要**熟悉自己简历上的内容**（面试问题基本围绕简历展开）和**投递职位的工作内容**，其他的就完全靠姿势水平啊~\n\n","source":"_posts/baidu-interview.md","raw":"title: 百度PHP实习生面试实录\ndate: 2016-07-01 21:11:11\ntags: []\ncategories: [手帐, 实习]\nphotos: \n\t- /img/dubanner.png\n---\n> 人呐就都不知道，自己不可以预料，一个人的命运啊，当然要靠自我奋斗，但是也要考虑到历史的行程。我绝对不知道，我作为一个蒟蒻本科生怎么把我选到百度去了。所以HR同我讲话，说“人力资源部都决定了，你来当实习生。”我说另请高明吧，我实在也不是谦虚，我一个天津学生怎么到北京来了呢？但是，HR讲“大家已经研究决定了”。后来我念了两首诗，叫**“苟利实习生死以，岂因远近避趋之”**。所以我就作文以记之。\n\n# 1番目\n第一次是在6月17日（周五）下午，因为周六要考六级，所以正在复习~~周日要考的数理方程~~。两点钟左右面试官发来短信说三点开始电话面试，所以我花了一个小时的时间突击了一下我感觉会问到的*算法、数据结构、操作系统、网络*的知识。~~然而事实证明并没有什么卵用~~。\n\n3点过一点打来电话，听对面环境非常嘈杂，所以听起来非常吃力：\n\n+ 首先先做一下自我介绍吧（大概是在翻简历）\n> 私は……\n\n+ 有什么项目经历吗？\n> （简要列举了一下做过的项目）\n\n+ 我看了你的GitHub发现有不少项目，简要介绍几个吧~\n> （随便挑几个说了）\n\n+ 熟悉C++吧，说一说继承和多态吧~\n> （因为面向对象用的不多，就随便说了说自己的理解）继承应该就是使用现有类的所有功能，在无需重新编写原来的类的情况下对这些功能进行扩展；多态就是允许将子类类型的指针赋值给父类类型的指针\n\n+ C++最新的标准是多少？\n> 莫非是C++11？（后来查了一下发现都有C++17了）\n\n+ 那你知道C++中的*??*（这两个字因为他那边太嘈杂了到现在都不知道说的是什么）吗？\n> 呃……（然后又问了几遍还是没听清，接下来就是蜜汁沉默）\n\n+ （他察觉出这方面我不是很熟悉）不知道没关系，咱们再聊点别的。Java和C++的区别在哪？\n> （随便扯一扯，大概是Java没指针、不支持多继承、对象只能由引用传递，C++没有包、接口、不能多个相同线程并发运行等等吧）\n\n+ 那么来说一说重载和覆盖吧~\n> （虽然不大清楚还是扯了一扯）重载一般是用于在一个类内实现若干重载的方法，这些方法的名称相同而参数形式不同；覆盖一般是用于子类在继承父类时，重写父类中的方法\n\n+ PHP方面做过什么项目呢？\n> （就把之前做过的PHP的东西详细说了说）\n\n+ 有什么特别的功能吗？\n> （就想了想项目里的亮点说了说）\n\n+ 具体是怎么实现的？\n> （一时没想起来就翻了一下GitHub跟他讲了讲）\n\n+ 你在实验室中做些什么？\n> （简要介绍了一下自己在实验室的工作）\n\n+ 我这边问得差不多了，我先来介绍一下我们这边的情况吧（blabla一堆）……然后你有什么想问的吗？\n> （就随便问了几个无关紧要的问题就结束了）\n\n第一次电话面试大概用了一个小时的时间，由于时间太久远了肯定遗漏了很多问题没写出来，不过在最后比较有用的信息大概就是实习生面试大概有**两到三轮技术面**，一般没有HR面，面试题目基本看面试官个人喜好，基本觉得差不多就给通过了，差不多一周左右就会进入下一轮面试，不会要求太高。话虽如此，不过还是感觉自己面炸了，就没有往下准备~\n\n\n# 2番目\n\n第二次是在6月28日（周二）下午，因为第二天要检查FPGA大作业但那时还没有人做出来，所以在研究那个。大概差一刻6点的时候面试官打来电话问我什么时候方便电面，我说就现在吧~~早面试完早搞FPGA~~，于是他准备了5分钟再次打来电话开始面试：\n\n+ 首先先做一下自我介绍吧（老套路）\n> 私は……\n\n+ 我看你简历上写熟悉Linux，列举几条你常用的Linux命令吧~\n> `wc`、`diff`、`grep`、`find`等等吧\n\n+ 看起来都是些查找统计的命令，要是对比两个目录下的文件名用什么命令？\n> 应该也是用`diff`吧，再加个参数，具体什么参数不清楚~\n\n+ 那你回来再查查吧；如果让你杀死某个进程要怎么做？\n> 先用ps找到进程号然后`kill`掉吧~\n\n+ 要是只用一条命令怎么写呢？（这时对面响起了敲键盘的声音）\n> 要用到管道吧，先把PID`cut`出来（当时口误说成`cat`了），具体怎么写没想出来（对方还提示了半天）\n\n+ `awk`你了解吗？\n> 用的不是很多，不太熟悉~\n\n+ 问点PHP吧，你知道`include()`和`require()`的区别在哪吗？\n> (这个之前看过，但是一时想不起来，就扯了扯`require()`和`require_once()`的区别，答案应该是遇到错误时`include()`会产生一个警告，而`require()`导致一个致命错误）\n\n+ PHP怎么获取用户ip地址？\n> 应该是`$_SERVER[]`吧~\n\n+ 那么怎么获取网页内容？\n> 这个没用过，真不知道（其实应该是`file_get_contents($url)`）\n\n+ 介绍一下简历上的*XX*项目吧，都有什么功能？\n> （介绍一下功能）\n\n+ 用户登录是怎么实现的？\n> 用了个全局变量表示登录状态（当时写的比较SB，怎么会用这种方法呢）~\n\n+ 那样的话关闭浏览器再打开状态就丢了吧~一般要用`SESSION`吧，SESSION你知道吗？\n> （这时我才恍然大悟刚才直接说这个不就好了吗）用过用过，在YY项目里登录我是用SESSION实现的。\n\n+ 那你再介绍一下*YY*项目的工程吧~\n> （blabla一大堆）\n\n+ 那么数据库中*ZZ*的数据是怎么存的呢？\n> （balbla介绍了一下数据库的结构）\n\n+ 怎么按条件查询呢？\n> （blabla介绍了一下查询方法）\n\n+ 我看你还写过Java，做过Java的什么项目吗？\n> 并没有，只是写了点Application，Android的算吗？\n\n+ 算吧，说说看~\n> （blabbla介绍了一下功能）\n\n+ 具体是怎么实现的呢？\n> 调用了为了*CC*而使用的*GG*接口~\n\n+ 哦，那和Windows下的*JJ*挺像的。你还了解一点Python是吧？\n> 一般当脚本用的，处理数据用。\n\n+ 我们这边还会用到go来开发平台，go你知道吗？\n> golang啊，听说过。\n\n+ 对，要是来我们这边也会用到。你那边还有一些其他问题要问吗？\n> 暂时想不到了，第一轮时基本问过了（因为我赶着做大作业啊）~\n\n然后寒暄了一阵就挂掉了电话，总共用时大约半小时。虽然没有抱太大希望，但是感觉百度的面试官还是非常Nice的，但是这样的面试真心无从准备，但是一定要**熟悉自己简历上的内容**（面试问题基本围绕简历展开）和**投递职位的工作内容**，其他的就完全靠姿势水平啊~\n\n","slug":"baidu-interview","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0s5000b8mprfu6p6ode","content":"<blockquote>\n<p>人呐就都不知道，自己不可以预料，一个人的命运啊，当然要靠自我奋斗，但是也要考虑到历史的行程。我绝对不知道，我作为一个蒟蒻本科生怎么把我选到百度去了。所以HR同我讲话，说“人力资源部都决定了，你来当实习生。”我说另请高明吧，我实在也不是谦虚，我一个天津学生怎么到北京来了呢？但是，HR讲“大家已经研究决定了”。后来我念了两首诗，叫<strong>“苟利实习生死以，岂因远近避趋之”</strong>。所以我就作文以记之。</p>\n</blockquote>\n<h1 id=\"1番目\"><a href=\"#1番目\" class=\"headerlink\" title=\"1番目\"></a>1番目</h1><p>第一次是在6月17日（周五）下午，因为周六要考六级，所以正在复习<del>周日要考的数理方程</del>。两点钟左右面试官发来短信说三点开始电话面试，所以我花了一个小时的时间突击了一下我感觉会问到的<em>算法、数据结构、操作系统、网络</em>的知识。<del>然而事实证明并没有什么卵用</del>。</p>\n<p>3点过一点打来电话，听对面环境非常嘈杂，所以听起来非常吃力：</p>\n<ul>\n<li><p>首先先做一下自我介绍吧（大概是在翻简历）</p>\n<blockquote>\n<p>私は……</p>\n</blockquote>\n</li>\n<li><p>有什么项目经历吗？</p>\n<blockquote>\n<p>（简要列举了一下做过的项目）</p>\n</blockquote>\n</li>\n<li><p>我看了你的GitHub发现有不少项目，简要介绍几个吧~</p>\n<blockquote>\n<p>（随便挑几个说了）</p>\n</blockquote>\n</li>\n<li><p>熟悉C++吧，说一说继承和多态吧~</p>\n<blockquote>\n<p>（因为面向对象用的不多，就随便说了说自己的理解）继承应该就是使用现有类的所有功能，在无需重新编写原来的类的情况下对这些功能进行扩展；多态就是允许将子类类型的指针赋值给父类类型的指针</p>\n</blockquote>\n</li>\n<li><p>C++最新的标准是多少？</p>\n<blockquote>\n<p>莫非是C++11？（后来查了一下发现都有C++17了）</p>\n</blockquote>\n</li>\n<li><p>那你知道C++中的<em>??</em>（这两个字因为他那边太嘈杂了到现在都不知道说的是什么）吗？</p>\n<blockquote>\n<p>呃……（然后又问了几遍还是没听清，接下来就是蜜汁沉默）</p>\n</blockquote>\n</li>\n<li><p>（他察觉出这方面我不是很熟悉）不知道没关系，咱们再聊点别的。Java和C++的区别在哪？</p>\n<blockquote>\n<p>（随便扯一扯，大概是Java没指针、不支持多继承、对象只能由引用传递，C++没有包、接口、不能多个相同线程并发运行等等吧）</p>\n</blockquote>\n</li>\n<li><p>那么来说一说重载和覆盖吧~</p>\n<blockquote>\n<p>（虽然不大清楚还是扯了一扯）重载一般是用于在一个类内实现若干重载的方法，这些方法的名称相同而参数形式不同；覆盖一般是用于子类在继承父类时，重写父类中的方法</p>\n</blockquote>\n</li>\n<li><p>PHP方面做过什么项目呢？</p>\n<blockquote>\n<p>（就把之前做过的PHP的东西详细说了说）</p>\n</blockquote>\n</li>\n<li><p>有什么特别的功能吗？</p>\n<blockquote>\n<p>（就想了想项目里的亮点说了说）</p>\n</blockquote>\n</li>\n<li><p>具体是怎么实现的？</p>\n<blockquote>\n<p>（一时没想起来就翻了一下GitHub跟他讲了讲）</p>\n</blockquote>\n</li>\n<li><p>你在实验室中做些什么？</p>\n<blockquote>\n<p>（简要介绍了一下自己在实验室的工作）</p>\n</blockquote>\n</li>\n<li><p>我这边问得差不多了，我先来介绍一下我们这边的情况吧（blabla一堆）……然后你有什么想问的吗？</p>\n<blockquote>\n<p>（就随便问了几个无关紧要的问题就结束了）</p>\n</blockquote>\n</li>\n</ul>\n<p>第一次电话面试大概用了一个小时的时间，由于时间太久远了肯定遗漏了很多问题没写出来，不过在最后比较有用的信息大概就是实习生面试大概有<strong>两到三轮技术面</strong>，一般没有HR面，面试题目基本看面试官个人喜好，基本觉得差不多就给通过了，差不多一周左右就会进入下一轮面试，不会要求太高。话虽如此，不过还是感觉自己面炸了，就没有往下准备~</p>\n<h1 id=\"2番目\"><a href=\"#2番目\" class=\"headerlink\" title=\"2番目\"></a>2番目</h1><p>第二次是在6月28日（周二）下午，因为第二天要检查FPGA大作业但那时还没有人做出来，所以在研究那个。大概差一刻6点的时候面试官打来电话问我什么时候方便电面，我说就现在吧<del>早面试完早搞FPGA</del>，于是他准备了5分钟再次打来电话开始面试：</p>\n<ul>\n<li><p>首先先做一下自我介绍吧（老套路）</p>\n<blockquote>\n<p>私は……</p>\n</blockquote>\n</li>\n<li><p>我看你简历上写熟悉Linux，列举几条你常用的Linux命令吧~</p>\n<blockquote>\n<p><code>wc</code>、<code>diff</code>、<code>grep</code>、<code>find</code>等等吧</p>\n</blockquote>\n</li>\n<li><p>看起来都是些查找统计的命令，要是对比两个目录下的文件名用什么命令？</p>\n<blockquote>\n<p>应该也是用<code>diff</code>吧，再加个参数，具体什么参数不清楚~</p>\n</blockquote>\n</li>\n<li><p>那你回来再查查吧；如果让你杀死某个进程要怎么做？</p>\n<blockquote>\n<p>先用ps找到进程号然后<code>kill</code>掉吧~</p>\n</blockquote>\n</li>\n<li><p>要是只用一条命令怎么写呢？（这时对面响起了敲键盘的声音）</p>\n<blockquote>\n<p>要用到管道吧，先把PID<code>cut</code>出来（当时口误说成<code>cat</code>了），具体怎么写没想出来（对方还提示了半天）</p>\n</blockquote>\n</li>\n<li><p><code>awk</code>你了解吗？</p>\n<blockquote>\n<p>用的不是很多，不太熟悉~</p>\n</blockquote>\n</li>\n<li><p>问点PHP吧，你知道<code>include()</code>和<code>require()</code>的区别在哪吗？</p>\n<blockquote>\n<p>(这个之前看过，但是一时想不起来，就扯了扯<code>require()</code>和<code>require_once()</code>的区别，答案应该是遇到错误时<code>include()</code>会产生一个警告，而<code>require()</code>导致一个致命错误）</p>\n</blockquote>\n</li>\n<li><p>PHP怎么获取用户ip地址？</p>\n<blockquote>\n<p>应该是<code>$_SERVER[]</code>吧~</p>\n</blockquote>\n</li>\n<li><p>那么怎么获取网页内容？</p>\n<blockquote>\n<p>这个没用过，真不知道（其实应该是<code>file_get_contents($url)</code>）</p>\n</blockquote>\n</li>\n<li><p>介绍一下简历上的<em>XX</em>项目吧，都有什么功能？</p>\n<blockquote>\n<p>（介绍一下功能）</p>\n</blockquote>\n</li>\n<li><p>用户登录是怎么实现的？</p>\n<blockquote>\n<p>用了个全局变量表示登录状态（当时写的比较SB，怎么会用这种方法呢）~</p>\n</blockquote>\n</li>\n<li><p>那样的话关闭浏览器再打开状态就丢了吧~一般要用<code>SESSION</code>吧，SESSION你知道吗？</p>\n<blockquote>\n<p>（这时我才恍然大悟刚才直接说这个不就好了吗）用过用过，在YY项目里登录我是用SESSION实现的。</p>\n</blockquote>\n</li>\n<li><p>那你再介绍一下<em>YY</em>项目的工程吧~</p>\n<blockquote>\n<p>（blabla一大堆）</p>\n</blockquote>\n</li>\n<li><p>那么数据库中<em>ZZ</em>的数据是怎么存的呢？</p>\n<blockquote>\n<p>（balbla介绍了一下数据库的结构）</p>\n</blockquote>\n</li>\n<li><p>怎么按条件查询呢？</p>\n<blockquote>\n<p>（blabla介绍了一下查询方法）</p>\n</blockquote>\n</li>\n<li><p>我看你还写过Java，做过Java的什么项目吗？</p>\n<blockquote>\n<p>并没有，只是写了点Application，Android的算吗？</p>\n</blockquote>\n</li>\n<li><p>算吧，说说看~</p>\n<blockquote>\n<p>（blabbla介绍了一下功能）</p>\n</blockquote>\n</li>\n<li><p>具体是怎么实现的呢？</p>\n<blockquote>\n<p>调用了为了<em>CC</em>而使用的<em>GG</em>接口~</p>\n</blockquote>\n</li>\n<li><p>哦，那和Windows下的<em>JJ</em>挺像的。你还了解一点Python是吧？</p>\n<blockquote>\n<p>一般当脚本用的，处理数据用。</p>\n</blockquote>\n</li>\n<li><p>我们这边还会用到go来开发平台，go你知道吗？</p>\n<blockquote>\n<p>golang啊，听说过。</p>\n</blockquote>\n</li>\n<li><p>对，要是来我们这边也会用到。你那边还有一些其他问题要问吗？</p>\n<blockquote>\n<p>暂时想不到了，第一轮时基本问过了（因为我赶着做大作业啊）~</p>\n</blockquote>\n</li>\n</ul>\n<p>然后寒暄了一阵就挂掉了电话，总共用时大约半小时。虽然没有抱太大希望，但是感觉百度的面试官还是非常Nice的，但是这样的面试真心无从准备，但是一定要<strong>熟悉自己简历上的内容</strong>（面试问题基本围绕简历展开）和<strong>投递职位的工作内容</strong>，其他的就完全靠姿势水平啊~</p>\n","excerpt":"","more":"<blockquote>\n<p>人呐就都不知道，自己不可以预料，一个人的命运啊，当然要靠自我奋斗，但是也要考虑到历史的行程。我绝对不知道，我作为一个蒟蒻本科生怎么把我选到百度去了。所以HR同我讲话，说“人力资源部都决定了，你来当实习生。”我说另请高明吧，我实在也不是谦虚，我一个天津学生怎么到北京来了呢？但是，HR讲“大家已经研究决定了”。后来我念了两首诗，叫<strong>“苟利实习生死以，岂因远近避趋之”</strong>。所以我就作文以记之。</p>\n</blockquote>\n<h1 id=\"1番目\"><a href=\"#1番目\" class=\"headerlink\" title=\"1番目\"></a>1番目</h1><p>第一次是在6月17日（周五）下午，因为周六要考六级，所以正在复习<del>周日要考的数理方程</del>。两点钟左右面试官发来短信说三点开始电话面试，所以我花了一个小时的时间突击了一下我感觉会问到的<em>算法、数据结构、操作系统、网络</em>的知识。<del>然而事实证明并没有什么卵用</del>。</p>\n<p>3点过一点打来电话，听对面环境非常嘈杂，所以听起来非常吃力：</p>\n<ul>\n<li><p>首先先做一下自我介绍吧（大概是在翻简历）</p>\n<blockquote>\n<p>私は……</p>\n</blockquote>\n</li>\n<li><p>有什么项目经历吗？</p>\n<blockquote>\n<p>（简要列举了一下做过的项目）</p>\n</blockquote>\n</li>\n<li><p>我看了你的GitHub发现有不少项目，简要介绍几个吧~</p>\n<blockquote>\n<p>（随便挑几个说了）</p>\n</blockquote>\n</li>\n<li><p>熟悉C++吧，说一说继承和多态吧~</p>\n<blockquote>\n<p>（因为面向对象用的不多，就随便说了说自己的理解）继承应该就是使用现有类的所有功能，在无需重新编写原来的类的情况下对这些功能进行扩展；多态就是允许将子类类型的指针赋值给父类类型的指针</p>\n</blockquote>\n</li>\n<li><p>C++最新的标准是多少？</p>\n<blockquote>\n<p>莫非是C++11？（后来查了一下发现都有C++17了）</p>\n</blockquote>\n</li>\n<li><p>那你知道C++中的<em>??</em>（这两个字因为他那边太嘈杂了到现在都不知道说的是什么）吗？</p>\n<blockquote>\n<p>呃……（然后又问了几遍还是没听清，接下来就是蜜汁沉默）</p>\n</blockquote>\n</li>\n<li><p>（他察觉出这方面我不是很熟悉）不知道没关系，咱们再聊点别的。Java和C++的区别在哪？</p>\n<blockquote>\n<p>（随便扯一扯，大概是Java没指针、不支持多继承、对象只能由引用传递，C++没有包、接口、不能多个相同线程并发运行等等吧）</p>\n</blockquote>\n</li>\n<li><p>那么来说一说重载和覆盖吧~</p>\n<blockquote>\n<p>（虽然不大清楚还是扯了一扯）重载一般是用于在一个类内实现若干重载的方法，这些方法的名称相同而参数形式不同；覆盖一般是用于子类在继承父类时，重写父类中的方法</p>\n</blockquote>\n</li>\n<li><p>PHP方面做过什么项目呢？</p>\n<blockquote>\n<p>（就把之前做过的PHP的东西详细说了说）</p>\n</blockquote>\n</li>\n<li><p>有什么特别的功能吗？</p>\n<blockquote>\n<p>（就想了想项目里的亮点说了说）</p>\n</blockquote>\n</li>\n<li><p>具体是怎么实现的？</p>\n<blockquote>\n<p>（一时没想起来就翻了一下GitHub跟他讲了讲）</p>\n</blockquote>\n</li>\n<li><p>你在实验室中做些什么？</p>\n<blockquote>\n<p>（简要介绍了一下自己在实验室的工作）</p>\n</blockquote>\n</li>\n<li><p>我这边问得差不多了，我先来介绍一下我们这边的情况吧（blabla一堆）……然后你有什么想问的吗？</p>\n<blockquote>\n<p>（就随便问了几个无关紧要的问题就结束了）</p>\n</blockquote>\n</li>\n</ul>\n<p>第一次电话面试大概用了一个小时的时间，由于时间太久远了肯定遗漏了很多问题没写出来，不过在最后比较有用的信息大概就是实习生面试大概有<strong>两到三轮技术面</strong>，一般没有HR面，面试题目基本看面试官个人喜好，基本觉得差不多就给通过了，差不多一周左右就会进入下一轮面试，不会要求太高。话虽如此，不过还是感觉自己面炸了，就没有往下准备~</p>\n<h1 id=\"2番目\"><a href=\"#2番目\" class=\"headerlink\" title=\"2番目\"></a>2番目</h1><p>第二次是在6月28日（周二）下午，因为第二天要检查FPGA大作业但那时还没有人做出来，所以在研究那个。大概差一刻6点的时候面试官打来电话问我什么时候方便电面，我说就现在吧<del>早面试完早搞FPGA</del>，于是他准备了5分钟再次打来电话开始面试：</p>\n<ul>\n<li><p>首先先做一下自我介绍吧（老套路）</p>\n<blockquote>\n<p>私は……</p>\n</blockquote>\n</li>\n<li><p>我看你简历上写熟悉Linux，列举几条你常用的Linux命令吧~</p>\n<blockquote>\n<p><code>wc</code>、<code>diff</code>、<code>grep</code>、<code>find</code>等等吧</p>\n</blockquote>\n</li>\n<li><p>看起来都是些查找统计的命令，要是对比两个目录下的文件名用什么命令？</p>\n<blockquote>\n<p>应该也是用<code>diff</code>吧，再加个参数，具体什么参数不清楚~</p>\n</blockquote>\n</li>\n<li><p>那你回来再查查吧；如果让你杀死某个进程要怎么做？</p>\n<blockquote>\n<p>先用ps找到进程号然后<code>kill</code>掉吧~</p>\n</blockquote>\n</li>\n<li><p>要是只用一条命令怎么写呢？（这时对面响起了敲键盘的声音）</p>\n<blockquote>\n<p>要用到管道吧，先把PID<code>cut</code>出来（当时口误说成<code>cat</code>了），具体怎么写没想出来（对方还提示了半天）</p>\n</blockquote>\n</li>\n<li><p><code>awk</code>你了解吗？</p>\n<blockquote>\n<p>用的不是很多，不太熟悉~</p>\n</blockquote>\n</li>\n<li><p>问点PHP吧，你知道<code>include()</code>和<code>require()</code>的区别在哪吗？</p>\n<blockquote>\n<p>(这个之前看过，但是一时想不起来，就扯了扯<code>require()</code>和<code>require_once()</code>的区别，答案应该是遇到错误时<code>include()</code>会产生一个警告，而<code>require()</code>导致一个致命错误）</p>\n</blockquote>\n</li>\n<li><p>PHP怎么获取用户ip地址？</p>\n<blockquote>\n<p>应该是<code>$_SERVER[]</code>吧~</p>\n</blockquote>\n</li>\n<li><p>那么怎么获取网页内容？</p>\n<blockquote>\n<p>这个没用过，真不知道（其实应该是<code>file_get_contents($url)</code>）</p>\n</blockquote>\n</li>\n<li><p>介绍一下简历上的<em>XX</em>项目吧，都有什么功能？</p>\n<blockquote>\n<p>（介绍一下功能）</p>\n</blockquote>\n</li>\n<li><p>用户登录是怎么实现的？</p>\n<blockquote>\n<p>用了个全局变量表示登录状态（当时写的比较SB，怎么会用这种方法呢）~</p>\n</blockquote>\n</li>\n<li><p>那样的话关闭浏览器再打开状态就丢了吧~一般要用<code>SESSION</code>吧，SESSION你知道吗？</p>\n<blockquote>\n<p>（这时我才恍然大悟刚才直接说这个不就好了吗）用过用过，在YY项目里登录我是用SESSION实现的。</p>\n</blockquote>\n</li>\n<li><p>那你再介绍一下<em>YY</em>项目的工程吧~</p>\n<blockquote>\n<p>（blabla一大堆）</p>\n</blockquote>\n</li>\n<li><p>那么数据库中<em>ZZ</em>的数据是怎么存的呢？</p>\n<blockquote>\n<p>（balbla介绍了一下数据库的结构）</p>\n</blockquote>\n</li>\n<li><p>怎么按条件查询呢？</p>\n<blockquote>\n<p>（blabla介绍了一下查询方法）</p>\n</blockquote>\n</li>\n<li><p>我看你还写过Java，做过Java的什么项目吗？</p>\n<blockquote>\n<p>并没有，只是写了点Application，Android的算吗？</p>\n</blockquote>\n</li>\n<li><p>算吧，说说看~</p>\n<blockquote>\n<p>（blabbla介绍了一下功能）</p>\n</blockquote>\n</li>\n<li><p>具体是怎么实现的呢？</p>\n<blockquote>\n<p>调用了为了<em>CC</em>而使用的<em>GG</em>接口~</p>\n</blockquote>\n</li>\n<li><p>哦，那和Windows下的<em>JJ</em>挺像的。你还了解一点Python是吧？</p>\n<blockquote>\n<p>一般当脚本用的，处理数据用。</p>\n</blockquote>\n</li>\n<li><p>我们这边还会用到go来开发平台，go你知道吗？</p>\n<blockquote>\n<p>golang啊，听说过。</p>\n</blockquote>\n</li>\n<li><p>对，要是来我们这边也会用到。你那边还有一些其他问题要问吗？</p>\n<blockquote>\n<p>暂时想不到了，第一轮时基本问过了（因为我赶着做大作业啊）~</p>\n</blockquote>\n</li>\n</ul>\n<p>然后寒暄了一阵就挂掉了电话，总共用时大约半小时。虽然没有抱太大希望，但是感觉百度的面试官还是非常Nice的，但是这样的面试真心无从准备，但是一定要<strong>熟悉自己简历上的内容</strong>（面试问题基本围绕简历展开）和<strong>投递职位的工作内容</strong>，其他的就完全靠姿势水平啊~</p>\n"},{"title":"路由器刷breed引导第三方固件","date":"2017-02-24T04:12:12.000Z","photos":["/img/breedbanner.png"],"_content":"\n之前早就听说**斐讯**路由器有个*[0元购](http://www.phicomm.com/cn/index.php/News/detail/cateid/2/id/372.html)*活动，一直没往心里去；直到昨天看到[XForce](http://weibo.com/xforce)大神也撸了一台，于是~~江信江疑~~跟风在*二手东*下了一单，结果今天就上船了，但愿30天内别翻船，才算真的免费拿到手啊。\n\n收货后先别急刮K码，刮开了万一有毛病就不给退了。先登[192.168.2.1](http://192.168.2.1/)配置一下网络，发现原厂固件功能还算齐全，一般情况都够用了。但是据说有人发现路由器暗地里在给某些服务器传送着数据，恐怕有信息泄露的风险，当然刷一个第三方固件更保险一些了。\n\n我拿到的**斐讯K2**硬件版本是`A2`，固件版本是`22.4.5.42`。听闻说更高版本的固件刷Breed非常麻烦，我还比较庆幸原厂版本比较低，然而依然要降级。\n\n# 刷入breed\n## 下载工具\n首先下载huzibbs大神制作的**路由器刷breed Web助手通用版**（[千脑](http://qiannao.com/file/huzibbs/6952c4dc/) [百度网盘](https://pan.baidu.com/s/1eSA6AdW)），可以实现一键刷telnet、ssh、breed。\n\n然后将路由器**LAN**口与Windows电脑用网线相连，然后长按路由器Reset键5秒恢复出厂设置。之后可以再访问一下[192.168.2.1](http://192.168.2.1/)看是不是初始状态。\n\n## 开始刷机\n如果一切正常就以管理员身份运行**路由器刷breed Web助手通用版**：\n\n![路由器刷breed Web助手通用版](/img/breedassistant.png)\n\n配置如图即可，注意其中刷机方案一定要选择`斐讯k1,k1s,k2全自动方案`，然后点击`开始刷机`即可。\n\n开始刷机前工具作者建议先手动禁用除`以太网`以外的其他网络连接。由于工具中途会调用另外几个程序，所以中途如果系统弹出了提示框允许即可，顺便设成不再提醒；如果弹窗导致刷机失败了重新再来一遍基本就可以了。\n\n## 重启路由器\n几分钟之后刷机自动完成，按照工具提示**等待2分钟以后**再断电。在重新通电前先按住Reset键再接通电源，持续按住Reset键约10秒钟再松手。不出意外此时路由器应该进入了breed引导，这时访问[192.168.1.1](http://192.168.1.1/)应当就进入了**Breed Web 恢复控制台**：\n\n![Breed Web 恢复控制台](/img/breedweb.png)\n\n# 刷入第三方固件\n## 固件备份\n进入控制台后，先到`固件备份`里将`EEPROM`和`编程器固件`备份一下：\n\n![固件备份](/img/breedbackup.png)\n\n## 恢复出厂设置\n然后到`恢复出厂设置`将固件恢复`Config区（公版）`：\n\n![恢复出厂设置](/img/breedreset.png)\n\n## 固件更新\n最后到`固件更新`选择要刷的固件上传即可：\n\n![固件更新](/img/breedupdate.png)\n\n目前K2可刷的固件有很多，包括[OpenWrt](https://downloads.openwrt.org/)、[PandoraBox](http://downloads.pandorabox.com.cn/)等等。虽然OpenWrt还没有放出针对K2的Release版本，但由于它用的是**ramips**架构的**mt7620**芯片，所以一般mt7620芯片的路由器固件是通用的，于是我就刷了个小米路由器的[固件](https://downloads.openwrt.org/chaos_calmer/15.05.1/ramips/mt7620/openwrt-15.05.1-ramips-mt7620-xiaomi-miwifi-mini-squashfs-sysupgrade.bin)：\n\n![OpenWrt](/img/breedwrt.png)\n\n而潘多拉盒子已经有了K2的稳定版[固件](http://downloads.pandorabox.com.cn/pandorabox-16-10-stable/targets/ralink/mt7620/PandoraBox-ralink-mt7620-phicomm-k2-2017-01-03-git-6c24a7a-squashfs-sysupgrade.bin)。另外给K2装软件时记得下载**ramips**架构的ipk包。","source":"_posts/breed.md","raw":"title: 路由器刷breed引导第三方固件\ndate: 2017-02-24 12:12:12\ntags: [OpenWrt, 路由器, Linux]\ncategories: [奇技淫巧, 路由器]\nphotos:\n\t- /img/breedbanner.png\n---\n\n之前早就听说**斐讯**路由器有个*[0元购](http://www.phicomm.com/cn/index.php/News/detail/cateid/2/id/372.html)*活动，一直没往心里去；直到昨天看到[XForce](http://weibo.com/xforce)大神也撸了一台，于是~~江信江疑~~跟风在*二手东*下了一单，结果今天就上船了，但愿30天内别翻船，才算真的免费拿到手啊。\n\n收货后先别急刮K码，刮开了万一有毛病就不给退了。先登[192.168.2.1](http://192.168.2.1/)配置一下网络，发现原厂固件功能还算齐全，一般情况都够用了。但是据说有人发现路由器暗地里在给某些服务器传送着数据，恐怕有信息泄露的风险，当然刷一个第三方固件更保险一些了。\n\n我拿到的**斐讯K2**硬件版本是`A2`，固件版本是`22.4.5.42`。听闻说更高版本的固件刷Breed非常麻烦，我还比较庆幸原厂版本比较低，然而依然要降级。\n\n# 刷入breed\n## 下载工具\n首先下载huzibbs大神制作的**路由器刷breed Web助手通用版**（[千脑](http://qiannao.com/file/huzibbs/6952c4dc/) [百度网盘](https://pan.baidu.com/s/1eSA6AdW)），可以实现一键刷telnet、ssh、breed。\n\n然后将路由器**LAN**口与Windows电脑用网线相连，然后长按路由器Reset键5秒恢复出厂设置。之后可以再访问一下[192.168.2.1](http://192.168.2.1/)看是不是初始状态。\n\n## 开始刷机\n如果一切正常就以管理员身份运行**路由器刷breed Web助手通用版**：\n\n![路由器刷breed Web助手通用版](/img/breedassistant.png)\n\n配置如图即可，注意其中刷机方案一定要选择`斐讯k1,k1s,k2全自动方案`，然后点击`开始刷机`即可。\n\n开始刷机前工具作者建议先手动禁用除`以太网`以外的其他网络连接。由于工具中途会调用另外几个程序，所以中途如果系统弹出了提示框允许即可，顺便设成不再提醒；如果弹窗导致刷机失败了重新再来一遍基本就可以了。\n\n## 重启路由器\n几分钟之后刷机自动完成，按照工具提示**等待2分钟以后**再断电。在重新通电前先按住Reset键再接通电源，持续按住Reset键约10秒钟再松手。不出意外此时路由器应该进入了breed引导，这时访问[192.168.1.1](http://192.168.1.1/)应当就进入了**Breed Web 恢复控制台**：\n\n![Breed Web 恢复控制台](/img/breedweb.png)\n\n# 刷入第三方固件\n## 固件备份\n进入控制台后，先到`固件备份`里将`EEPROM`和`编程器固件`备份一下：\n\n![固件备份](/img/breedbackup.png)\n\n## 恢复出厂设置\n然后到`恢复出厂设置`将固件恢复`Config区（公版）`：\n\n![恢复出厂设置](/img/breedreset.png)\n\n## 固件更新\n最后到`固件更新`选择要刷的固件上传即可：\n\n![固件更新](/img/breedupdate.png)\n\n目前K2可刷的固件有很多，包括[OpenWrt](https://downloads.openwrt.org/)、[PandoraBox](http://downloads.pandorabox.com.cn/)等等。虽然OpenWrt还没有放出针对K2的Release版本，但由于它用的是**ramips**架构的**mt7620**芯片，所以一般mt7620芯片的路由器固件是通用的，于是我就刷了个小米路由器的[固件](https://downloads.openwrt.org/chaos_calmer/15.05.1/ramips/mt7620/openwrt-15.05.1-ramips-mt7620-xiaomi-miwifi-mini-squashfs-sysupgrade.bin)：\n\n![OpenWrt](/img/breedwrt.png)\n\n而潘多拉盒子已经有了K2的稳定版[固件](http://downloads.pandorabox.com.cn/pandorabox-16-10-stable/targets/ralink/mt7620/PandoraBox-ralink-mt7620-phicomm-k2-2017-01-03-git-6c24a7a-squashfs-sysupgrade.bin)。另外给K2装软件时记得下载**ramips**架构的ipk包。","slug":"breed","published":1,"updated":"2017-02-26T12:05:50.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0sa000e8mpr27ifwxqk","content":"<p>之前早就听说<strong>斐讯</strong>路由器有个<em><a href=\"http://www.phicomm.com/cn/index.php/News/detail/cateid/2/id/372.html\" target=\"_blank\" rel=\"external\">0元购</a></em>活动，一直没往心里去；直到昨天看到<a href=\"http://weibo.com/xforce\" target=\"_blank\" rel=\"external\">XForce</a>大神也撸了一台，于是<del>江信江疑</del>跟风在<em>二手东</em>下了一单，结果今天就上船了，但愿30天内别翻船，才算真的免费拿到手啊。</p>\n<p>收货后先别急刮K码，刮开了万一有毛病就不给退了。先登<a href=\"http://192.168.2.1/\" target=\"_blank\" rel=\"external\">192.168.2.1</a>配置一下网络，发现原厂固件功能还算齐全，一般情况都够用了。但是据说有人发现路由器暗地里在给某些服务器传送着数据，恐怕有信息泄露的风险，当然刷一个第三方固件更保险一些了。</p>\n<p>我拿到的<strong>斐讯K2</strong>硬件版本是<code>A2</code>，固件版本是<code>22.4.5.42</code>。听闻说更高版本的固件刷Breed非常麻烦，我还比较庆幸原厂版本比较低，然而依然要降级。</p>\n<h1 id=\"刷入breed\"><a href=\"#刷入breed\" class=\"headerlink\" title=\"刷入breed\"></a>刷入breed</h1><h2 id=\"下载工具\"><a href=\"#下载工具\" class=\"headerlink\" title=\"下载工具\"></a>下载工具</h2><p>首先下载huzibbs大神制作的<strong>路由器刷breed Web助手通用版</strong>（<a href=\"http://qiannao.com/file/huzibbs/6952c4dc/\" target=\"_blank\" rel=\"external\">千脑</a> <a href=\"https://pan.baidu.com/s/1eSA6AdW\" target=\"_blank\" rel=\"external\">百度网盘</a>），可以实现一键刷telnet、ssh、breed。</p>\n<p>然后将路由器<strong>LAN</strong>口与Windows电脑用网线相连，然后长按路由器Reset键5秒恢复出厂设置。之后可以再访问一下<a href=\"http://192.168.2.1/\" target=\"_blank\" rel=\"external\">192.168.2.1</a>看是不是初始状态。</p>\n<h2 id=\"开始刷机\"><a href=\"#开始刷机\" class=\"headerlink\" title=\"开始刷机\"></a>开始刷机</h2><p>如果一切正常就以管理员身份运行<strong>路由器刷breed Web助手通用版</strong>：</p>\n<p><img src=\"/img/breedassistant.png\" alt=\"路由器刷breed Web助手通用版\"></p>\n<p>配置如图即可，注意其中刷机方案一定要选择<code>斐讯k1,k1s,k2全自动方案</code>，然后点击<code>开始刷机</code>即可。</p>\n<p>开始刷机前工具作者建议先手动禁用除<code>以太网</code>以外的其他网络连接。由于工具中途会调用另外几个程序，所以中途如果系统弹出了提示框允许即可，顺便设成不再提醒；如果弹窗导致刷机失败了重新再来一遍基本就可以了。</p>\n<h2 id=\"重启路由器\"><a href=\"#重启路由器\" class=\"headerlink\" title=\"重启路由器\"></a>重启路由器</h2><p>几分钟之后刷机自动完成，按照工具提示<strong>等待2分钟以后</strong>再断电。在重新通电前先按住Reset键再接通电源，持续按住Reset键约10秒钟再松手。不出意外此时路由器应该进入了breed引导，这时访问<a href=\"http://192.168.1.1/\" target=\"_blank\" rel=\"external\">192.168.1.1</a>应当就进入了<strong>Breed Web 恢复控制台</strong>：</p>\n<p><img src=\"/img/breedweb.png\" alt=\"Breed Web 恢复控制台\"></p>\n<h1 id=\"刷入第三方固件\"><a href=\"#刷入第三方固件\" class=\"headerlink\" title=\"刷入第三方固件\"></a>刷入第三方固件</h1><h2 id=\"固件备份\"><a href=\"#固件备份\" class=\"headerlink\" title=\"固件备份\"></a>固件备份</h2><p>进入控制台后，先到<code>固件备份</code>里将<code>EEPROM</code>和<code>编程器固件</code>备份一下：</p>\n<p><img src=\"/img/breedbackup.png\" alt=\"固件备份\"></p>\n<h2 id=\"恢复出厂设置\"><a href=\"#恢复出厂设置\" class=\"headerlink\" title=\"恢复出厂设置\"></a>恢复出厂设置</h2><p>然后到<code>恢复出厂设置</code>将固件恢复<code>Config区（公版）</code>：</p>\n<p><img src=\"/img/breedreset.png\" alt=\"恢复出厂设置\"></p>\n<h2 id=\"固件更新\"><a href=\"#固件更新\" class=\"headerlink\" title=\"固件更新\"></a>固件更新</h2><p>最后到<code>固件更新</code>选择要刷的固件上传即可：</p>\n<p><img src=\"/img/breedupdate.png\" alt=\"固件更新\"></p>\n<p>目前K2可刷的固件有很多，包括<a href=\"https://downloads.openwrt.org/\" target=\"_blank\" rel=\"external\">OpenWrt</a>、<a href=\"http://downloads.pandorabox.com.cn/\" target=\"_blank\" rel=\"external\">PandoraBox</a>等等。虽然OpenWrt还没有放出针对K2的Release版本，但由于它用的是<strong>ramips</strong>架构的<strong>mt7620</strong>芯片，所以一般mt7620芯片的路由器固件是通用的，于是我就刷了个小米路由器的<a href=\"https://downloads.openwrt.org/chaos_calmer/15.05.1/ramips/mt7620/openwrt-15.05.1-ramips-mt7620-xiaomi-miwifi-mini-squashfs-sysupgrade.bin\" target=\"_blank\" rel=\"external\">固件</a>：</p>\n<p><img src=\"/img/breedwrt.png\" alt=\"OpenWrt\"></p>\n<p>而潘多拉盒子已经有了K2的稳定版<a href=\"http://downloads.pandorabox.com.cn/pandorabox-16-10-stable/targets/ralink/mt7620/PandoraBox-ralink-mt7620-phicomm-k2-2017-01-03-git-6c24a7a-squashfs-sysupgrade.bin\" target=\"_blank\" rel=\"external\">固件</a>。另外给K2装软件时记得下载<strong>ramips</strong>架构的ipk包。</p>\n","excerpt":"","more":"<p>之前早就听说<strong>斐讯</strong>路由器有个<em><a href=\"http://www.phicomm.com/cn/index.php/News/detail/cateid/2/id/372.html\">0元购</a></em>活动，一直没往心里去；直到昨天看到<a href=\"http://weibo.com/xforce\">XForce</a>大神也撸了一台，于是<del>江信江疑</del>跟风在<em>二手东</em>下了一单，结果今天就上船了，但愿30天内别翻船，才算真的免费拿到手啊。</p>\n<p>收货后先别急刮K码，刮开了万一有毛病就不给退了。先登<a href=\"http://192.168.2.1/\">192.168.2.1</a>配置一下网络，发现原厂固件功能还算齐全，一般情况都够用了。但是据说有人发现路由器暗地里在给某些服务器传送着数据，恐怕有信息泄露的风险，当然刷一个第三方固件更保险一些了。</p>\n<p>我拿到的<strong>斐讯K2</strong>硬件版本是<code>A2</code>，固件版本是<code>22.4.5.42</code>。听闻说更高版本的固件刷Breed非常麻烦，我还比较庆幸原厂版本比较低，然而依然要降级。</p>\n<h1 id=\"刷入breed\"><a href=\"#刷入breed\" class=\"headerlink\" title=\"刷入breed\"></a>刷入breed</h1><h2 id=\"下载工具\"><a href=\"#下载工具\" class=\"headerlink\" title=\"下载工具\"></a>下载工具</h2><p>首先下载huzibbs大神制作的<strong>路由器刷breed Web助手通用版</strong>（<a href=\"http://qiannao.com/file/huzibbs/6952c4dc/\">千脑</a> <a href=\"https://pan.baidu.com/s/1eSA6AdW\">百度网盘</a>），可以实现一键刷telnet、ssh、breed。</p>\n<p>然后将路由器<strong>LAN</strong>口与Windows电脑用网线相连，然后长按路由器Reset键5秒恢复出厂设置。之后可以再访问一下<a href=\"http://192.168.2.1/\">192.168.2.1</a>看是不是初始状态。</p>\n<h2 id=\"开始刷机\"><a href=\"#开始刷机\" class=\"headerlink\" title=\"开始刷机\"></a>开始刷机</h2><p>如果一切正常就以管理员身份运行<strong>路由器刷breed Web助手通用版</strong>：</p>\n<p><img src=\"/img/breedassistant.png\" alt=\"路由器刷breed Web助手通用版\"></p>\n<p>配置如图即可，注意其中刷机方案一定要选择<code>斐讯k1,k1s,k2全自动方案</code>，然后点击<code>开始刷机</code>即可。</p>\n<p>开始刷机前工具作者建议先手动禁用除<code>以太网</code>以外的其他网络连接。由于工具中途会调用另外几个程序，所以中途如果系统弹出了提示框允许即可，顺便设成不再提醒；如果弹窗导致刷机失败了重新再来一遍基本就可以了。</p>\n<h2 id=\"重启路由器\"><a href=\"#重启路由器\" class=\"headerlink\" title=\"重启路由器\"></a>重启路由器</h2><p>几分钟之后刷机自动完成，按照工具提示<strong>等待2分钟以后</strong>再断电。在重新通电前先按住Reset键再接通电源，持续按住Reset键约10秒钟再松手。不出意外此时路由器应该进入了breed引导，这时访问<a href=\"http://192.168.1.1/\">192.168.1.1</a>应当就进入了<strong>Breed Web 恢复控制台</strong>：</p>\n<p><img src=\"/img/breedweb.png\" alt=\"Breed Web 恢复控制台\"></p>\n<h1 id=\"刷入第三方固件\"><a href=\"#刷入第三方固件\" class=\"headerlink\" title=\"刷入第三方固件\"></a>刷入第三方固件</h1><h2 id=\"固件备份\"><a href=\"#固件备份\" class=\"headerlink\" title=\"固件备份\"></a>固件备份</h2><p>进入控制台后，先到<code>固件备份</code>里将<code>EEPROM</code>和<code>编程器固件</code>备份一下：</p>\n<p><img src=\"/img/breedbackup.png\" alt=\"固件备份\"></p>\n<h2 id=\"恢复出厂设置\"><a href=\"#恢复出厂设置\" class=\"headerlink\" title=\"恢复出厂设置\"></a>恢复出厂设置</h2><p>然后到<code>恢复出厂设置</code>将固件恢复<code>Config区（公版）</code>：</p>\n<p><img src=\"/img/breedreset.png\" alt=\"恢复出厂设置\"></p>\n<h2 id=\"固件更新\"><a href=\"#固件更新\" class=\"headerlink\" title=\"固件更新\"></a>固件更新</h2><p>最后到<code>固件更新</code>选择要刷的固件上传即可：</p>\n<p><img src=\"/img/breedupdate.png\" alt=\"固件更新\"></p>\n<p>目前K2可刷的固件有很多，包括<a href=\"https://downloads.openwrt.org/\">OpenWrt</a>、<a href=\"http://downloads.pandorabox.com.cn/\">PandoraBox</a>等等。虽然OpenWrt还没有放出针对K2的Release版本，但由于它用的是<strong>ramips</strong>架构的<strong>mt7620</strong>芯片，所以一般mt7620芯片的路由器固件是通用的，于是我就刷了个小米路由器的<a href=\"https://downloads.openwrt.org/chaos_calmer/15.05.1/ramips/mt7620/openwrt-15.05.1-ramips-mt7620-xiaomi-miwifi-mini-squashfs-sysupgrade.bin\">固件</a>：</p>\n<p><img src=\"/img/breedwrt.png\" alt=\"OpenWrt\"></p>\n<p>而潘多拉盒子已经有了K2的稳定版<a href=\"http://downloads.pandorabox.com.cn/pandorabox-16-10-stable/targets/ralink/mt7620/PandoraBox-ralink-mt7620-phicomm-k2-2017-01-03-git-6c24a7a-squashfs-sysupgrade.bin\">固件</a>。另外给K2装软件时记得下载<strong>ramips</strong>架构的ipk包。</p>\n"},{"title":"CentOS 7配置LEMP环境","date":"2016-03-21T13:11:11.000Z","photos":["/img/lempbanner.png"],"_content":"由于最近许多服务都需要依赖LEMP（Linux、Nginx、MySQL、PHP）环境，之前旧金山机房的VPS使用CentOS 6的系统总是安装不成功，最近换了新加坡机房装了CentOS 7，所以重新完完整整的配置一遍，以便后面使用。\n\t\n# 安装MySQL\nMySQL直接从yum安装总是不能成功，后来索性就直接下载rpm包安装了。首先下载MySQL社区版的rpm包并执行安装：\n\n\trpm -ivh http://repo.mysql.com/mysql-community-release-el7-7.noarch.rpm\n\tyum update\n\t\n之后安装mysql-server：\n\n\tyum install mysql-server\n\t\n通过`mysql -V`命令查看版本来检查MySQL是否安装成功。\n\t\n启动服务并设置开机启动：\n\n\tsystemctl start mysqld\n\tsystemctl enable mysqld\n\t\n然后配置安全脚本：\n\n\tmysql_secure_installation\n\t\n这时会要求输入数据库的root密码，由于是新安装的并没有密码，所以直接回车即可。接下来会提示设置新的root密码，然后会有一些其它选项：\n\n> Remove anonymous users? [Y/n]\n> Disallow root login remotely? [Y/n]\n> Remove test database and access to it? [Y/n]\n> Reload privilege tables now? [Y/n]\n\n按需求选择即可，推荐都选Y。\n\n结束后使用`mysql -u root -p`命令以root身份登录，后面输入密码就登进去了。\n\n# 安装PHP\nyum默认安装的PHP还是5.4版本，对于需要新版本特性的用户还是通过Remi源安装好了。所以首先下载安装Remi源：\n\n\trpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\trpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\n\tyum update\n\t\n然后编辑`/etc/yum.repos.d/remi.repo`文件：\n\n```accesslog\n[remi]\nname=Remi's RPM repository for Enterprise Linux 7 - $basearch\n#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/\nmirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror\nenabled=1\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\n```\n\n请确保`[remi]`中的`enabled`的值是`1`。然后向下查看，在想要安装的php的版本（`[remi-php55]`或`[remi-php56]`）一段将对应的`enabled`的值改为`1`，例如：\n\n```accesslog\n[remi-php55]\nname=Remi's PHP 5.5 RPM repository for Enterprise Linux 7 - $basearch\n#baseurl=http://rpms.remirepo.net/enterprise/7/php55/$basearch/\nmirrorlist=http://rpms.remirepo.net/enterprise/7/php55/mirror\n# NOTICE: common dependencies are in \"remi-safe\"\nenabled=0\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\n\n[remi-php56]\nname=Remi's PHP 5.6 RPM repository for Enterprise Linux 7 - $basearch\n#baseurl=http://rpms.remirepo.net/enterprise/7/php56/$basearch/\nmirrorlist=http://rpms.remirepo.net/enterprise/7/php56/mirror\n# NOTICE: common dependencies are in \"remi-safe\"\nenabled=1\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\n```\n\n保存之后就可以用yum命令安装较新的PHP了：\n\n\tyum install php php-fpm php-mysql\n\t\n当然以后如果发现缺了什么php的组件也可以通过这种方式安装，例如：\n\t\n\tyum install php-gd php-mcrypt php-pear\n\t\n通过`php -v`命令查看版本来检查PHP是否安装成功。\n\n启动PHP并设置开机启动：\n\n\tsystemctl start php-fpm\n\tsystemctl enable php-fpm\n\t\n# 安装Nginx\n再使用yum安装Nginx：\n\n\tyum install nginx\n\t\n通过`nginx -v`命令查看版本来检查Nginx是否安装成功。\n\t\n启动Nginx并设置开机启动：\n\n\tsystemctl start nginx\n\tsystemctl enable nginx\n\t\n然后在`/etc/nginx/nginx.conf`的`http`段中加入一句：\n\n```sh\ninclude /etc/nginx/conf.d/*.conf;\n```\n\n编辑`/etc/nginx/conf.d/default.conf`文件（若不存在请新建，以后就可以在这里修改配置了）：\n\n```nginx\nserver {\n    listen       80;\n    server_name  your_domain;\n    return 301 https://$server_name$request_uri;\n    #charset koi8-r;\n\n    #access_log  logs/host.access.log  main;\n\n    # Load configuration files for the default server block.\n    \n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm index.php;\n    }\n\n    error_page  404              /404.html;\n    location = /404.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n```\n\n保存后通过`systemctl restart nginx`命令重启Nginx。然后在根目录下新建一个html文件并从浏览器访问它看看是不是正常显示。\n\t\n# 配置Nginx和PHP\n继续编辑`/etc/nginx/conf.d/default.conf`文件，将`location ~ \\.php$`一段解注释，并改成如下样子：\n\n```nginx\n    location ~ \\.php$ {\n        root\t   /usr/share/nginx/html;\n        fastcgi_pass   127.0.0.1:9000;\n        fastcgi_index  index.php;\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n    }\n```\n\n其中要注意`root`改成网页的根目录，此外还要确保`location /`的`index`中有`index.php`。然后通过`systemctl restart nginx`命令重启Nginx。\n\n再编辑`/etc/php-php.d/www.conf`将`user`和`group`的值改为`nginx`（默认应该是`apache`）：\n\n```sh\nuser = nginx\ngroup = nginx\n```\n\n保存后使用`systemctl restart php-fpm`命令重启PHP。\n\n下面新建`/usr/share/nginx/html/index.php`文件测试PHP环境是否配置成功：\n\n```php\n<?php\n\tphpinfo();\n?>\n```\n\n从浏览器打开该页面，如果出现PHP信息则说明配置完成。","source":"_posts/centos-lemp.md","raw":"title: CentOS 7配置LEMP环境\ndate: 2016-03-21 21:11:11\ntags: [Linux, LEMP, VPS, Nginx, MySQL, PHP, 服务器]\ncategories: [网络, 网站部署]\nphotos: \n\t- /img/lempbanner.png\n---\n由于最近许多服务都需要依赖LEMP（Linux、Nginx、MySQL、PHP）环境，之前旧金山机房的VPS使用CentOS 6的系统总是安装不成功，最近换了新加坡机房装了CentOS 7，所以重新完完整整的配置一遍，以便后面使用。\n\t\n# 安装MySQL\nMySQL直接从yum安装总是不能成功，后来索性就直接下载rpm包安装了。首先下载MySQL社区版的rpm包并执行安装：\n\n\trpm -ivh http://repo.mysql.com/mysql-community-release-el7-7.noarch.rpm\n\tyum update\n\t\n之后安装mysql-server：\n\n\tyum install mysql-server\n\t\n通过`mysql -V`命令查看版本来检查MySQL是否安装成功。\n\t\n启动服务并设置开机启动：\n\n\tsystemctl start mysqld\n\tsystemctl enable mysqld\n\t\n然后配置安全脚本：\n\n\tmysql_secure_installation\n\t\n这时会要求输入数据库的root密码，由于是新安装的并没有密码，所以直接回车即可。接下来会提示设置新的root密码，然后会有一些其它选项：\n\n> Remove anonymous users? [Y/n]\n> Disallow root login remotely? [Y/n]\n> Remove test database and access to it? [Y/n]\n> Reload privilege tables now? [Y/n]\n\n按需求选择即可，推荐都选Y。\n\n结束后使用`mysql -u root -p`命令以root身份登录，后面输入密码就登进去了。\n\n# 安装PHP\nyum默认安装的PHP还是5.4版本，对于需要新版本特性的用户还是通过Remi源安装好了。所以首先下载安装Remi源：\n\n\trpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\trpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\n\tyum update\n\t\n然后编辑`/etc/yum.repos.d/remi.repo`文件：\n\n```accesslog\n[remi]\nname=Remi's RPM repository for Enterprise Linux 7 - $basearch\n#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/\nmirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror\nenabled=1\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\n```\n\n请确保`[remi]`中的`enabled`的值是`1`。然后向下查看，在想要安装的php的版本（`[remi-php55]`或`[remi-php56]`）一段将对应的`enabled`的值改为`1`，例如：\n\n```accesslog\n[remi-php55]\nname=Remi's PHP 5.5 RPM repository for Enterprise Linux 7 - $basearch\n#baseurl=http://rpms.remirepo.net/enterprise/7/php55/$basearch/\nmirrorlist=http://rpms.remirepo.net/enterprise/7/php55/mirror\n# NOTICE: common dependencies are in \"remi-safe\"\nenabled=0\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\n\n[remi-php56]\nname=Remi's PHP 5.6 RPM repository for Enterprise Linux 7 - $basearch\n#baseurl=http://rpms.remirepo.net/enterprise/7/php56/$basearch/\nmirrorlist=http://rpms.remirepo.net/enterprise/7/php56/mirror\n# NOTICE: common dependencies are in \"remi-safe\"\nenabled=1\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\n```\n\n保存之后就可以用yum命令安装较新的PHP了：\n\n\tyum install php php-fpm php-mysql\n\t\n当然以后如果发现缺了什么php的组件也可以通过这种方式安装，例如：\n\t\n\tyum install php-gd php-mcrypt php-pear\n\t\n通过`php -v`命令查看版本来检查PHP是否安装成功。\n\n启动PHP并设置开机启动：\n\n\tsystemctl start php-fpm\n\tsystemctl enable php-fpm\n\t\n# 安装Nginx\n再使用yum安装Nginx：\n\n\tyum install nginx\n\t\n通过`nginx -v`命令查看版本来检查Nginx是否安装成功。\n\t\n启动Nginx并设置开机启动：\n\n\tsystemctl start nginx\n\tsystemctl enable nginx\n\t\n然后在`/etc/nginx/nginx.conf`的`http`段中加入一句：\n\n```sh\ninclude /etc/nginx/conf.d/*.conf;\n```\n\n编辑`/etc/nginx/conf.d/default.conf`文件（若不存在请新建，以后就可以在这里修改配置了）：\n\n```nginx\nserver {\n    listen       80;\n    server_name  your_domain;\n    return 301 https://$server_name$request_uri;\n    #charset koi8-r;\n\n    #access_log  logs/host.access.log  main;\n\n    # Load configuration files for the default server block.\n    \n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm index.php;\n    }\n\n    error_page  404              /404.html;\n    location = /404.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n```\n\n保存后通过`systemctl restart nginx`命令重启Nginx。然后在根目录下新建一个html文件并从浏览器访问它看看是不是正常显示。\n\t\n# 配置Nginx和PHP\n继续编辑`/etc/nginx/conf.d/default.conf`文件，将`location ~ \\.php$`一段解注释，并改成如下样子：\n\n```nginx\n    location ~ \\.php$ {\n        root\t   /usr/share/nginx/html;\n        fastcgi_pass   127.0.0.1:9000;\n        fastcgi_index  index.php;\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n    }\n```\n\n其中要注意`root`改成网页的根目录，此外还要确保`location /`的`index`中有`index.php`。然后通过`systemctl restart nginx`命令重启Nginx。\n\n再编辑`/etc/php-php.d/www.conf`将`user`和`group`的值改为`nginx`（默认应该是`apache`）：\n\n```sh\nuser = nginx\ngroup = nginx\n```\n\n保存后使用`systemctl restart php-fpm`命令重启PHP。\n\n下面新建`/usr/share/nginx/html/index.php`文件测试PHP环境是否配置成功：\n\n```php\n<?php\n\tphpinfo();\n?>\n```\n\n从浏览器打开该页面，如果出现PHP信息则说明配置完成。","slug":"centos-lemp","published":1,"updated":"2017-02-18T11:37:27.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0se000f8mpro07x3ukj","content":"<p>由于最近许多服务都需要依赖LEMP（Linux、Nginx、MySQL、PHP）环境，之前旧金山机房的VPS使用CentOS 6的系统总是安装不成功，最近换了新加坡机房装了CentOS 7，所以重新完完整整的配置一遍，以便后面使用。</p>\n<h1 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h1><p>MySQL直接从yum安装总是不能成功，后来索性就直接下载rpm包安装了。首先下载MySQL社区版的rpm包并执行安装：</p>\n<pre><code>rpm -ivh http://repo.mysql.com/mysql-community-release-el7-7.noarch.rpm\nyum update\n</code></pre><p>之后安装mysql-server：</p>\n<pre><code>yum install mysql-server\n</code></pre><p>通过<code>mysql -V</code>命令查看版本来检查MySQL是否安装成功。</p>\n<p>启动服务并设置开机启动：</p>\n<pre><code>systemctl start mysqld\nsystemctl enable mysqld\n</code></pre><p>然后配置安全脚本：</p>\n<pre><code>mysql_secure_installation\n</code></pre><p>这时会要求输入数据库的root密码，由于是新安装的并没有密码，所以直接回车即可。接下来会提示设置新的root密码，然后会有一些其它选项：</p>\n<blockquote>\n<p>Remove anonymous users? [Y/n]<br>Disallow root login remotely? [Y/n]<br>Remove test database and access to it? [Y/n]<br>Reload privilege tables now? [Y/n]</p>\n</blockquote>\n<p>按需求选择即可，推荐都选Y。</p>\n<p>结束后使用<code>mysql -u root -p</code>命令以root身份登录，后面输入密码就登进去了。</p>\n<h1 id=\"安装PHP\"><a href=\"#安装PHP\" class=\"headerlink\" title=\"安装PHP\"></a>安装PHP</h1><p>yum默认安装的PHP还是5.4版本，对于需要新版本特性的用户还是通过Remi源安装好了。所以首先下载安装Remi源：</p>\n<pre><code>rpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\nyum update\n</code></pre><p>然后编辑<code>/etc/yum.repos.d/remi.repo</code>文件：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">[remi]</span></div><div class=\"line\">name=Remi's RPM repository for Enterprise Linux <span class=\"number\">7</span> - $basearch</div><div class=\"line\">#baseurl=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/remi/$basearch/</div><div class=\"line\">mirrorlist=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/remi/mirror</div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgcheck=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi</div></pre></td></tr></table></figure>\n<p>请确保<code>[remi]</code>中的<code>enabled</code>的值是<code>1</code>。然后向下查看，在想要安装的php的版本（<code>[remi-php55]</code>或<code>[remi-php56]</code>）一段将对应的<code>enabled</code>的值改为<code>1</code>，例如：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">[remi-php55]</span></div><div class=\"line\">name=Remi's PHP <span class=\"number\">5</span>.<span class=\"number\">5</span> RPM repository for Enterprise Linux <span class=\"number\">7</span> - $basearch</div><div class=\"line\">#baseurl=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/php55/$basearch/</div><div class=\"line\">mirrorlist=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/php55/mirror</div><div class=\"line\"># NOTICE: common dependencies are in <span class=\"string\">\"remi-safe\"</span></div><div class=\"line\">enabled=<span class=\"number\">0</span></div><div class=\"line\">gpgcheck=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">[remi-php56]</span></div><div class=\"line\">name=Remi's PHP <span class=\"number\">5</span>.<span class=\"number\">6</span> RPM repository for Enterprise Linux <span class=\"number\">7</span> - $basearch</div><div class=\"line\">#baseurl=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/php56/$basearch/</div><div class=\"line\">mirrorlist=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/php56/mirror</div><div class=\"line\"># NOTICE: common dependencies are in <span class=\"string\">\"remi-safe\"</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgcheck=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi</div></pre></td></tr></table></figure>\n<p>保存之后就可以用yum命令安装较新的PHP了：</p>\n<pre><code>yum install php php-fpm php-mysql\n</code></pre><p>当然以后如果发现缺了什么php的组件也可以通过这种方式安装，例如：</p>\n<pre><code>yum install php-gd php-mcrypt php-pear\n</code></pre><p>通过<code>php -v</code>命令查看版本来检查PHP是否安装成功。</p>\n<p>启动PHP并设置开机启动：</p>\n<pre><code>systemctl start php-fpm\nsystemctl enable php-fpm\n</code></pre><h1 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h1><p>再使用yum安装Nginx：</p>\n<pre><code>yum install nginx\n</code></pre><p>通过<code>nginx -v</code>命令查看版本来检查Nginx是否安装成功。</p>\n<p>启动Nginx并设置开机启动：</p>\n<pre><code>systemctl start nginx\nsystemctl enable nginx\n</code></pre><p>然后在<code>/etc/nginx/nginx.conf</code>的<code>http</code>段中加入一句：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">include /etc/nginx/conf.d/*.conf;</div></pre></td></tr></table></figure>\n<p>编辑<code>/etc/nginx/conf.d/default.conf</code>文件（若不存在请新建，以后就可以在这里修改配置了）：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">    <span class=\"attribute\">server_name</span>  your_domain;</div><div class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">301</span> https://<span class=\"variable\">$server_name</span><span class=\"variable\">$request_uri</span>;</div><div class=\"line\">    <span class=\"comment\">#charset koi8-r;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Load configuration files for the default server block.</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/default.d/<span class=\"regexp\">*.conf</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</div><div class=\"line\">        <span class=\"attribute\">index</span>  index.html index.htm index.php;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">error_page</span>  <span class=\"number\">404</span>              /<span class=\"number\">404</span>.html;</div><div class=\"line\">    <span class=\"attribute\">location</span> = /<span class=\"number\">404</span>.html &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># redirect server error pages to the static page /50x.html</span></div><div class=\"line\">    <span class=\"comment\">#</span></div><div class=\"line\">    <span class=\"attribute\">error_page</span>   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /50x.html;</div><div class=\"line\">    <span class=\"attribute\">location</span> = /50x.html &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></div><div class=\"line\">    <span class=\"comment\">#</span></div><div class=\"line\">    <span class=\"comment\">#location ~ \\.php$ &#123;</span></div><div class=\"line\">    <span class=\"comment\">#    proxy_pass   http://127.0.0.1;</span></div><div class=\"line\">    <span class=\"comment\">#&#125;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></div><div class=\"line\">    <span class=\"comment\">#</span></div><div class=\"line\">    <span class=\"comment\">#location ~ \\.php$ &#123;</span></div><div class=\"line\">    <span class=\"comment\">#    root           html;</span></div><div class=\"line\">    <span class=\"comment\">#    fastcgi_pass   127.0.0.1:9000;</span></div><div class=\"line\">    <span class=\"comment\">#    fastcgi_index  index.php;</span></div><div class=\"line\">    <span class=\"comment\">#    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span></div><div class=\"line\">    <span class=\"comment\">#    include        fastcgi_params;</span></div><div class=\"line\">    <span class=\"comment\">#&#125;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># deny access to .htaccess files, if Apache's document root</span></div><div class=\"line\">    <span class=\"comment\"># concurs with nginx's one</span></div><div class=\"line\">    <span class=\"comment\">#</span></div><div class=\"line\">    <span class=\"comment\">#location ~ /\\.ht &#123;</span></div><div class=\"line\">    <span class=\"comment\">#    deny  all;</span></div><div class=\"line\">    <span class=\"comment\">#&#125;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>保存后通过<code>systemctl restart nginx</code>命令重启Nginx。然后在根目录下新建一个html文件并从浏览器访问它看看是不是正常显示。</p>\n<h1 id=\"配置Nginx和PHP\"><a href=\"#配置Nginx和PHP\" class=\"headerlink\" title=\"配置Nginx和PHP\"></a>配置Nginx和PHP</h1><p>继续编辑<code>/etc/nginx/conf.d/default.conf</code>文件，将<code>location ~ \\.php$</code>一段解注释，并改成如下样子：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">root</span>\t   /usr/share/nginx/html;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_pass</span>   <span class=\"number\">127.0.0.1:9000</span>;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_index</span>  index.php;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_param</span>  SCRIPT_FILENAME  <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</div><div class=\"line\">    <span class=\"attribute\">include</span>        fastcgi_params;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其中要注意<code>root</code>改成网页的根目录，此外还要确保<code>location /</code>的<code>index</code>中有<code>index.php</code>。然后通过<code>systemctl restart nginx</code>命令重启Nginx。</p>\n<p>再编辑<code>/etc/php-php.d/www.conf</code>将<code>user</code>和<code>group</code>的值改为<code>nginx</code>（默认应该是<code>apache</code>）：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">user = nginx</div><div class=\"line\">group = nginx</div></pre></td></tr></table></figure>\n<p>保存后使用<code>systemctl restart php-fpm</code>命令重启PHP。</p>\n<p>下面新建<code>/usr/share/nginx/html/index.php</code>文件测试PHP环境是否配置成功：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">\tphpinfo();</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>从浏览器打开该页面，如果出现PHP信息则说明配置完成。</p>\n","excerpt":"","more":"<p>由于最近许多服务都需要依赖LEMP（Linux、Nginx、MySQL、PHP）环境，之前旧金山机房的VPS使用CentOS 6的系统总是安装不成功，最近换了新加坡机房装了CentOS 7，所以重新完完整整的配置一遍，以便后面使用。</p>\n<h1 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h1><p>MySQL直接从yum安装总是不能成功，后来索性就直接下载rpm包安装了。首先下载MySQL社区版的rpm包并执行安装：</p>\n<pre><code>rpm -ivh http://repo.mysql.com/mysql-community-release-el7-7.noarch.rpm\nyum update\n</code></pre><p>之后安装mysql-server：</p>\n<pre><code>yum install mysql-server\n</code></pre><p>通过<code>mysql -V</code>命令查看版本来检查MySQL是否安装成功。</p>\n<p>启动服务并设置开机启动：</p>\n<pre><code>systemctl start mysqld\nsystemctl enable mysqld\n</code></pre><p>然后配置安全脚本：</p>\n<pre><code>mysql_secure_installation\n</code></pre><p>这时会要求输入数据库的root密码，由于是新安装的并没有密码，所以直接回车即可。接下来会提示设置新的root密码，然后会有一些其它选项：</p>\n<blockquote>\n<p>Remove anonymous users? [Y/n]<br>Disallow root login remotely? [Y/n]<br>Remove test database and access to it? [Y/n]<br>Reload privilege tables now? [Y/n]</p>\n</blockquote>\n<p>按需求选择即可，推荐都选Y。</p>\n<p>结束后使用<code>mysql -u root -p</code>命令以root身份登录，后面输入密码就登进去了。</p>\n<h1 id=\"安装PHP\"><a href=\"#安装PHP\" class=\"headerlink\" title=\"安装PHP\"></a>安装PHP</h1><p>yum默认安装的PHP还是5.4版本，对于需要新版本特性的用户还是通过Remi源安装好了。所以首先下载安装Remi源：</p>\n<pre><code>rpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\nyum update\n</code></pre><p>然后编辑<code>/etc/yum.repos.d/remi.repo</code>文件：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">[remi]</span></div><div class=\"line\">name=Remi's RPM repository for Enterprise Linux <span class=\"number\">7</span> - $basearch</div><div class=\"line\">#baseurl=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/remi/$basearch/</div><div class=\"line\">mirrorlist=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/remi/mirror</div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgcheck=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi</div></pre></td></tr></table></figure>\n<p>请确保<code>[remi]</code>中的<code>enabled</code>的值是<code>1</code>。然后向下查看，在想要安装的php的版本（<code>[remi-php55]</code>或<code>[remi-php56]</code>）一段将对应的<code>enabled</code>的值改为<code>1</code>，例如：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">[remi-php55]</span></div><div class=\"line\">name=Remi's PHP <span class=\"number\">5</span>.<span class=\"number\">5</span> RPM repository for Enterprise Linux <span class=\"number\">7</span> - $basearch</div><div class=\"line\">#baseurl=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/php55/$basearch/</div><div class=\"line\">mirrorlist=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/php55/mirror</div><div class=\"line\"># NOTICE: common dependencies are in <span class=\"string\">\"remi-safe\"</span></div><div class=\"line\">enabled=<span class=\"number\">0</span></div><div class=\"line\">gpgcheck=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">[remi-php56]</span></div><div class=\"line\">name=Remi's PHP <span class=\"number\">5</span>.<span class=\"number\">6</span> RPM repository for Enterprise Linux <span class=\"number\">7</span> - $basearch</div><div class=\"line\">#baseurl=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/php56/$basearch/</div><div class=\"line\">mirrorlist=http://rpms.remirepo.net/enterprise/<span class=\"number\">7</span>/php56/mirror</div><div class=\"line\"># NOTICE: common dependencies are in <span class=\"string\">\"remi-safe\"</span></div><div class=\"line\">enabled=<span class=\"number\">1</span></div><div class=\"line\">gpgcheck=<span class=\"number\">1</span></div><div class=\"line\">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi</div></pre></td></tr></table></figure>\n<p>保存之后就可以用yum命令安装较新的PHP了：</p>\n<pre><code>yum install php php-fpm php-mysql\n</code></pre><p>当然以后如果发现缺了什么php的组件也可以通过这种方式安装，例如：</p>\n<pre><code>yum install php-gd php-mcrypt php-pear\n</code></pre><p>通过<code>php -v</code>命令查看版本来检查PHP是否安装成功。</p>\n<p>启动PHP并设置开机启动：</p>\n<pre><code>systemctl start php-fpm\nsystemctl enable php-fpm\n</code></pre><h1 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h1><p>再使用yum安装Nginx：</p>\n<pre><code>yum install nginx\n</code></pre><p>通过<code>nginx -v</code>命令查看版本来检查Nginx是否安装成功。</p>\n<p>启动Nginx并设置开机启动：</p>\n<pre><code>systemctl start nginx\nsystemctl enable nginx\n</code></pre><p>然后在<code>/etc/nginx/nginx.conf</code>的<code>http</code>段中加入一句：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">include /etc/nginx/conf.d/*.conf;</div></pre></td></tr></table></figure>\n<p>编辑<code>/etc/nginx/conf.d/default.conf</code>文件（若不存在请新建，以后就可以在这里修改配置了）：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</div><div class=\"line\">    <span class=\"attribute\">server_name</span>  your_domain;</div><div class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">301</span> https://<span class=\"variable\">$server_name</span><span class=\"variable\">$request_uri</span>;</div><div class=\"line\">    <span class=\"comment\">#charset koi8-r;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Load configuration files for the default server block.</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/default.d/<span class=\"regexp\">*.conf</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</div><div class=\"line\">        <span class=\"attribute\">index</span>  index.html index.htm index.php;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">error_page</span>  <span class=\"number\">404</span>              /<span class=\"number\">404</span>.html;</div><div class=\"line\">    <span class=\"attribute\">location</span> = /<span class=\"number\">404</span>.html &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># redirect server error pages to the static page /50x.html</span></div><div class=\"line\">    <span class=\"comment\">#</span></div><div class=\"line\">    <span class=\"attribute\">error_page</span>   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /50x.html;</div><div class=\"line\">    <span class=\"attribute\">location</span> = /50x.html &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></div><div class=\"line\">    <span class=\"comment\">#</span></div><div class=\"line\">    <span class=\"comment\">#location ~ \\.php$ &#123;</span></div><div class=\"line\">    <span class=\"comment\">#    proxy_pass   http://127.0.0.1;</span></div><div class=\"line\">    <span class=\"comment\">#&#125;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></div><div class=\"line\">    <span class=\"comment\">#</span></div><div class=\"line\">    <span class=\"comment\">#location ~ \\.php$ &#123;</span></div><div class=\"line\">    <span class=\"comment\">#    root           html;</span></div><div class=\"line\">    <span class=\"comment\">#    fastcgi_pass   127.0.0.1:9000;</span></div><div class=\"line\">    <span class=\"comment\">#    fastcgi_index  index.php;</span></div><div class=\"line\">    <span class=\"comment\">#    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span></div><div class=\"line\">    <span class=\"comment\">#    include        fastcgi_params;</span></div><div class=\"line\">    <span class=\"comment\">#&#125;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># deny access to .htaccess files, if Apache's document root</span></div><div class=\"line\">    <span class=\"comment\"># concurs with nginx's one</span></div><div class=\"line\">    <span class=\"comment\">#</span></div><div class=\"line\">    <span class=\"comment\">#location ~ /\\.ht &#123;</span></div><div class=\"line\">    <span class=\"comment\">#    deny  all;</span></div><div class=\"line\">    <span class=\"comment\">#&#125;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>保存后通过<code>systemctl restart nginx</code>命令重启Nginx。然后在根目录下新建一个html文件并从浏览器访问它看看是不是正常显示。</p>\n<h1 id=\"配置Nginx和PHP\"><a href=\"#配置Nginx和PHP\" class=\"headerlink\" title=\"配置Nginx和PHP\"></a>配置Nginx和PHP</h1><p>继续编辑<code>/etc/nginx/conf.d/default.conf</code>文件，将<code>location ~ \\.php$</code>一段解注释，并改成如下样子：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">root</span>\t   /usr/share/nginx/html;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_pass</span>   <span class=\"number\">127.0.0.1:9000</span>;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_index</span>  index.php;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_param</span>  SCRIPT_FILENAME  <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</div><div class=\"line\">    <span class=\"attribute\">include</span>        fastcgi_params;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其中要注意<code>root</code>改成网页的根目录，此外还要确保<code>location /</code>的<code>index</code>中有<code>index.php</code>。然后通过<code>systemctl restart nginx</code>命令重启Nginx。</p>\n<p>再编辑<code>/etc/php-php.d/www.conf</code>将<code>user</code>和<code>group</code>的值改为<code>nginx</code>（默认应该是<code>apache</code>）：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">user = nginx</div><div class=\"line\">group = nginx</div></pre></td></tr></table></figure>\n<p>保存后使用<code>systemctl restart php-fpm</code>命令重启PHP。</p>\n<p>下面新建<code>/usr/share/nginx/html/index.php</code>文件测试PHP环境是否配置成功：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">\tphpinfo();</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>从浏览器打开该页面，如果出现PHP信息则说明配置完成。</p>\n"},{"title":"ChinaDNS+ShadowSocks实现路由器透明代理","date":"2016-06-01T10:18:18.000Z","photos":["/img/dnsbanner.png"],"_content":"\n之前给一个路由器刷了**OpenWrt**在学校上网用，这个月开始学校改计费方式了，索性就拿回家来做透明代理了。之前想使用**GFWlist**来分流结果没成功，所以才折腾一下**ChinaDNS**感觉还是比较简单的，但唯一的弊病是无论境外IP是否被屏蔽都会走代理，这样有些无关痛痒的国外网站访问起来可能会变慢。无论如何，终端设备不再使用代理软件已经方便很多了。\n\n在搞透明代理之前请确保路由器已经安刷好了OpenWrt。具体怎么刷OpenWrt请参见我之前的一篇博文[路由器刷入OpenWrt固件](/posts/openwrt/)。\n\n# 必要软件\n首先是在OpenWrt下装上一堆必要软件：\n\n+ shadowsocks-libev-spec\n+ luci-app-shadowsocks-spec\n+ ChinaDNS\n+ luci-app-chinadns\n\n这些都可以在[sourceforge](https://sourceforge.net/projects/openwrt-dist/files/)里找到。如果无法访问也可以下载我备份在服务器上的较老版本：\n\n\twget https://www.shintaku.cc/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\n\twget https://www.shintaku.cc/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n\twget https://www.shintaku.cc/files/ChinaDNS_1.3.2-3_ar71xx.ipk\n\twget https://www.shintaku.cc/files/luci-app-chinadns_1.4.0-1_all.ipk\n\t\n下载完成后使用`opkg`命令安装，如果当前目录下没有其他文件就直接`opkg install *`就好了。这时刷新一下LuCI界面就会多出`服务`一项了。\n\n![服务](/img/dnsservice.png)\n\n# 配置ChinaDNS\n默认配置是这样的：\n\n![ChinaDNS](/img/dnschinadns.png)\n\n其中的设置基本不用动，国内路由表在`/etc/chinadns_chnroute.txt`，最好设置成定期更新，可以在计划任务中添加`crontab`任务：\n\n\t0 4 * * * wget -O- 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | grep ipv4 | grep CN | awk -F\\| '{ printf(\"%s/%d\\n\", $4, 32-log($5)/log(2)) }' > /etc/chinadns_chnroute.txt\n\t\n这样每天凌晨4点就可以将新的路由表文件写入了。\n\n还有`上游服务器`一项，前面的是对于国内线路的DNS服务器，默认是114基本没什么问题；但是后一个DNS服务器则要求没有污染，默认用的Google的，感觉直接作为DNS不会太理想，所以需要自己在VPS上搭建一个简易的DNS服务器。\n\n简单来说，使用`dnsmasq`比较方便，所以登入VPS服务器，安装dnsmasq并加入开机启动：\n\n\tyum install dnsmasq\n\tsystemctl enable dnsmasq\n\n然后编辑配置文件`/etc/dnsmasq.conf`（因为所有内容都注释掉了，所以直接加入下面几行就可以了）：\n\n```ini\nport = 5353\nserver = 8.8.8.8\nserver = 8.8.4.4\n```\n\n保存后运行`dnsmasq`就监听到5353端口了，这样就可以间接地使用Google的DNS了。\n\n回到路由器方面，将`上游服务器`的后一项改为`VPS_ip:5353`保存就可以了。\n\n然后进入`网络`-`DHCP/DNS`，将`基本设置`里的`本地服务器`改为`127.0.0.1#5353`：\n\n![DHCP/DNS](/img/dnsdhcpdns.png)\n\n再到`HOSTS和解析文件`中`忽略解析文件`和`忽略/etc/hosts`保存即可。\n\n# 配置ShadowSocks\n`服务器配置`按实际情况填写即可，主要要注意`访问控制`里的`被忽略IP列表`，因为装了ChinaDNS，所以选里面的`ChinaDNS路由表`就行了。如果怕自己的VPS也被代理了，在`额外被忽略IP`里填上自己的VPS地址就好了：\n\n![ShadowSocks](/img/dnsshadowsocks.png)\n\n启动ShadowSocks以后可以用Baidu和Google分别测一下自己的IP地址，如果分别是ISP和VPS的IP应该就没问题了。\n\t\n","source":"_posts/chinadns.md","raw":"title: ChinaDNS+ShadowSocks实现路由器透明代理\ndate: 2016-06-01 18:18:18\ntags: [ChinaDNS, ShadowSocks, OpenWrt, 科学上网, 路由器, Linux]\ncategories: [网络, 科学上网]\nphotos:\n\t- /img/dnsbanner.png\n---\n\n之前给一个路由器刷了**OpenWrt**在学校上网用，这个月开始学校改计费方式了，索性就拿回家来做透明代理了。之前想使用**GFWlist**来分流结果没成功，所以才折腾一下**ChinaDNS**感觉还是比较简单的，但唯一的弊病是无论境外IP是否被屏蔽都会走代理，这样有些无关痛痒的国外网站访问起来可能会变慢。无论如何，终端设备不再使用代理软件已经方便很多了。\n\n在搞透明代理之前请确保路由器已经安刷好了OpenWrt。具体怎么刷OpenWrt请参见我之前的一篇博文[路由器刷入OpenWrt固件](/posts/openwrt/)。\n\n# 必要软件\n首先是在OpenWrt下装上一堆必要软件：\n\n+ shadowsocks-libev-spec\n+ luci-app-shadowsocks-spec\n+ ChinaDNS\n+ luci-app-chinadns\n\n这些都可以在[sourceforge](https://sourceforge.net/projects/openwrt-dist/files/)里找到。如果无法访问也可以下载我备份在服务器上的较老版本：\n\n\twget https://www.shintaku.cc/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\n\twget https://www.shintaku.cc/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk\n\twget https://www.shintaku.cc/files/ChinaDNS_1.3.2-3_ar71xx.ipk\n\twget https://www.shintaku.cc/files/luci-app-chinadns_1.4.0-1_all.ipk\n\t\n下载完成后使用`opkg`命令安装，如果当前目录下没有其他文件就直接`opkg install *`就好了。这时刷新一下LuCI界面就会多出`服务`一项了。\n\n![服务](/img/dnsservice.png)\n\n# 配置ChinaDNS\n默认配置是这样的：\n\n![ChinaDNS](/img/dnschinadns.png)\n\n其中的设置基本不用动，国内路由表在`/etc/chinadns_chnroute.txt`，最好设置成定期更新，可以在计划任务中添加`crontab`任务：\n\n\t0 4 * * * wget -O- 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | grep ipv4 | grep CN | awk -F\\| '{ printf(\"%s/%d\\n\", $4, 32-log($5)/log(2)) }' > /etc/chinadns_chnroute.txt\n\t\n这样每天凌晨4点就可以将新的路由表文件写入了。\n\n还有`上游服务器`一项，前面的是对于国内线路的DNS服务器，默认是114基本没什么问题；但是后一个DNS服务器则要求没有污染，默认用的Google的，感觉直接作为DNS不会太理想，所以需要自己在VPS上搭建一个简易的DNS服务器。\n\n简单来说，使用`dnsmasq`比较方便，所以登入VPS服务器，安装dnsmasq并加入开机启动：\n\n\tyum install dnsmasq\n\tsystemctl enable dnsmasq\n\n然后编辑配置文件`/etc/dnsmasq.conf`（因为所有内容都注释掉了，所以直接加入下面几行就可以了）：\n\n```ini\nport = 5353\nserver = 8.8.8.8\nserver = 8.8.4.4\n```\n\n保存后运行`dnsmasq`就监听到5353端口了，这样就可以间接地使用Google的DNS了。\n\n回到路由器方面，将`上游服务器`的后一项改为`VPS_ip:5353`保存就可以了。\n\n然后进入`网络`-`DHCP/DNS`，将`基本设置`里的`本地服务器`改为`127.0.0.1#5353`：\n\n![DHCP/DNS](/img/dnsdhcpdns.png)\n\n再到`HOSTS和解析文件`中`忽略解析文件`和`忽略/etc/hosts`保存即可。\n\n# 配置ShadowSocks\n`服务器配置`按实际情况填写即可，主要要注意`访问控制`里的`被忽略IP列表`，因为装了ChinaDNS，所以选里面的`ChinaDNS路由表`就行了。如果怕自己的VPS也被代理了，在`额外被忽略IP`里填上自己的VPS地址就好了：\n\n![ShadowSocks](/img/dnsshadowsocks.png)\n\n启动ShadowSocks以后可以用Baidu和Google分别测一下自己的IP地址，如果分别是ISP和VPS的IP应该就没问题了。\n\t\n","slug":"chinadns","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0sk000i8mpr97ykadjr","content":"<p>之前给一个路由器刷了<strong>OpenWrt</strong>在学校上网用，这个月开始学校改计费方式了，索性就拿回家来做透明代理了。之前想使用<strong>GFWlist</strong>来分流结果没成功，所以才折腾一下<strong>ChinaDNS</strong>感觉还是比较简单的，但唯一的弊病是无论境外IP是否被屏蔽都会走代理，这样有些无关痛痒的国外网站访问起来可能会变慢。无论如何，终端设备不再使用代理软件已经方便很多了。</p>\n<p>在搞透明代理之前请确保路由器已经安刷好了OpenWrt。具体怎么刷OpenWrt请参见我之前的一篇博文<a href=\"/posts/openwrt/\">路由器刷入OpenWrt固件</a>。</p>\n<h1 id=\"必要软件\"><a href=\"#必要软件\" class=\"headerlink\" title=\"必要软件\"></a>必要软件</h1><p>首先是在OpenWrt下装上一堆必要软件：</p>\n<ul>\n<li>shadowsocks-libev-spec</li>\n<li>luci-app-shadowsocks-spec</li>\n<li>ChinaDNS</li>\n<li>luci-app-chinadns</li>\n</ul>\n<p>这些都可以在<a href=\"https://sourceforge.net/projects/openwrt-dist/files/\" target=\"_blank\" rel=\"external\">sourceforge</a>里找到。如果无法访问也可以下载我备份在服务器上的较老版本：</p>\n<pre><code>wget https://www.shintaku.cc/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\nwget https://www.shintaku.cc/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk\nwget https://www.shintaku.cc/files/ChinaDNS_1.3.2-3_ar71xx.ipk\nwget https://www.shintaku.cc/files/luci-app-chinadns_1.4.0-1_all.ipk\n</code></pre><p>下载完成后使用<code>opkg</code>命令安装，如果当前目录下没有其他文件就直接<code>opkg install *</code>就好了。这时刷新一下LuCI界面就会多出<code>服务</code>一项了。</p>\n<p><img src=\"/img/dnsservice.png\" alt=\"服务\"></p>\n<h1 id=\"配置ChinaDNS\"><a href=\"#配置ChinaDNS\" class=\"headerlink\" title=\"配置ChinaDNS\"></a>配置ChinaDNS</h1><p>默认配置是这样的：</p>\n<p><img src=\"/img/dnschinadns.png\" alt=\"ChinaDNS\"></p>\n<p>其中的设置基本不用动，国内路由表在<code>/etc/chinadns_chnroute.txt</code>，最好设置成定期更新，可以在计划任务中添加<code>crontab</code>任务：</p>\n<pre><code>0 4 * * * wget -O- &apos;http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest&apos; | grep ipv4 | grep CN | awk -F\\| &apos;{ printf(&quot;%s/%d\\n&quot;, $4, 32-log($5)/log(2)) }&apos; &gt; /etc/chinadns_chnroute.txt\n</code></pre><p>这样每天凌晨4点就可以将新的路由表文件写入了。</p>\n<p>还有<code>上游服务器</code>一项，前面的是对于国内线路的DNS服务器，默认是114基本没什么问题；但是后一个DNS服务器则要求没有污染，默认用的Google的，感觉直接作为DNS不会太理想，所以需要自己在VPS上搭建一个简易的DNS服务器。</p>\n<p>简单来说，使用<code>dnsmasq</code>比较方便，所以登入VPS服务器，安装dnsmasq并加入开机启动：</p>\n<pre><code>yum install dnsmasq\nsystemctl enable dnsmasq\n</code></pre><p>然后编辑配置文件<code>/etc/dnsmasq.conf</code>（因为所有内容都注释掉了，所以直接加入下面几行就可以了）：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">5353</span></div><div class=\"line\"><span class=\"attr\">server</span> = <span class=\"number\">8.8</span>.<span class=\"number\">8.8</span></div><div class=\"line\"><span class=\"attr\">server</span> = <span class=\"number\">8.8</span>.<span class=\"number\">4.4</span></div></pre></td></tr></table></figure>\n<p>保存后运行<code>dnsmasq</code>就监听到5353端口了，这样就可以间接地使用Google的DNS了。</p>\n<p>回到路由器方面，将<code>上游服务器</code>的后一项改为<code>VPS_ip:5353</code>保存就可以了。</p>\n<p>然后进入<code>网络</code>-<code>DHCP/DNS</code>，将<code>基本设置</code>里的<code>本地服务器</code>改为<code>127.0.0.1#5353</code>：</p>\n<p><img src=\"/img/dnsdhcpdns.png\" alt=\"DHCP/DNS\"></p>\n<p>再到<code>HOSTS和解析文件</code>中<code>忽略解析文件</code>和<code>忽略/etc/hosts</code>保存即可。</p>\n<h1 id=\"配置ShadowSocks\"><a href=\"#配置ShadowSocks\" class=\"headerlink\" title=\"配置ShadowSocks\"></a>配置ShadowSocks</h1><p><code>服务器配置</code>按实际情况填写即可，主要要注意<code>访问控制</code>里的<code>被忽略IP列表</code>，因为装了ChinaDNS，所以选里面的<code>ChinaDNS路由表</code>就行了。如果怕自己的VPS也被代理了，在<code>额外被忽略IP</code>里填上自己的VPS地址就好了：</p>\n<p><img src=\"/img/dnsshadowsocks.png\" alt=\"ShadowSocks\"></p>\n<p>启动ShadowSocks以后可以用Baidu和Google分别测一下自己的IP地址，如果分别是ISP和VPS的IP应该就没问题了。</p>\n","excerpt":"","more":"<p>之前给一个路由器刷了<strong>OpenWrt</strong>在学校上网用，这个月开始学校改计费方式了，索性就拿回家来做透明代理了。之前想使用<strong>GFWlist</strong>来分流结果没成功，所以才折腾一下<strong>ChinaDNS</strong>感觉还是比较简单的，但唯一的弊病是无论境外IP是否被屏蔽都会走代理，这样有些无关痛痒的国外网站访问起来可能会变慢。无论如何，终端设备不再使用代理软件已经方便很多了。</p>\n<p>在搞透明代理之前请确保路由器已经安刷好了OpenWrt。具体怎么刷OpenWrt请参见我之前的一篇博文<a href=\"/posts/openwrt/\">路由器刷入OpenWrt固件</a>。</p>\n<h1 id=\"必要软件\"><a href=\"#必要软件\" class=\"headerlink\" title=\"必要软件\"></a>必要软件</h1><p>首先是在OpenWrt下装上一堆必要软件：</p>\n<ul>\n<li>shadowsocks-libev-spec</li>\n<li>luci-app-shadowsocks-spec</li>\n<li>ChinaDNS</li>\n<li>luci-app-chinadns</li>\n</ul>\n<p>这些都可以在<a href=\"https://sourceforge.net/projects/openwrt-dist/files/\">sourceforge</a>里找到。如果无法访问也可以下载我备份在服务器上的较老版本：</p>\n<pre><code>wget https://www.shintaku.cc/files/shadowsocks-libev-spec_2.4.6-1_ar71xx.ipk\nwget https://www.shintaku.cc/files/luci-app-shadowsocks-spec_1.4.0-1_all.ipk\nwget https://www.shintaku.cc/files/ChinaDNS_1.3.2-3_ar71xx.ipk\nwget https://www.shintaku.cc/files/luci-app-chinadns_1.4.0-1_all.ipk\n</code></pre><p>下载完成后使用<code>opkg</code>命令安装，如果当前目录下没有其他文件就直接<code>opkg install *</code>就好了。这时刷新一下LuCI界面就会多出<code>服务</code>一项了。</p>\n<p><img src=\"/img/dnsservice.png\" alt=\"服务\"></p>\n<h1 id=\"配置ChinaDNS\"><a href=\"#配置ChinaDNS\" class=\"headerlink\" title=\"配置ChinaDNS\"></a>配置ChinaDNS</h1><p>默认配置是这样的：</p>\n<p><img src=\"/img/dnschinadns.png\" alt=\"ChinaDNS\"></p>\n<p>其中的设置基本不用动，国内路由表在<code>/etc/chinadns_chnroute.txt</code>，最好设置成定期更新，可以在计划任务中添加<code>crontab</code>任务：</p>\n<pre><code>0 4 * * * wget -O- &apos;http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest&apos; | grep ipv4 | grep CN | awk -F\\| &apos;{ printf(&quot;%s/%d\\n&quot;, $4, 32-log($5)/log(2)) }&apos; &gt; /etc/chinadns_chnroute.txt\n</code></pre><p>这样每天凌晨4点就可以将新的路由表文件写入了。</p>\n<p>还有<code>上游服务器</code>一项，前面的是对于国内线路的DNS服务器，默认是114基本没什么问题；但是后一个DNS服务器则要求没有污染，默认用的Google的，感觉直接作为DNS不会太理想，所以需要自己在VPS上搭建一个简易的DNS服务器。</p>\n<p>简单来说，使用<code>dnsmasq</code>比较方便，所以登入VPS服务器，安装dnsmasq并加入开机启动：</p>\n<pre><code>yum install dnsmasq\nsystemctl enable dnsmasq\n</code></pre><p>然后编辑配置文件<code>/etc/dnsmasq.conf</code>（因为所有内容都注释掉了，所以直接加入下面几行就可以了）：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">5353</span></div><div class=\"line\"><span class=\"attr\">server</span> = <span class=\"number\">8.8</span>.<span class=\"number\">8.8</span></div><div class=\"line\"><span class=\"attr\">server</span> = <span class=\"number\">8.8</span>.<span class=\"number\">4.4</span></div></pre></td></tr></table></figure>\n<p>保存后运行<code>dnsmasq</code>就监听到5353端口了，这样就可以间接地使用Google的DNS了。</p>\n<p>回到路由器方面，将<code>上游服务器</code>的后一项改为<code>VPS_ip:5353</code>保存就可以了。</p>\n<p>然后进入<code>网络</code>-<code>DHCP/DNS</code>，将<code>基本设置</code>里的<code>本地服务器</code>改为<code>127.0.0.1#5353</code>：</p>\n<p><img src=\"/img/dnsdhcpdns.png\" alt=\"DHCP/DNS\"></p>\n<p>再到<code>HOSTS和解析文件</code>中<code>忽略解析文件</code>和<code>忽略/etc/hosts</code>保存即可。</p>\n<h1 id=\"配置ShadowSocks\"><a href=\"#配置ShadowSocks\" class=\"headerlink\" title=\"配置ShadowSocks\"></a>配置ShadowSocks</h1><p><code>服务器配置</code>按实际情况填写即可，主要要注意<code>访问控制</code>里的<code>被忽略IP列表</code>，因为装了ChinaDNS，所以选里面的<code>ChinaDNS路由表</code>就行了。如果怕自己的VPS也被代理了，在<code>额外被忽略IP</code>里填上自己的VPS地址就好了：</p>\n<p><img src=\"/img/dnsshadowsocks.png\" alt=\"ShadowSocks\"></p>\n<p>启动ShadowSocks以后可以用Baidu和Google分别测一下自己的IP地址，如果分别是ISP和VPS的IP应该就没问题了。</p>\n"},{"title":"使用dd命令制作启动盘","date":"2015-12-21T13:11:11.000Z","photos":["/img/ddbanner.png"],"_content":"双十二期间因为有十几块钱的代金券用不出去剁手了一个**树莓派2代**~~为了二两醋买一斤螃蟹~~。货到了以后就要往micro SD卡里装一个系统。之前用Windows的时候一直用软碟通往U盘之类的介质中写入镜像文件，换了rMBP之后还没干过这类事，所以一时摸不着头脑。后来发现有`dd`这样一个命令可以用来制作启动盘。\n\n在Unix上，硬件的设备驱动器和特殊设备文件就像普通文件一样，出现在文件系统中；只要在各自的驱动程序中实现了对应的功能，dd也可以读取或写入到这些文件。这样，dd也可以用在备份硬件的引导扇区、获取一定数量的随机数据等任务中。dd程序也可以在复制时处理数据，例如转换字节序、或在ASCII与EBCDIC编码间互换。\n\n# 查询驱动器名\n插入U盘或读卡器后首先需要知道其在当前系统下的驱动器名，可以使用`diskutil list`命令：\n\n\t/dev/disk0 (internal, physical):\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:      GUID_partition_scheme                        *251.0 GB   disk0\n\t   1:                        EFI EFI                     209.7 MB   disk0s1\n\t   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2\n\t   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n\t/dev/disk1 (internal, virtual):\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1\n                                 Logical Volume on disk0s2\n                                 6507AD0A-D7FF-4641-AC5C-012CCD75AA23\n                                 Unlocked Encrypted\n\t/dev/disk2 (external, physical):\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:     FDisk_partition_scheme                        *4.0 GB     disk2\n\t   1:                 DOS_FAT_32 UNTITLED                4.0 GB     disk2s1\n\t   \n可以看到`disk0`当然是电脑的内置物理磁盘，`disk1`是内置虚拟磁盘，`disk2`才是要写入的U盘。然后通过`diskutil unmountDisk /dev/disk2`命令卸载刚才插入的驱动器，出现：\n\n> Unmount of all volumes on disk2 was successful\n\t\n说明卸载成功。\n\n# 写入镜像文件\n使用命令：\n\n\tsudo dd if=disk_image_file of=/dev/rdisk2 bs=1m\n\t\n注意使用`sudo`，中间`of`参数中的盘符中记得改成`rdisk`（据我测试这里如果没加`r`写入过程会非常缓慢）。还有`bs`参数代表的是块大小~~学过体系结构的都知道~~，单位可以使用b、k、m、g等，默认是512字节，但不知道在这里不同大小会影响什么。\n\n写入成功后会返回一个报告：\n\n> 501+1 records in\n> 501+1 records out\n> 526260224 bytes transferred in 82.961110 secs (6343457 bytes/sec)\n\t\n这里看到写入到一个2.0的U盘速度大概6兆/秒，如果上面`of`中没加`r`的话速度则不到1兆/秒：\n\n> 526260224 bytes transferred in 552.306611 secs (952841 bytes/sec)\n\t\n到这里写入完成，使用`diskutil eject /dev/disk2`弹出驱动器即可，出现：\n\n> Disk /dev/disk2 ejected\n\n说明弹出成功，全部完成。","source":"_posts/dd.md","raw":"title: 使用dd命令制作启动盘\ndate: 2015-12-21 21:11:11\ntags: [macOS, Unix, Linux]\ncategories: [奇技淫巧, ＊nix]\nphotos: \n\t- /img/ddbanner.png\n---\n双十二期间因为有十几块钱的代金券用不出去剁手了一个**树莓派2代**~~为了二两醋买一斤螃蟹~~。货到了以后就要往micro SD卡里装一个系统。之前用Windows的时候一直用软碟通往U盘之类的介质中写入镜像文件，换了rMBP之后还没干过这类事，所以一时摸不着头脑。后来发现有`dd`这样一个命令可以用来制作启动盘。\n\n在Unix上，硬件的设备驱动器和特殊设备文件就像普通文件一样，出现在文件系统中；只要在各自的驱动程序中实现了对应的功能，dd也可以读取或写入到这些文件。这样，dd也可以用在备份硬件的引导扇区、获取一定数量的随机数据等任务中。dd程序也可以在复制时处理数据，例如转换字节序、或在ASCII与EBCDIC编码间互换。\n\n# 查询驱动器名\n插入U盘或读卡器后首先需要知道其在当前系统下的驱动器名，可以使用`diskutil list`命令：\n\n\t/dev/disk0 (internal, physical):\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:      GUID_partition_scheme                        *251.0 GB   disk0\n\t   1:                        EFI EFI                     209.7 MB   disk0s1\n\t   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2\n\t   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n\t/dev/disk1 (internal, virtual):\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1\n                                 Logical Volume on disk0s2\n                                 6507AD0A-D7FF-4641-AC5C-012CCD75AA23\n                                 Unlocked Encrypted\n\t/dev/disk2 (external, physical):\n\t   #:                       TYPE NAME                    SIZE       IDENTIFIER\n\t   0:     FDisk_partition_scheme                        *4.0 GB     disk2\n\t   1:                 DOS_FAT_32 UNTITLED                4.0 GB     disk2s1\n\t   \n可以看到`disk0`当然是电脑的内置物理磁盘，`disk1`是内置虚拟磁盘，`disk2`才是要写入的U盘。然后通过`diskutil unmountDisk /dev/disk2`命令卸载刚才插入的驱动器，出现：\n\n> Unmount of all volumes on disk2 was successful\n\t\n说明卸载成功。\n\n# 写入镜像文件\n使用命令：\n\n\tsudo dd if=disk_image_file of=/dev/rdisk2 bs=1m\n\t\n注意使用`sudo`，中间`of`参数中的盘符中记得改成`rdisk`（据我测试这里如果没加`r`写入过程会非常缓慢）。还有`bs`参数代表的是块大小~~学过体系结构的都知道~~，单位可以使用b、k、m、g等，默认是512字节，但不知道在这里不同大小会影响什么。\n\n写入成功后会返回一个报告：\n\n> 501+1 records in\n> 501+1 records out\n> 526260224 bytes transferred in 82.961110 secs (6343457 bytes/sec)\n\t\n这里看到写入到一个2.0的U盘速度大概6兆/秒，如果上面`of`中没加`r`的话速度则不到1兆/秒：\n\n> 526260224 bytes transferred in 552.306611 secs (952841 bytes/sec)\n\t\n到这里写入完成，使用`diskutil eject /dev/disk2`弹出驱动器即可，出现：\n\n> Disk /dev/disk2 ejected\n\n说明弹出成功，全部完成。","slug":"dd","published":1,"updated":"2017-02-17T06:34:22.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0t3000j8mprt4lwmiqh","content":"<p>双十二期间因为有十几块钱的代金券用不出去剁手了一个<strong>树莓派2代</strong><del>为了二两醋买一斤螃蟹</del>。货到了以后就要往micro SD卡里装一个系统。之前用Windows的时候一直用软碟通往U盘之类的介质中写入镜像文件，换了rMBP之后还没干过这类事，所以一时摸不着头脑。后来发现有<code>dd</code>这样一个命令可以用来制作启动盘。</p>\n<p>在Unix上，硬件的设备驱动器和特殊设备文件就像普通文件一样，出现在文件系统中；只要在各自的驱动程序中实现了对应的功能，dd也可以读取或写入到这些文件。这样，dd也可以用在备份硬件的引导扇区、获取一定数量的随机数据等任务中。dd程序也可以在复制时处理数据，例如转换字节序、或在ASCII与EBCDIC编码间互换。</p>\n<h1 id=\"查询驱动器名\"><a href=\"#查询驱动器名\" class=\"headerlink\" title=\"查询驱动器名\"></a>查询驱动器名</h1><p>插入U盘或读卡器后首先需要知道其在当前系统下的驱动器名，可以使用<code>diskutil list</code>命令：</p>\n<pre><code>/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *251.0 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1\n                             Logical Volume on disk0s2\n                             6507AD0A-D7FF-4641-AC5C-012CCD75AA23\n                             Unlocked Encrypted\n/dev/disk2 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:     FDisk_partition_scheme                        *4.0 GB     disk2\n   1:                 DOS_FAT_32 UNTITLED                4.0 GB     disk2s1\n</code></pre><p>可以看到<code>disk0</code>当然是电脑的内置物理磁盘，<code>disk1</code>是内置虚拟磁盘，<code>disk2</code>才是要写入的U盘。然后通过<code>diskutil unmountDisk /dev/disk2</code>命令卸载刚才插入的驱动器，出现：</p>\n<blockquote>\n<p>Unmount of all volumes on disk2 was successful</p>\n</blockquote>\n<p>说明卸载成功。</p>\n<h1 id=\"写入镜像文件\"><a href=\"#写入镜像文件\" class=\"headerlink\" title=\"写入镜像文件\"></a>写入镜像文件</h1><p>使用命令：</p>\n<pre><code>sudo dd if=disk_image_file of=/dev/rdisk2 bs=1m\n</code></pre><p>注意使用<code>sudo</code>，中间<code>of</code>参数中的盘符中记得改成<code>rdisk</code>（据我测试这里如果没加<code>r</code>写入过程会非常缓慢）。还有<code>bs</code>参数代表的是块大小<del>学过体系结构的都知道</del>，单位可以使用b、k、m、g等，默认是512字节，但不知道在这里不同大小会影响什么。</p>\n<p>写入成功后会返回一个报告：</p>\n<blockquote>\n<p>501+1 records in<br>501+1 records out<br>526260224 bytes transferred in 82.961110 secs (6343457 bytes/sec)</p>\n</blockquote>\n<p>这里看到写入到一个2.0的U盘速度大概6兆/秒，如果上面<code>of</code>中没加<code>r</code>的话速度则不到1兆/秒：</p>\n<blockquote>\n<p>526260224 bytes transferred in 552.306611 secs (952841 bytes/sec)</p>\n</blockquote>\n<p>到这里写入完成，使用<code>diskutil eject /dev/disk2</code>弹出驱动器即可，出现：</p>\n<blockquote>\n<p>Disk /dev/disk2 ejected</p>\n</blockquote>\n<p>说明弹出成功，全部完成。</p>\n","excerpt":"","more":"<p>双十二期间因为有十几块钱的代金券用不出去剁手了一个<strong>树莓派2代</strong><del>为了二两醋买一斤螃蟹</del>。货到了以后就要往micro SD卡里装一个系统。之前用Windows的时候一直用软碟通往U盘之类的介质中写入镜像文件，换了rMBP之后还没干过这类事，所以一时摸不着头脑。后来发现有<code>dd</code>这样一个命令可以用来制作启动盘。</p>\n<p>在Unix上，硬件的设备驱动器和特殊设备文件就像普通文件一样，出现在文件系统中；只要在各自的驱动程序中实现了对应的功能，dd也可以读取或写入到这些文件。这样，dd也可以用在备份硬件的引导扇区、获取一定数量的随机数据等任务中。dd程序也可以在复制时处理数据，例如转换字节序、或在ASCII与EBCDIC编码间互换。</p>\n<h1 id=\"查询驱动器名\"><a href=\"#查询驱动器名\" class=\"headerlink\" title=\"查询驱动器名\"></a>查询驱动器名</h1><p>插入U盘或读卡器后首先需要知道其在当前系统下的驱动器名，可以使用<code>diskutil list</code>命令：</p>\n<pre><code>/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *251.0 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3\n/dev/disk1 (internal, virtual):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1\n                             Logical Volume on disk0s2\n                             6507AD0A-D7FF-4641-AC5C-012CCD75AA23\n                             Unlocked Encrypted\n/dev/disk2 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:     FDisk_partition_scheme                        *4.0 GB     disk2\n   1:                 DOS_FAT_32 UNTITLED                4.0 GB     disk2s1\n</code></pre><p>可以看到<code>disk0</code>当然是电脑的内置物理磁盘，<code>disk1</code>是内置虚拟磁盘，<code>disk2</code>才是要写入的U盘。然后通过<code>diskutil unmountDisk /dev/disk2</code>命令卸载刚才插入的驱动器，出现：</p>\n<blockquote>\n<p>Unmount of all volumes on disk2 was successful</p>\n</blockquote>\n<p>说明卸载成功。</p>\n<h1 id=\"写入镜像文件\"><a href=\"#写入镜像文件\" class=\"headerlink\" title=\"写入镜像文件\"></a>写入镜像文件</h1><p>使用命令：</p>\n<pre><code>sudo dd if=disk_image_file of=/dev/rdisk2 bs=1m\n</code></pre><p>注意使用<code>sudo</code>，中间<code>of</code>参数中的盘符中记得改成<code>rdisk</code>（据我测试这里如果没加<code>r</code>写入过程会非常缓慢）。还有<code>bs</code>参数代表的是块大小<del>学过体系结构的都知道</del>，单位可以使用b、k、m、g等，默认是512字节，但不知道在这里不同大小会影响什么。</p>\n<p>写入成功后会返回一个报告：</p>\n<blockquote>\n<p>501+1 records in<br>501+1 records out<br>526260224 bytes transferred in 82.961110 secs (6343457 bytes/sec)</p>\n</blockquote>\n<p>这里看到写入到一个2.0的U盘速度大概6兆/秒，如果上面<code>of</code>中没加<code>r</code>的话速度则不到1兆/秒：</p>\n<blockquote>\n<p>526260224 bytes transferred in 552.306611 secs (952841 bytes/sec)</p>\n</blockquote>\n<p>到这里写入完成，使用<code>diskutil eject /dev/disk2</code>弹出驱动器即可，出现：</p>\n<blockquote>\n<p>Disk /dev/disk2 ejected</p>\n</blockquote>\n<p>说明弹出成功，全部完成。</p>\n"},{"title":"Digital Ocean开通VPS","date":"2015-11-01T15:33:33.000Z","photos":["/img/dobanner.png"],"_content":"目前使用体验较好的VPS服务商大概有[Linode](https://www.linode.com/)、[ConoHa](https://www.conoha.jp/en/)、[Digital Ocean](https://www.digitalocean.com/)、[Vultr](https://www.vultr.com/)等等，由于GitHub的[Student Developer Pack](https://education.github.com/pack)有DO家的50美刀优惠，~~但到了三个月后才申请下来，由于注册时已经输过优惠码所以就坑了，~~于是本文使用的是DO的服务。\n\n# 注册DO帐号\n通过[邀请地址](https://www.digitalocean.com/?refcode=bbb0bdba1c4e)注册的新账户将获得10美刀的优惠。\n\n按照步骤填完个人信息后，需要绑定支付方式并往新账户里充5美元来激活DO账户。个人建议先绑定PayPal账户，至于PayPal如果没有信用卡的话，绑定储蓄卡也是可以的，个人亲测学校办的交行卡可用。\n\n激活账户后，如果你有GitHub教育优惠就使用它给的优惠码，如果没有可以搜一个最近的10美元或20美元优惠码，注意这样的优惠码**只能输一次**。\n\n![输入优惠码](/img/sspromo.png)\n\n账户余额基本就有15美元了，这足够使用最便宜的套餐3个月了。\n\n# 新建服务器\n首先要给服务器取一个Hostname，按个人喜好随意命名。\n\n然后选择套餐，我选择的是最便宜的$5套餐，包含**512M的内存、20G的SSD和1000G流量**每个月。\n\n![选择配置](/img/ssch1.png)\n\n数据中心任意选择，考虑到国际光缆的走向，建议选择位于美国西海岸或者亚太地区的，我选择的是旧金山机房。\n\n选择镜像的时候选一个自己熟悉的系统就可以了，也可以选择带一键安装应用的，按需选择即可。\n\n![选择配置](/img/ssch2.png)\n\n附加选项里**记得选上IPv6**，因为在本文的需求中这是必不可少的。\n\nSSH公钥可以现在添加，也可以以后再添加。之后点创建就可以等着创建完成了。~~DO宣传最少只用55秒就可以创建完成，但是我好像用了几分钟的样子？~~\n\n创建成功后，就会进入到这个VPS的管理界面，从设置中可以看到你的公网地址。同时DO会发送首次登录的密码到你的邮箱中，请注意查收。姑且将这台服务器的地址记作`IP`，然后就可以在DO提供的网页版控制台或本地终端SSH登录了：\n\n\tssh root@remote_host\n\n成功登录后，首先要求更改root密码。如果希望以后本机登录不再输入密码，可以将本地的公钥上传到服务器端：\n\n\tcat ~/.ssh/id_rsa.pub | ssh root@remote_host 'cat >> .ssh/authorized_keys'\n\n如果本地`~/.ssh`目录下没有`id_rsa`这样的文件，可以使用`ssh-keygen`命令在该目录下生成。这样以后每次ssh连接时就不用再输密码了，然后就可以随意折腾了。","source":"_posts/digitalocean.md","raw":"title: Digital Ocean开通VPS\ndate: 2015-11-01 23:33:33\ntags: [VPS, 服务器, 代理, Linux, ssh]\ncategories: [网络, 网站部署]\nphotos:\n\t- /img/dobanner.png\n---\n目前使用体验较好的VPS服务商大概有[Linode](https://www.linode.com/)、[ConoHa](https://www.conoha.jp/en/)、[Digital Ocean](https://www.digitalocean.com/)、[Vultr](https://www.vultr.com/)等等，由于GitHub的[Student Developer Pack](https://education.github.com/pack)有DO家的50美刀优惠，~~但到了三个月后才申请下来，由于注册时已经输过优惠码所以就坑了，~~于是本文使用的是DO的服务。\n\n# 注册DO帐号\n通过[邀请地址](https://www.digitalocean.com/?refcode=bbb0bdba1c4e)注册的新账户将获得10美刀的优惠。\n\n按照步骤填完个人信息后，需要绑定支付方式并往新账户里充5美元来激活DO账户。个人建议先绑定PayPal账户，至于PayPal如果没有信用卡的话，绑定储蓄卡也是可以的，个人亲测学校办的交行卡可用。\n\n激活账户后，如果你有GitHub教育优惠就使用它给的优惠码，如果没有可以搜一个最近的10美元或20美元优惠码，注意这样的优惠码**只能输一次**。\n\n![输入优惠码](/img/sspromo.png)\n\n账户余额基本就有15美元了，这足够使用最便宜的套餐3个月了。\n\n# 新建服务器\n首先要给服务器取一个Hostname，按个人喜好随意命名。\n\n然后选择套餐，我选择的是最便宜的$5套餐，包含**512M的内存、20G的SSD和1000G流量**每个月。\n\n![选择配置](/img/ssch1.png)\n\n数据中心任意选择，考虑到国际光缆的走向，建议选择位于美国西海岸或者亚太地区的，我选择的是旧金山机房。\n\n选择镜像的时候选一个自己熟悉的系统就可以了，也可以选择带一键安装应用的，按需选择即可。\n\n![选择配置](/img/ssch2.png)\n\n附加选项里**记得选上IPv6**，因为在本文的需求中这是必不可少的。\n\nSSH公钥可以现在添加，也可以以后再添加。之后点创建就可以等着创建完成了。~~DO宣传最少只用55秒就可以创建完成，但是我好像用了几分钟的样子？~~\n\n创建成功后，就会进入到这个VPS的管理界面，从设置中可以看到你的公网地址。同时DO会发送首次登录的密码到你的邮箱中，请注意查收。姑且将这台服务器的地址记作`IP`，然后就可以在DO提供的网页版控制台或本地终端SSH登录了：\n\n\tssh root@remote_host\n\n成功登录后，首先要求更改root密码。如果希望以后本机登录不再输入密码，可以将本地的公钥上传到服务器端：\n\n\tcat ~/.ssh/id_rsa.pub | ssh root@remote_host 'cat >> .ssh/authorized_keys'\n\n如果本地`~/.ssh`目录下没有`id_rsa`这样的文件，可以使用`ssh-keygen`命令在该目录下生成。这样以后每次ssh连接时就不用再输密码了，然后就可以随意折腾了。","slug":"digitalocean","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0t6000m8mprwp05xgsp","content":"<p>目前使用体验较好的VPS服务商大概有<a href=\"https://www.linode.com/\" target=\"_blank\" rel=\"external\">Linode</a>、<a href=\"https://www.conoha.jp/en/\" target=\"_blank\" rel=\"external\">ConoHa</a>、<a href=\"https://www.digitalocean.com/\" target=\"_blank\" rel=\"external\">Digital Ocean</a>、<a href=\"https://www.vultr.com/\" target=\"_blank\" rel=\"external\">Vultr</a>等等，由于GitHub的<a href=\"https://education.github.com/pack\" target=\"_blank\" rel=\"external\">Student Developer Pack</a>有DO家的50美刀优惠，<del>但到了三个月后才申请下来，由于注册时已经输过优惠码所以就坑了，</del>于是本文使用的是DO的服务。</p>\n<h1 id=\"注册DO帐号\"><a href=\"#注册DO帐号\" class=\"headerlink\" title=\"注册DO帐号\"></a>注册DO帐号</h1><p>通过<a href=\"https://www.digitalocean.com/?refcode=bbb0bdba1c4e\" target=\"_blank\" rel=\"external\">邀请地址</a>注册的新账户将获得10美刀的优惠。</p>\n<p>按照步骤填完个人信息后，需要绑定支付方式并往新账户里充5美元来激活DO账户。个人建议先绑定PayPal账户，至于PayPal如果没有信用卡的话，绑定储蓄卡也是可以的，个人亲测学校办的交行卡可用。</p>\n<p>激活账户后，如果你有GitHub教育优惠就使用它给的优惠码，如果没有可以搜一个最近的10美元或20美元优惠码，注意这样的优惠码<strong>只能输一次</strong>。</p>\n<p><img src=\"/img/sspromo.png\" alt=\"输入优惠码\"></p>\n<p>账户余额基本就有15美元了，这足够使用最便宜的套餐3个月了。</p>\n<h1 id=\"新建服务器\"><a href=\"#新建服务器\" class=\"headerlink\" title=\"新建服务器\"></a>新建服务器</h1><p>首先要给服务器取一个Hostname，按个人喜好随意命名。</p>\n<p>然后选择套餐，我选择的是最便宜的$5套餐，包含<strong>512M的内存、20G的SSD和1000G流量</strong>每个月。</p>\n<p><img src=\"/img/ssch1.png\" alt=\"选择配置\"></p>\n<p>数据中心任意选择，考虑到国际光缆的走向，建议选择位于美国西海岸或者亚太地区的，我选择的是旧金山机房。</p>\n<p>选择镜像的时候选一个自己熟悉的系统就可以了，也可以选择带一键安装应用的，按需选择即可。</p>\n<p><img src=\"/img/ssch2.png\" alt=\"选择配置\"></p>\n<p>附加选项里<strong>记得选上IPv6</strong>，因为在本文的需求中这是必不可少的。</p>\n<p>SSH公钥可以现在添加，也可以以后再添加。之后点创建就可以等着创建完成了。<del>DO宣传最少只用55秒就可以创建完成，但是我好像用了几分钟的样子？</del></p>\n<p>创建成功后，就会进入到这个VPS的管理界面，从设置中可以看到你的公网地址。同时DO会发送首次登录的密码到你的邮箱中，请注意查收。姑且将这台服务器的地址记作<code>IP</code>，然后就可以在DO提供的网页版控制台或本地终端SSH登录了：</p>\n<pre><code>ssh root@remote_host\n</code></pre><p>成功登录后，首先要求更改root密码。如果希望以后本机登录不再输入密码，可以将本地的公钥上传到服务器端：</p>\n<pre><code>cat ~/.ssh/id_rsa.pub | ssh root@remote_host &apos;cat &gt;&gt; .ssh/authorized_keys&apos;\n</code></pre><p>如果本地<code>~/.ssh</code>目录下没有<code>id_rsa</code>这样的文件，可以使用<code>ssh-keygen</code>命令在该目录下生成。这样以后每次ssh连接时就不用再输密码了，然后就可以随意折腾了。</p>\n","excerpt":"","more":"<p>目前使用体验较好的VPS服务商大概有<a href=\"https://www.linode.com/\">Linode</a>、<a href=\"https://www.conoha.jp/en/\">ConoHa</a>、<a href=\"https://www.digitalocean.com/\">Digital Ocean</a>、<a href=\"https://www.vultr.com/\">Vultr</a>等等，由于GitHub的<a href=\"https://education.github.com/pack\">Student Developer Pack</a>有DO家的50美刀优惠，<del>但到了三个月后才申请下来，由于注册时已经输过优惠码所以就坑了，</del>于是本文使用的是DO的服务。</p>\n<h1 id=\"注册DO帐号\"><a href=\"#注册DO帐号\" class=\"headerlink\" title=\"注册DO帐号\"></a>注册DO帐号</h1><p>通过<a href=\"https://www.digitalocean.com/?refcode=bbb0bdba1c4e\">邀请地址</a>注册的新账户将获得10美刀的优惠。</p>\n<p>按照步骤填完个人信息后，需要绑定支付方式并往新账户里充5美元来激活DO账户。个人建议先绑定PayPal账户，至于PayPal如果没有信用卡的话，绑定储蓄卡也是可以的，个人亲测学校办的交行卡可用。</p>\n<p>激活账户后，如果你有GitHub教育优惠就使用它给的优惠码，如果没有可以搜一个最近的10美元或20美元优惠码，注意这样的优惠码<strong>只能输一次</strong>。</p>\n<p><img src=\"/img/sspromo.png\" alt=\"输入优惠码\"></p>\n<p>账户余额基本就有15美元了，这足够使用最便宜的套餐3个月了。</p>\n<h1 id=\"新建服务器\"><a href=\"#新建服务器\" class=\"headerlink\" title=\"新建服务器\"></a>新建服务器</h1><p>首先要给服务器取一个Hostname，按个人喜好随意命名。</p>\n<p>然后选择套餐，我选择的是最便宜的$5套餐，包含<strong>512M的内存、20G的SSD和1000G流量</strong>每个月。</p>\n<p><img src=\"/img/ssch1.png\" alt=\"选择配置\"></p>\n<p>数据中心任意选择，考虑到国际光缆的走向，建议选择位于美国西海岸或者亚太地区的，我选择的是旧金山机房。</p>\n<p>选择镜像的时候选一个自己熟悉的系统就可以了，也可以选择带一键安装应用的，按需选择即可。</p>\n<p><img src=\"/img/ssch2.png\" alt=\"选择配置\"></p>\n<p>附加选项里<strong>记得选上IPv6</strong>，因为在本文的需求中这是必不可少的。</p>\n<p>SSH公钥可以现在添加，也可以以后再添加。之后点创建就可以等着创建完成了。<del>DO宣传最少只用55秒就可以创建完成，但是我好像用了几分钟的样子？</del></p>\n<p>创建成功后，就会进入到这个VPS的管理界面，从设置中可以看到你的公网地址。同时DO会发送首次登录的密码到你的邮箱中，请注意查收。姑且将这台服务器的地址记作<code>IP</code>，然后就可以在DO提供的网页版控制台或本地终端SSH登录了：</p>\n<pre><code>ssh root@remote_host\n</code></pre><p>成功登录后，首先要求更改root密码。如果希望以后本机登录不再输入密码，可以将本地的公钥上传到服务器端：</p>\n<pre><code>cat ~/.ssh/id_rsa.pub | ssh root@remote_host &apos;cat &gt;&gt; .ssh/authorized_keys&apos;\n</code></pre><p>如果本地<code>~/.ssh</code>目录下没有<code>id_rsa</code>这样的文件，可以使用<code>ssh-keygen</code>命令在该目录下生成。这样以后每次ssh连接时就不用再输密码了，然后就可以随意折腾了。</p>\n"},{"title":"DenyHosts防止ssh暴力登录","date":"2016-08-26T10:18:18.000Z","photos":["/img/dhbanner.png"],"_content":"每次登录服务器都会提示：\n\t\n> There were xxxx failed login attempts since the last successful login.\n\t\n就知道总有闲人在扫IP试密码。再看一下`/var/log/secure`就能知道这些失败登录的详情：\n\n```bash\nAug 26 05:45:58 sgp1 sshd[4999]: Failed password for invalid user test from 128.199.92.158 port 38416 ssh2\n```\n\t\n所以我决定用**DenyHosts**屏蔽这些地址。[DenyHosts](http://denyhosts.sourceforge.net/)是一个可以帮助阻止ssh攻击的脚本，它会分析`/var/log/secure`并记录多次失败登录的IP到`/etc/hosts.deny`中。\n\n# 添加信任IP\n编辑`/etc/hosts.allow`，将自己常用的IP加进去：\n\n```sh\nsshd: 202.113.*.*: allow\n```\n\n比如学校用的天津南开教育网，就把上面的IP段加进去，防止哪天自己手残输错几次密码IP被禁登不进去了。\n\n# 安装配置DenyHosts\n\n\tyum install denyhosts\n\t\n安装完成后编辑`/etc/denyhosts.conf`文件：\n\n```ini\nSECURE_LOG = /var/log/secure\nHOSTS_DENY = /etc/hosts.deny\nPURGE_DENY = 10w #禁止列表清理周期，不填就是永不清理\nBLOCK_SERVICE  = sshd\nDENY_THRESHOLD_INVALID = 5 #非法用户失败登录次数\nDENY_THRESHOLD_VALID = 5 #合法用户失败登录次数（不含root）\nDENY_THRESHOLD_ROOT = 3 #root用户失败登录次数\nDENY_THRESHOLD_RESTRICTED = 3 #限制用户失败登录次数\nWORK_DIR = /var/lib/denyhosts\nETC_DIR = /etc\nSUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS = NO #是否报告来自允许列表的可疑登录\nHOSTNAME_LOOKUP = NO #是否屏蔽被禁止IP对应的域名\nLOCK_FILE = /var/lock/subsys/denyhosts\n```\n\n其中几个数字可以根据自己的需求修改，文件路径一般都不需要修改。另外还可以设置管理员邮箱`ADMIN_EMAIL`，默认是`root@localhost`，会把通知邮件发到`/var/spool/mail`下；也可以加上自己的其他邮箱。\n\n# 启动服务\n\n保存好配置文件后可以启动DenyHosts并加入到开机启动了：\n\n\tsystemctl start denyhosts\n\tsystemctl enable denyhosts\n\t\n然后`tail -f /etc/hosts.deny`看一下禁用列表的动态，如果有：\n\n```sh\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 87.106.142.246\nsshd: 87.106.142.246\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 123.49.62.231\nsshd: 123.49.62.231\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 45.32.20.165\nsshd: 45.32.20.165\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 58.221.60.2\nsshd: 58.221.60.2\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 118.71.224.139\nsshd: 118.71.224.139\n```\n\n这样的内容出现就说明DenyHosts已经把之前记录里的可疑IP写进来了。我也把自己服务器上的[hosts.deny](http://info.shintaku.cc/hosts.deny)放出来供大家（lā）考（hēi）。","source":"_posts/denyhosts.md","raw":"title: DenyHosts防止ssh暴力登录\ndate: 2016-08-26 18:18:18\ntags: [VPS, Linux, ssh, 服务器]\ncategories: [网络, 网站部署]\nphotos:\n\t- /img/dhbanner.png\n---\n每次登录服务器都会提示：\n\t\n> There were xxxx failed login attempts since the last successful login.\n\t\n就知道总有闲人在扫IP试密码。再看一下`/var/log/secure`就能知道这些失败登录的详情：\n\n```bash\nAug 26 05:45:58 sgp1 sshd[4999]: Failed password for invalid user test from 128.199.92.158 port 38416 ssh2\n```\n\t\n所以我决定用**DenyHosts**屏蔽这些地址。[DenyHosts](http://denyhosts.sourceforge.net/)是一个可以帮助阻止ssh攻击的脚本，它会分析`/var/log/secure`并记录多次失败登录的IP到`/etc/hosts.deny`中。\n\n# 添加信任IP\n编辑`/etc/hosts.allow`，将自己常用的IP加进去：\n\n```sh\nsshd: 202.113.*.*: allow\n```\n\n比如学校用的天津南开教育网，就把上面的IP段加进去，防止哪天自己手残输错几次密码IP被禁登不进去了。\n\n# 安装配置DenyHosts\n\n\tyum install denyhosts\n\t\n安装完成后编辑`/etc/denyhosts.conf`文件：\n\n```ini\nSECURE_LOG = /var/log/secure\nHOSTS_DENY = /etc/hosts.deny\nPURGE_DENY = 10w #禁止列表清理周期，不填就是永不清理\nBLOCK_SERVICE  = sshd\nDENY_THRESHOLD_INVALID = 5 #非法用户失败登录次数\nDENY_THRESHOLD_VALID = 5 #合法用户失败登录次数（不含root）\nDENY_THRESHOLD_ROOT = 3 #root用户失败登录次数\nDENY_THRESHOLD_RESTRICTED = 3 #限制用户失败登录次数\nWORK_DIR = /var/lib/denyhosts\nETC_DIR = /etc\nSUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS = NO #是否报告来自允许列表的可疑登录\nHOSTNAME_LOOKUP = NO #是否屏蔽被禁止IP对应的域名\nLOCK_FILE = /var/lock/subsys/denyhosts\n```\n\n其中几个数字可以根据自己的需求修改，文件路径一般都不需要修改。另外还可以设置管理员邮箱`ADMIN_EMAIL`，默认是`root@localhost`，会把通知邮件发到`/var/spool/mail`下；也可以加上自己的其他邮箱。\n\n# 启动服务\n\n保存好配置文件后可以启动DenyHosts并加入到开机启动了：\n\n\tsystemctl start denyhosts\n\tsystemctl enable denyhosts\n\t\n然后`tail -f /etc/hosts.deny`看一下禁用列表的动态，如果有：\n\n```sh\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 87.106.142.246\nsshd: 87.106.142.246\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 123.49.62.231\nsshd: 123.49.62.231\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 45.32.20.165\nsshd: 45.32.20.165\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 58.221.60.2\nsshd: 58.221.60.2\n# DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 118.71.224.139\nsshd: 118.71.224.139\n```\n\n这样的内容出现就说明DenyHosts已经把之前记录里的可疑IP写进来了。我也把自己服务器上的[hosts.deny](http://info.shintaku.cc/hosts.deny)放出来供大家（lā）考（hēi）。","slug":"denyhosts","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0t8000n8mprstl0znz3","content":"<p>每次登录服务器都会提示：</p>\n<blockquote>\n<p>There were xxxx failed login attempts since the last successful login.</p>\n</blockquote>\n<p>就知道总有闲人在扫IP试密码。再看一下<code>/var/log/secure</code>就能知道这些失败登录的详情：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Aug 26 05:45:58 sgp1 sshd[4999]: Failed password <span class=\"keyword\">for</span> invalid user <span class=\"built_in\">test</span> from 128.199.92.158 port 38416 ssh2</div></pre></td></tr></table></figure>\n<p>所以我决定用<strong>DenyHosts</strong>屏蔽这些地址。<a href=\"http://denyhosts.sourceforge.net/\" target=\"_blank\" rel=\"external\">DenyHosts</a>是一个可以帮助阻止ssh攻击的脚本，它会分析<code>/var/log/secure</code>并记录多次失败登录的IP到<code>/etc/hosts.deny</code>中。</p>\n<h1 id=\"添加信任IP\"><a href=\"#添加信任IP\" class=\"headerlink\" title=\"添加信任IP\"></a>添加信任IP</h1><p>编辑<code>/etc/hosts.allow</code>，将自己常用的IP加进去：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sshd: 202.113.*.*: allow</div></pre></td></tr></table></figure>\n<p>比如学校用的天津南开教育网，就把上面的IP段加进去，防止哪天自己手残输错几次密码IP被禁登不进去了。</p>\n<h1 id=\"安装配置DenyHosts\"><a href=\"#安装配置DenyHosts\" class=\"headerlink\" title=\"安装配置DenyHosts\"></a>安装配置DenyHosts</h1><pre><code>yum install denyhosts\n</code></pre><p>安装完成后编辑<code>/etc/denyhosts.conf</code>文件：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">SECURE_LOG</span> = /var/log/secure</div><div class=\"line\"><span class=\"attr\">HOSTS_DENY</span> = /etc/hosts.deny</div><div class=\"line\"><span class=\"attr\">PURGE_DENY</span> = <span class=\"number\">10</span>w #禁止列表清理周期，不填就是永不清理</div><div class=\"line\"><span class=\"attr\">BLOCK_SERVICE</span>  = sshd</div><div class=\"line\"><span class=\"attr\">DENY_THRESHOLD_INVALID</span> = <span class=\"number\">5</span> #非法用户失败登录次数</div><div class=\"line\"><span class=\"attr\">DENY_THRESHOLD_VALID</span> = <span class=\"number\">5</span> #合法用户失败登录次数（不含root）</div><div class=\"line\"><span class=\"attr\">DENY_THRESHOLD_ROOT</span> = <span class=\"number\">3</span> #root用户失败登录次数</div><div class=\"line\"><span class=\"attr\">DENY_THRESHOLD_RESTRICTED</span> = <span class=\"number\">3</span> #限制用户失败登录次数</div><div class=\"line\"><span class=\"attr\">WORK_DIR</span> = /var/lib/denyhosts</div><div class=\"line\"><span class=\"attr\">ETC_DIR</span> = /etc</div><div class=\"line\"><span class=\"attr\">SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS</span> = <span class=\"literal\">NO</span> #是否报告来自允许列表的可疑登录</div><div class=\"line\"><span class=\"attr\">HOSTNAME_LOOKUP</span> = <span class=\"literal\">NO</span> #是否屏蔽被禁止IP对应的域名</div><div class=\"line\"><span class=\"attr\">LOCK_FILE</span> = /var/lock/subsys/denyhosts</div></pre></td></tr></table></figure>\n<p>其中几个数字可以根据自己的需求修改，文件路径一般都不需要修改。另外还可以设置管理员邮箱<code>ADMIN_EMAIL</code>，默认是<code>root@localhost</code>，会把通知邮件发到<code>/var/spool/mail</code>下；也可以加上自己的其他邮箱。</p>\n<h1 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h1><p>保存好配置文件后可以启动DenyHosts并加入到开机启动了：</p>\n<pre><code>systemctl start denyhosts\nsystemctl enable denyhosts\n</code></pre><p>然后<code>tail -f /etc/hosts.deny</code>看一下禁用列表的动态，如果有：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 87.106.142.246</span></div><div class=\"line\">sshd: 87.106.142.246</div><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 123.49.62.231</span></div><div class=\"line\">sshd: 123.49.62.231</div><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 45.32.20.165</span></div><div class=\"line\">sshd: 45.32.20.165</div><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 58.221.60.2</span></div><div class=\"line\">sshd: 58.221.60.2</div><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 118.71.224.139</span></div><div class=\"line\">sshd: 118.71.224.139</div></pre></td></tr></table></figure>\n<p>这样的内容出现就说明DenyHosts已经把之前记录里的可疑IP写进来了。我也把自己服务器上的<a href=\"http://info.shintaku.cc/hosts.deny\" target=\"_blank\" rel=\"external\">hosts.deny</a>放出来供大家（lā）考（hēi）。</p>\n","excerpt":"","more":"<p>每次登录服务器都会提示：</p>\n<blockquote>\n<p>There were xxxx failed login attempts since the last successful login.</p>\n</blockquote>\n<p>就知道总有闲人在扫IP试密码。再看一下<code>/var/log/secure</code>就能知道这些失败登录的详情：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Aug 26 05:45:58 sgp1 sshd[4999]: Failed password <span class=\"keyword\">for</span> invalid user <span class=\"built_in\">test</span> from 128.199.92.158 port 38416 ssh2</div></pre></td></tr></table></figure>\n<p>所以我决定用<strong>DenyHosts</strong>屏蔽这些地址。<a href=\"http://denyhosts.sourceforge.net/\">DenyHosts</a>是一个可以帮助阻止ssh攻击的脚本，它会分析<code>/var/log/secure</code>并记录多次失败登录的IP到<code>/etc/hosts.deny</code>中。</p>\n<h1 id=\"添加信任IP\"><a href=\"#添加信任IP\" class=\"headerlink\" title=\"添加信任IP\"></a>添加信任IP</h1><p>编辑<code>/etc/hosts.allow</code>，将自己常用的IP加进去：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sshd: 202.113.*.*: allow</div></pre></td></tr></table></figure>\n<p>比如学校用的天津南开教育网，就把上面的IP段加进去，防止哪天自己手残输错几次密码IP被禁登不进去了。</p>\n<h1 id=\"安装配置DenyHosts\"><a href=\"#安装配置DenyHosts\" class=\"headerlink\" title=\"安装配置DenyHosts\"></a>安装配置DenyHosts</h1><pre><code>yum install denyhosts\n</code></pre><p>安装完成后编辑<code>/etc/denyhosts.conf</code>文件：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">SECURE_LOG</span> = /var/log/secure</div><div class=\"line\"><span class=\"attr\">HOSTS_DENY</span> = /etc/hosts.deny</div><div class=\"line\"><span class=\"attr\">PURGE_DENY</span> = <span class=\"number\">10</span>w #禁止列表清理周期，不填就是永不清理</div><div class=\"line\"><span class=\"attr\">BLOCK_SERVICE</span>  = sshd</div><div class=\"line\"><span class=\"attr\">DENY_THRESHOLD_INVALID</span> = <span class=\"number\">5</span> #非法用户失败登录次数</div><div class=\"line\"><span class=\"attr\">DENY_THRESHOLD_VALID</span> = <span class=\"number\">5</span> #合法用户失败登录次数（不含root）</div><div class=\"line\"><span class=\"attr\">DENY_THRESHOLD_ROOT</span> = <span class=\"number\">3</span> #root用户失败登录次数</div><div class=\"line\"><span class=\"attr\">DENY_THRESHOLD_RESTRICTED</span> = <span class=\"number\">3</span> #限制用户失败登录次数</div><div class=\"line\"><span class=\"attr\">WORK_DIR</span> = /var/lib/denyhosts</div><div class=\"line\"><span class=\"attr\">ETC_DIR</span> = /etc</div><div class=\"line\"><span class=\"attr\">SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS</span> = <span class=\"literal\">NO</span> #是否报告来自允许列表的可疑登录</div><div class=\"line\"><span class=\"attr\">HOSTNAME_LOOKUP</span> = <span class=\"literal\">NO</span> #是否屏蔽被禁止IP对应的域名</div><div class=\"line\"><span class=\"attr\">LOCK_FILE</span> = /var/lock/subsys/denyhosts</div></pre></td></tr></table></figure>\n<p>其中几个数字可以根据自己的需求修改，文件路径一般都不需要修改。另外还可以设置管理员邮箱<code>ADMIN_EMAIL</code>，默认是<code>root@localhost</code>，会把通知邮件发到<code>/var/spool/mail</code>下；也可以加上自己的其他邮箱。</p>\n<h1 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h1><p>保存好配置文件后可以启动DenyHosts并加入到开机启动了：</p>\n<pre><code>systemctl start denyhosts\nsystemctl enable denyhosts\n</code></pre><p>然后<code>tail -f /etc/hosts.deny</code>看一下禁用列表的动态，如果有：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 87.106.142.246</span></div><div class=\"line\">sshd: 87.106.142.246</div><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 123.49.62.231</span></div><div class=\"line\">sshd: 123.49.62.231</div><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 45.32.20.165</span></div><div class=\"line\">sshd: 45.32.20.165</div><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 58.221.60.2</span></div><div class=\"line\">sshd: 58.221.60.2</div><div class=\"line\"><span class=\"comment\"># DenyHosts: Fri Aug 26 05:41:17 2016 | sshd: 118.71.224.139</span></div><div class=\"line\">sshd: 118.71.224.139</div></pre></td></tr></table></figure>\n<p>这样的内容出现就说明DenyHosts已经把之前记录里的可疑IP写进来了。我也把自己服务器上的<a href=\"http://info.shintaku.cc/hosts.deny\">hosts.deny</a>放出来供大家（lā）考（hēi）。</p>\n"},{"title":"OpenWrt上的ssh免密登录","date":"2016-06-18T10:18:18.000Z","photos":["/img/dbbanner.png"],"_content":"\n一般在用OpenSSH服务器的系统上进行ssh登录时，我们只需要在本地生成密钥（yuè）对，将私钥（yuè）留在本地，将公钥（yuè）上传到目标服务器上就可以了，具体如下：\n\n\tssh-keygen\n\tcat ~/.ssh/id_rsa.pub | ssh remote_username@remote_host 'cat >> .ssh/authorized_keys'\n\t\n然而OpenWrt上的ssh服务器却用的[Dropbear](https://matt.ucc.asn.au/dropbear/dropbear.html)，它是一种在较低内存和处理器资源的嵌入式系统中替代OpenSSH的软件，因此使用起来用诸多的不同。\n\n# 免密登录到OpenWrt\n如果本地是用`ssh-keygen`生成的密钥对，那么只需要将公钥上传到路由器的`/etc/dropbear/authorized_keys`中就行了：\n\n\tcat ~/.ssh/id_rsa.pub | ssh root@192.168.1.1 'cat >> /etc/dropbear/authorized_keys'\n\n# 从OpenWrt登录到其他机器\n首先登入到OpenWrt。但想从OpenWrt免密登录其他机器，也要先生成密钥对并将公钥上传。由于无法使用`ssh-keygen`，我们可以直接用`dropbearkey`生成：\n\n> dropbearkey -t rsa -f ~/.ssh/id_rsa\n> Generating key, this may take a while...\n> Public key portion is:\n> ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn02fMyD2T1ECmDZso8EG1m/4eo5LJtNlbqCMu0SkABsOUvmTHozrPzoJ10SlcAhjnc84S//VGEAbNJxUTaYn0M7f7M8Q4NBSyPF9DMcNAWKM01OSll8BWLQafZeZneW+UOwO6h1LOd6UEaLS8lhKQUD05+dSzKhPHimZudlhkV2bO7KOkiFh3P4K1GakHBuXitB1V9QH144BKKlSqNXy7TZcJf5/oRkB76ZmdSDDMQtvfCHF1BZwggStgBsu9K6nAl8lz9MOVHCYs9AkEIurldrHLUKvoGJ4QA5yc3bEMQaMH7vu3G5YMysIY4w5+aVuZh5Wg4THoh6yXPfGUc7Mh root@OpenWrt\n> Fingerprint: md5 2d:8f:e9:e7:31:75:f0:f4:ba:b8:54:4c:2f:43:9b:33\n\t\n这样就将私钥生成到`~/.ssh/id_rsa`了，并将公钥打印到了屏幕上。建议将公钥也保存下来，以便以后使用：\n\n\techo \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn02fMyD2T1ECmDZso8EG1m/4eo5LJtNlbqCMu0SkABsOUvmTHozrPzoJ10SlcAhjnc84S//VGEAbNJxUTaYn0M7f7M8Q4NBSyPF9DMcNAWKM01OSll8BWLQafZeZneW+UOwO6h1LOd6UEaLS8lhKQUD05+dSzKhPHimZudlhkV2bO7KOkiFh3P4K1GakHBuXitB1V9QH144BKKlSqNXy7TZcJf5/oRkB76ZmdSDDMQtvfCHF1BZwggStgBsu9K6nAl8lz9MOVHCYs9AkEIurldrHLUKvoGJ4QA5yc3bEMQaMH7vu3G5YMysIY4w5+aVuZh5Wg4THoh6yXPfGUc7Mh root@OpenWrt\" > ~/.ssh/id_rsa.pub\n\t\n然后就和原来一样，将公钥上传到目标服务器就可以了：\n\n\tcat ~/.ssh/id_rsa.pub | ssh remote_username@remote_host 'cat >> .ssh/authorized_keys'\n\t\n但是在登录的时候要注意，使用`ssh`命令需要加`-i`参数指定所用的私钥：\n\t\n\tssh -i ~/.ssh/id_rsa remote_username@remote_host\n\t\n记得使用`scp`等类似命令也要这样。","source":"_posts/dropbear.md","raw":"title: OpenWrt上的ssh免密登录\ndate: 2016-06-18 18:18:18\ntags: [OpenWrt, ssh, Linux, 路由器]\ncategories: [奇技淫巧, ＊nix]\nphotos: \n\t- /img/dbbanner.png\n---\n\n一般在用OpenSSH服务器的系统上进行ssh登录时，我们只需要在本地生成密钥（yuè）对，将私钥（yuè）留在本地，将公钥（yuè）上传到目标服务器上就可以了，具体如下：\n\n\tssh-keygen\n\tcat ~/.ssh/id_rsa.pub | ssh remote_username@remote_host 'cat >> .ssh/authorized_keys'\n\t\n然而OpenWrt上的ssh服务器却用的[Dropbear](https://matt.ucc.asn.au/dropbear/dropbear.html)，它是一种在较低内存和处理器资源的嵌入式系统中替代OpenSSH的软件，因此使用起来用诸多的不同。\n\n# 免密登录到OpenWrt\n如果本地是用`ssh-keygen`生成的密钥对，那么只需要将公钥上传到路由器的`/etc/dropbear/authorized_keys`中就行了：\n\n\tcat ~/.ssh/id_rsa.pub | ssh root@192.168.1.1 'cat >> /etc/dropbear/authorized_keys'\n\n# 从OpenWrt登录到其他机器\n首先登入到OpenWrt。但想从OpenWrt免密登录其他机器，也要先生成密钥对并将公钥上传。由于无法使用`ssh-keygen`，我们可以直接用`dropbearkey`生成：\n\n> dropbearkey -t rsa -f ~/.ssh/id_rsa\n> Generating key, this may take a while...\n> Public key portion is:\n> ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn02fMyD2T1ECmDZso8EG1m/4eo5LJtNlbqCMu0SkABsOUvmTHozrPzoJ10SlcAhjnc84S//VGEAbNJxUTaYn0M7f7M8Q4NBSyPF9DMcNAWKM01OSll8BWLQafZeZneW+UOwO6h1LOd6UEaLS8lhKQUD05+dSzKhPHimZudlhkV2bO7KOkiFh3P4K1GakHBuXitB1V9QH144BKKlSqNXy7TZcJf5/oRkB76ZmdSDDMQtvfCHF1BZwggStgBsu9K6nAl8lz9MOVHCYs9AkEIurldrHLUKvoGJ4QA5yc3bEMQaMH7vu3G5YMysIY4w5+aVuZh5Wg4THoh6yXPfGUc7Mh root@OpenWrt\n> Fingerprint: md5 2d:8f:e9:e7:31:75:f0:f4:ba:b8:54:4c:2f:43:9b:33\n\t\n这样就将私钥生成到`~/.ssh/id_rsa`了，并将公钥打印到了屏幕上。建议将公钥也保存下来，以便以后使用：\n\n\techo \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn02fMyD2T1ECmDZso8EG1m/4eo5LJtNlbqCMu0SkABsOUvmTHozrPzoJ10SlcAhjnc84S//VGEAbNJxUTaYn0M7f7M8Q4NBSyPF9DMcNAWKM01OSll8BWLQafZeZneW+UOwO6h1LOd6UEaLS8lhKQUD05+dSzKhPHimZudlhkV2bO7KOkiFh3P4K1GakHBuXitB1V9QH144BKKlSqNXy7TZcJf5/oRkB76ZmdSDDMQtvfCHF1BZwggStgBsu9K6nAl8lz9MOVHCYs9AkEIurldrHLUKvoGJ4QA5yc3bEMQaMH7vu3G5YMysIY4w5+aVuZh5Wg4THoh6yXPfGUc7Mh root@OpenWrt\" > ~/.ssh/id_rsa.pub\n\t\n然后就和原来一样，将公钥上传到目标服务器就可以了：\n\n\tcat ~/.ssh/id_rsa.pub | ssh remote_username@remote_host 'cat >> .ssh/authorized_keys'\n\t\n但是在登录的时候要注意，使用`ssh`命令需要加`-i`参数指定所用的私钥：\n\t\n\tssh -i ~/.ssh/id_rsa remote_username@remote_host\n\t\n记得使用`scp`等类似命令也要这样。","slug":"dropbear","published":1,"updated":"2017-02-17T06:21:11.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0ta000q8mprx8ksu9s0","content":"<p>一般在用OpenSSH服务器的系统上进行ssh登录时，我们只需要在本地生成密钥（yuè）对，将私钥（yuè）留在本地，将公钥（yuè）上传到目标服务器上就可以了，具体如下：</p>\n<pre><code>ssh-keygen\ncat ~/.ssh/id_rsa.pub | ssh remote_username@remote_host &apos;cat &gt;&gt; .ssh/authorized_keys&apos;\n</code></pre><p>然而OpenWrt上的ssh服务器却用的<a href=\"https://matt.ucc.asn.au/dropbear/dropbear.html\" target=\"_blank\" rel=\"external\">Dropbear</a>，它是一种在较低内存和处理器资源的嵌入式系统中替代OpenSSH的软件，因此使用起来用诸多的不同。</p>\n<h1 id=\"免密登录到OpenWrt\"><a href=\"#免密登录到OpenWrt\" class=\"headerlink\" title=\"免密登录到OpenWrt\"></a>免密登录到OpenWrt</h1><p>如果本地是用<code>ssh-keygen</code>生成的密钥对，那么只需要将公钥上传到路由器的<code>/etc/dropbear/authorized_keys</code>中就行了：</p>\n<pre><code>cat ~/.ssh/id_rsa.pub | ssh root@192.168.1.1 &apos;cat &gt;&gt; /etc/dropbear/authorized_keys&apos;\n</code></pre><h1 id=\"从OpenWrt登录到其他机器\"><a href=\"#从OpenWrt登录到其他机器\" class=\"headerlink\" title=\"从OpenWrt登录到其他机器\"></a>从OpenWrt登录到其他机器</h1><p>首先登入到OpenWrt。但想从OpenWrt免密登录其他机器，也要先生成密钥对并将公钥上传。由于无法使用<code>ssh-keygen</code>，我们可以直接用<code>dropbearkey</code>生成：</p>\n<blockquote>\n<p>dropbearkey -t rsa -f ~/.ssh/id_rsa<br>Generating key, this may take a while…<br>Public key portion is:<br>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn02fMyD2T1ECmDZso8EG1m/4eo5LJtNlbqCMu0SkABsOUvmTHozrPzoJ10SlcAhjnc84S//VGEAbNJxUTaYn0M7f7M8Q4NBSyPF9DMcNAWKM01OSll8BWLQafZeZneW+UOwO6h1LOd6UEaLS8lhKQUD05+dSzKhPHimZudlhkV2bO7KOkiFh3P4K1GakHBuXitB1V9QH144BKKlSqNXy7TZcJf5/oRkB76ZmdSDDMQtvfCHF1BZwggStgBsu9K6nAl8lz9MOVHCYs9AkEIurldrHLUKvoGJ4QA5yc3bEMQaMH7vu3G5YMysIY4w5+aVuZh5Wg4THoh6yXPfGUc7Mh root@OpenWrt<br>Fingerprint: md5 2d:8f:e9:e7:31:75:f0:f4:ba:b8:54:4c:2f:43:9b:33</p>\n</blockquote>\n<p>这样就将私钥生成到<code>~/.ssh/id_rsa</code>了，并将公钥打印到了屏幕上。建议将公钥也保存下来，以便以后使用：</p>\n<pre><code>echo &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn02fMyD2T1ECmDZso8EG1m/4eo5LJtNlbqCMu0SkABsOUvmTHozrPzoJ10SlcAhjnc84S//VGEAbNJxUTaYn0M7f7M8Q4NBSyPF9DMcNAWKM01OSll8BWLQafZeZneW+UOwO6h1LOd6UEaLS8lhKQUD05+dSzKhPHimZudlhkV2bO7KOkiFh3P4K1GakHBuXitB1V9QH144BKKlSqNXy7TZcJf5/oRkB76ZmdSDDMQtvfCHF1BZwggStgBsu9K6nAl8lz9MOVHCYs9AkEIurldrHLUKvoGJ4QA5yc3bEMQaMH7vu3G5YMysIY4w5+aVuZh5Wg4THoh6yXPfGUc7Mh root@OpenWrt&quot; &gt; ~/.ssh/id_rsa.pub\n</code></pre><p>然后就和原来一样，将公钥上传到目标服务器就可以了：</p>\n<pre><code>cat ~/.ssh/id_rsa.pub | ssh remote_username@remote_host &apos;cat &gt;&gt; .ssh/authorized_keys&apos;\n</code></pre><p>但是在登录的时候要注意，使用<code>ssh</code>命令需要加<code>-i</code>参数指定所用的私钥：</p>\n<pre><code>ssh -i ~/.ssh/id_rsa remote_username@remote_host\n</code></pre><p>记得使用<code>scp</code>等类似命令也要这样。</p>\n","excerpt":"","more":"<p>一般在用OpenSSH服务器的系统上进行ssh登录时，我们只需要在本地生成密钥（yuè）对，将私钥（yuè）留在本地，将公钥（yuè）上传到目标服务器上就可以了，具体如下：</p>\n<pre><code>ssh-keygen\ncat ~/.ssh/id_rsa.pub | ssh remote_username@remote_host &apos;cat &gt;&gt; .ssh/authorized_keys&apos;\n</code></pre><p>然而OpenWrt上的ssh服务器却用的<a href=\"https://matt.ucc.asn.au/dropbear/dropbear.html\">Dropbear</a>，它是一种在较低内存和处理器资源的嵌入式系统中替代OpenSSH的软件，因此使用起来用诸多的不同。</p>\n<h1 id=\"免密登录到OpenWrt\"><a href=\"#免密登录到OpenWrt\" class=\"headerlink\" title=\"免密登录到OpenWrt\"></a>免密登录到OpenWrt</h1><p>如果本地是用<code>ssh-keygen</code>生成的密钥对，那么只需要将公钥上传到路由器的<code>/etc/dropbear/authorized_keys</code>中就行了：</p>\n<pre><code>cat ~/.ssh/id_rsa.pub | ssh root@192.168.1.1 &apos;cat &gt;&gt; /etc/dropbear/authorized_keys&apos;\n</code></pre><h1 id=\"从OpenWrt登录到其他机器\"><a href=\"#从OpenWrt登录到其他机器\" class=\"headerlink\" title=\"从OpenWrt登录到其他机器\"></a>从OpenWrt登录到其他机器</h1><p>首先登入到OpenWrt。但想从OpenWrt免密登录其他机器，也要先生成密钥对并将公钥上传。由于无法使用<code>ssh-keygen</code>，我们可以直接用<code>dropbearkey</code>生成：</p>\n<blockquote>\n<p>dropbearkey -t rsa -f ~/.ssh/id_rsa<br>Generating key, this may take a while…<br>Public key portion is:<br>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn02fMyD2T1ECmDZso8EG1m/4eo5LJtNlbqCMu0SkABsOUvmTHozrPzoJ10SlcAhjnc84S//VGEAbNJxUTaYn0M7f7M8Q4NBSyPF9DMcNAWKM01OSll8BWLQafZeZneW+UOwO6h1LOd6UEaLS8lhKQUD05+dSzKhPHimZudlhkV2bO7KOkiFh3P4K1GakHBuXitB1V9QH144BKKlSqNXy7TZcJf5/oRkB76ZmdSDDMQtvfCHF1BZwggStgBsu9K6nAl8lz9MOVHCYs9AkEIurldrHLUKvoGJ4QA5yc3bEMQaMH7vu3G5YMysIY4w5+aVuZh5Wg4THoh6yXPfGUc7Mh root@OpenWrt<br>Fingerprint: md5 2d:8f:e9:e7:31:75:f0:f4:ba:b8:54:4c:2f:43:9b:33</p>\n</blockquote>\n<p>这样就将私钥生成到<code>~/.ssh/id_rsa</code>了，并将公钥打印到了屏幕上。建议将公钥也保存下来，以便以后使用：</p>\n<pre><code>echo &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCn02fMyD2T1ECmDZso8EG1m/4eo5LJtNlbqCMu0SkABsOUvmTHozrPzoJ10SlcAhjnc84S//VGEAbNJxUTaYn0M7f7M8Q4NBSyPF9DMcNAWKM01OSll8BWLQafZeZneW+UOwO6h1LOd6UEaLS8lhKQUD05+dSzKhPHimZudlhkV2bO7KOkiFh3P4K1GakHBuXitB1V9QH144BKKlSqNXy7TZcJf5/oRkB76ZmdSDDMQtvfCHF1BZwggStgBsu9K6nAl8lz9MOVHCYs9AkEIurldrHLUKvoGJ4QA5yc3bEMQaMH7vu3G5YMysIY4w5+aVuZh5Wg4THoh6yXPfGUc7Mh root@OpenWrt&quot; &gt; ~/.ssh/id_rsa.pub\n</code></pre><p>然后就和原来一样，将公钥上传到目标服务器就可以了：</p>\n<pre><code>cat ~/.ssh/id_rsa.pub | ssh remote_username@remote_host &apos;cat &gt;&gt; .ssh/authorized_keys&apos;\n</code></pre><p>但是在登录的时候要注意，使用<code>ssh</code>命令需要加<code>-i</code>参数指定所用的私钥：</p>\n<pre><code>ssh -i ~/.ssh/id_rsa remote_username@remote_host\n</code></pre><p>记得使用<code>scp</code>等类似命令也要这样。</p>\n"},{"title":"GoAgent科学上网攻略","date":"2015-01-08T15:33:33.000Z","photos":["/img/gabanner.png"],"_content":"***目前该项目已停止维护，并被开发者删除。有兴趣的童鞋请参考我fork下来的[3.2.3版本](https://github.com/liangzhenduo0608/goagent)。***\n\n> 翻出长城，我有思想准备。是要触及一些人的利益，是会触及一些人的利益，是会有不同的观点和看法的，而且，已经形成防火长城的这些机构社会联系蛮广泛的，是有舆论能力的。我们敢于翻墙，也就是说呀，像古人讲的，**“敢同恶鬼争高下，不向霸王让寸分”**，就是要有这种精神。在此呢，你比如说，也有不少人给Google泼脏水，包括给Twitter、给Facebook泼脏水。甚至，说到一〇四师从广场上路过，怎么开59式坦克，一派胡言！我感到非常气愤，啊，一派胡言。\n\n> 嗯，方滨兴，啊，本来是，这个工程院，这个很早以前就认可的院士，在北邮期间，当时当校长就当得很成功。清华著名教授唐泽圣，啊，那是他的老师，啊，对他非常欣赏。结果，有的这些头衔，就是怕说，担心会不会有人给人家造谣，说他通过当校长还想出点名，把他的几个职位一朝就全辞掉了，啊那是前年的事儿了，就全不干了。现在就几乎啊，嗯，在工程院，就是与病魔做一做斗争，啊，我对他做出的这种牺牲我都很感动的，啊。\n\n具体GoAgent怎么用呢，请参照以下步骤：\n\n# 创建GAE应用\n## 登录GAE\nGoAgent是使用跨平台语言Python开发、基于GPL自由软件协议的代理软件。它利用`Google App Engine (GAE)`的服务器充当代理。因此要使用GoAgent就需要一个Google帐户，前往[GAE](http://appengine.google.com)登录（有Google账号或者关联Google的账号直接登录即可，比如我的Google帐号就是hotmail的邮箱，深藏功与名）。\n\n其实这一步就是需要翻墙的，有些人到这一步就因为无法翻墙登陆不了GAE，从而无法使用GoAgent，陷入了死循环。\n\n## 创建应用\n成功登录后就可以点击上图中的`Create Application`创建新应用。每个账户可以创建至多25个应用（现在网上说10个的都是几年前的版本了）。\n\n首次创建还要验证一下手机号，格式为`+86XXXXXXXXXXX`，不久会收到一条验证短信，把验证码填进去就可以激活GAE账号了。\n\n接下来就可以创建应用了，填入二级域名的Appid和应用名称。Appid要求为6～30个字符，可以包含小写字母、数字和`-`，必须以字母开头，不得以`-`结尾。`[your_appid].appspot.com`就是你的应用地址了。Appid一定要牢牢记住。\n\n![创建新应用](/img/gacreate.png)\n\n每一个应用提供1GB的流量，月流量是60GB（传出带宽是1GB/天，传入带宽1GB/天），虽然有如此的限制，但只是上网页用起来毫无压力，从来没有用超过呢。如果觉得一个应用的每天1G不够用，可以多创建几个。\n\n# 本地配置\n## 下载GoAgent客户端\nGoAgent的项目主页已经从[Google Code](https://code.google.com/p/goagent/)转移到[GitHub](https://github.com/goagent/goagent)了，但是GitHub上的项目也被移除了，所以还想尝试的童鞋请到我fork的分支上下载[GoAgent 3.2.3](https://github.com/liangzhenduo0608/goagent)。\n\n![GitHub上的GoAgent项目](/img/gagithub.png)\n\n可以把这个项目clone到本地：\n\t\n\tgit clone https://github.com/liangzhenduo0608/goagent\n\n或者Download ZIP并解压出来。\n\n## 上传Python服务\n进到server目录下，Windows用户以管理员身份运行`uploader.bat`，Mac/Linux用户用Python运行`uploader.py`，按照提示依次填入Appid、Email地址和口令（如果app创建时开启了两步验证，口令需要填入两步验证设置的密码，但现在创建的app基本上都跳过设置两步验证了，所以填邮Google帐户密码就行了）。上传成功会出现如下界面：\n\n\t警告：建议先启动 goagent 客户端或者 VPN 然后再上传，如果您的 VPN 已经打开的话，请按回车键继续。\n\t\n\t===============================================================\n\t GoAgent服务端部署程序, 开始上传 gae 应用文件夹\n\t Linux/Mac 用户, 请使用 python uploader.py 来上传应用\n\t===============================================================\n\n\t请输入您的appid, 多个appid请用|号隔开\n\t注意：appid 请勿包含 ios/android/mobile 等字样，否则可能被某些网站识别成移动设备。\n\tAPPID: your_appid\n\tApplication: your_appid\n\tHost: appengine.google.com\n\tRolling back the update.\n\tEmail: your_google_account\n\tPassword for your_google_account: \n\tApplication: your_appid; version: 1\n\tHost: appengine.google.com\n\t\n\tStarting update of app: your_appid, version 1\n\tScanning files on local disk.\n\tCloning 1 static file.\n\tCloning 3 application files.\n\tCompilation starting.\n\tCompilation completed.\n\tStarting deployment.\n\tChecking if deployment succeeded.\n\tDeployment successful.\n\tChecking if updated app verion is serving.\n\tCompleted update of app: your_appid, version 1\n\t\n\t上传成功，请不要忘记编辑proxy.ini把你的appid填进去，谢谢。按回车键退出程序。\n\n验证是否成功也可以打开`https://[your_appid].appspot.com/_gh/ `查看状态，像下面一样就说明成功了：\n\n> GoAgent Python Server 3.2.0 works, deployed at 2015-01-08 23:33:33\n\n这里请注意一下，如果你用的是老版本的goagent比如2.x.x的域名后缀应为`*.appspot.com/2`，而新版本的3.x.x的域名后缀应为`*.appspot.com/_gh/`，因此之前用老版本而现在更新到新版本的用户需要重新上传。\n\n## 配置proxy.ini\n这一步做的就是上一步终端中最后一行说的，修改`/local/proxy.ini`中`gae`下的`appid`和`password`并保存：\n\n```ini\n[gae]\nenable = 1\nappid = your_appid\npassword = your_password\npath = /_gh/\nmode = https\nipv6 = 0\nsslversion = TLSv1\nwindow = 7\ncachesock = 1\nheadfirst = 1\nkeepalive = 0\nobfuscate = 0\nvalidate = 0\ntransport = 0\noptions =\nregions =\n```\n# 启动服务\n## 运行GoAgent\n如果以上步骤都正确的话，Windows以管理员身份运行local下的goagent.exe了，Mac/Linux用户用Python运行proxy.py，应该会出现如下界面：\n\n\t------------------------------------------------------\n\tGoAgent Version    : 3.2.3 (python/2.7.1 gevent/1.0 pyopenssl/0.13.1)\n\tListen Address     : 127.0.0.1:8087\n\tGAE Mode           : https (TLSv1)\n\tGAE APPID          : your_appid\n\tPac Server         : http://192.168.1.101:8086/proxy.pac\n\tPac File           : file:///goagent-3.0/local/proxy.pac\n\t------------------------------------------------------ \n\n如果没有出现其他警告或错误，就说明配置成功了。\n\n## 安装Chrome插件\t\nGoAgent可以设置全局代理，也可以设置浏览器代理。因此下面提供的是使用Chrome浏览器插件代理的方法。\n\n从Chrome浏览器打开[Proxy SwitchyOmega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=cn-ZH)并添加到浏览器。如果被墙了就到[GitHub](https://github.com/FelisCatus/SwitchyOmega/releases)下载`crx`文件手动添加。在其配置界面`Import/Export`里把`/local/SwitchyOptions.bak`导入进去：\n\n![导入配置](/img/gaimport.png)\n\n可以从浏览器右上角小圈圈插件那切换各种模式：\n\n+ Direct是不通过代理直接连接\n+ GoAgent是完全通过代理访问\n+ Auto Switch是自动切换，根据设置判定哪些网站通过代理，哪些网站不通过代理。\n\n个人比较倾向使用自动切换模式，也比较省流量，也防止有些内地的网站因为代理而打不开。也可以在`Switch rules`里添加需要自动代理的网站。\n\n## 导入证书\n打开chrome设置-管理证书-受信任的根证书颁发机构，将`/local/CA.crt`导入到进去：\n\n![导入证书](/img/gacert.png)\n \n至此，以后每次需要代理的时候只要运行`goagent.exe`或`proxy.py`就行了，此时你就可以通过Google公司加州山景城的服务器畅游墙外的世界了。\n\n> 这个大家啊，如果，对翻墙有什么想法，有什么看法，尽可以提。我觉得，我相信，广大记者朋友，是客观的。这个也欢迎大家，有机会，到墙外去，墙外人非常热心，而且这些年的这个发展，这个大家团结一致、同心同德，已经取得了很大的进步。我相信，我们这些这个记者朋友们，你们对今天翻墙，放出干货的报道，会是客观的，准确的。好，谢谢大家。","source":"_posts/goagent.md","raw":"title: GoAgent科学上网攻略\ndate: 2015-01-08 23:33:33\ntags: [GoAgent, 科学上网, 代理]\ncategories: [网络, 科学上网]\nphotos:\n\t- /img/gabanner.png\n---\n***目前该项目已停止维护，并被开发者删除。有兴趣的童鞋请参考我fork下来的[3.2.3版本](https://github.com/liangzhenduo0608/goagent)。***\n\n> 翻出长城，我有思想准备。是要触及一些人的利益，是会触及一些人的利益，是会有不同的观点和看法的，而且，已经形成防火长城的这些机构社会联系蛮广泛的，是有舆论能力的。我们敢于翻墙，也就是说呀，像古人讲的，**“敢同恶鬼争高下，不向霸王让寸分”**，就是要有这种精神。在此呢，你比如说，也有不少人给Google泼脏水，包括给Twitter、给Facebook泼脏水。甚至，说到一〇四师从广场上路过，怎么开59式坦克，一派胡言！我感到非常气愤，啊，一派胡言。\n\n> 嗯，方滨兴，啊，本来是，这个工程院，这个很早以前就认可的院士，在北邮期间，当时当校长就当得很成功。清华著名教授唐泽圣，啊，那是他的老师，啊，对他非常欣赏。结果，有的这些头衔，就是怕说，担心会不会有人给人家造谣，说他通过当校长还想出点名，把他的几个职位一朝就全辞掉了，啊那是前年的事儿了，就全不干了。现在就几乎啊，嗯，在工程院，就是与病魔做一做斗争，啊，我对他做出的这种牺牲我都很感动的，啊。\n\n具体GoAgent怎么用呢，请参照以下步骤：\n\n# 创建GAE应用\n## 登录GAE\nGoAgent是使用跨平台语言Python开发、基于GPL自由软件协议的代理软件。它利用`Google App Engine (GAE)`的服务器充当代理。因此要使用GoAgent就需要一个Google帐户，前往[GAE](http://appengine.google.com)登录（有Google账号或者关联Google的账号直接登录即可，比如我的Google帐号就是hotmail的邮箱，深藏功与名）。\n\n其实这一步就是需要翻墙的，有些人到这一步就因为无法翻墙登陆不了GAE，从而无法使用GoAgent，陷入了死循环。\n\n## 创建应用\n成功登录后就可以点击上图中的`Create Application`创建新应用。每个账户可以创建至多25个应用（现在网上说10个的都是几年前的版本了）。\n\n首次创建还要验证一下手机号，格式为`+86XXXXXXXXXXX`，不久会收到一条验证短信，把验证码填进去就可以激活GAE账号了。\n\n接下来就可以创建应用了，填入二级域名的Appid和应用名称。Appid要求为6～30个字符，可以包含小写字母、数字和`-`，必须以字母开头，不得以`-`结尾。`[your_appid].appspot.com`就是你的应用地址了。Appid一定要牢牢记住。\n\n![创建新应用](/img/gacreate.png)\n\n每一个应用提供1GB的流量，月流量是60GB（传出带宽是1GB/天，传入带宽1GB/天），虽然有如此的限制，但只是上网页用起来毫无压力，从来没有用超过呢。如果觉得一个应用的每天1G不够用，可以多创建几个。\n\n# 本地配置\n## 下载GoAgent客户端\nGoAgent的项目主页已经从[Google Code](https://code.google.com/p/goagent/)转移到[GitHub](https://github.com/goagent/goagent)了，但是GitHub上的项目也被移除了，所以还想尝试的童鞋请到我fork的分支上下载[GoAgent 3.2.3](https://github.com/liangzhenduo0608/goagent)。\n\n![GitHub上的GoAgent项目](/img/gagithub.png)\n\n可以把这个项目clone到本地：\n\t\n\tgit clone https://github.com/liangzhenduo0608/goagent\n\n或者Download ZIP并解压出来。\n\n## 上传Python服务\n进到server目录下，Windows用户以管理员身份运行`uploader.bat`，Mac/Linux用户用Python运行`uploader.py`，按照提示依次填入Appid、Email地址和口令（如果app创建时开启了两步验证，口令需要填入两步验证设置的密码，但现在创建的app基本上都跳过设置两步验证了，所以填邮Google帐户密码就行了）。上传成功会出现如下界面：\n\n\t警告：建议先启动 goagent 客户端或者 VPN 然后再上传，如果您的 VPN 已经打开的话，请按回车键继续。\n\t\n\t===============================================================\n\t GoAgent服务端部署程序, 开始上传 gae 应用文件夹\n\t Linux/Mac 用户, 请使用 python uploader.py 来上传应用\n\t===============================================================\n\n\t请输入您的appid, 多个appid请用|号隔开\n\t注意：appid 请勿包含 ios/android/mobile 等字样，否则可能被某些网站识别成移动设备。\n\tAPPID: your_appid\n\tApplication: your_appid\n\tHost: appengine.google.com\n\tRolling back the update.\n\tEmail: your_google_account\n\tPassword for your_google_account: \n\tApplication: your_appid; version: 1\n\tHost: appengine.google.com\n\t\n\tStarting update of app: your_appid, version 1\n\tScanning files on local disk.\n\tCloning 1 static file.\n\tCloning 3 application files.\n\tCompilation starting.\n\tCompilation completed.\n\tStarting deployment.\n\tChecking if deployment succeeded.\n\tDeployment successful.\n\tChecking if updated app verion is serving.\n\tCompleted update of app: your_appid, version 1\n\t\n\t上传成功，请不要忘记编辑proxy.ini把你的appid填进去，谢谢。按回车键退出程序。\n\n验证是否成功也可以打开`https://[your_appid].appspot.com/_gh/ `查看状态，像下面一样就说明成功了：\n\n> GoAgent Python Server 3.2.0 works, deployed at 2015-01-08 23:33:33\n\n这里请注意一下，如果你用的是老版本的goagent比如2.x.x的域名后缀应为`*.appspot.com/2`，而新版本的3.x.x的域名后缀应为`*.appspot.com/_gh/`，因此之前用老版本而现在更新到新版本的用户需要重新上传。\n\n## 配置proxy.ini\n这一步做的就是上一步终端中最后一行说的，修改`/local/proxy.ini`中`gae`下的`appid`和`password`并保存：\n\n```ini\n[gae]\nenable = 1\nappid = your_appid\npassword = your_password\npath = /_gh/\nmode = https\nipv6 = 0\nsslversion = TLSv1\nwindow = 7\ncachesock = 1\nheadfirst = 1\nkeepalive = 0\nobfuscate = 0\nvalidate = 0\ntransport = 0\noptions =\nregions =\n```\n# 启动服务\n## 运行GoAgent\n如果以上步骤都正确的话，Windows以管理员身份运行local下的goagent.exe了，Mac/Linux用户用Python运行proxy.py，应该会出现如下界面：\n\n\t------------------------------------------------------\n\tGoAgent Version    : 3.2.3 (python/2.7.1 gevent/1.0 pyopenssl/0.13.1)\n\tListen Address     : 127.0.0.1:8087\n\tGAE Mode           : https (TLSv1)\n\tGAE APPID          : your_appid\n\tPac Server         : http://192.168.1.101:8086/proxy.pac\n\tPac File           : file:///goagent-3.0/local/proxy.pac\n\t------------------------------------------------------ \n\n如果没有出现其他警告或错误，就说明配置成功了。\n\n## 安装Chrome插件\t\nGoAgent可以设置全局代理，也可以设置浏览器代理。因此下面提供的是使用Chrome浏览器插件代理的方法。\n\n从Chrome浏览器打开[Proxy SwitchyOmega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=cn-ZH)并添加到浏览器。如果被墙了就到[GitHub](https://github.com/FelisCatus/SwitchyOmega/releases)下载`crx`文件手动添加。在其配置界面`Import/Export`里把`/local/SwitchyOptions.bak`导入进去：\n\n![导入配置](/img/gaimport.png)\n\n可以从浏览器右上角小圈圈插件那切换各种模式：\n\n+ Direct是不通过代理直接连接\n+ GoAgent是完全通过代理访问\n+ Auto Switch是自动切换，根据设置判定哪些网站通过代理，哪些网站不通过代理。\n\n个人比较倾向使用自动切换模式，也比较省流量，也防止有些内地的网站因为代理而打不开。也可以在`Switch rules`里添加需要自动代理的网站。\n\n## 导入证书\n打开chrome设置-管理证书-受信任的根证书颁发机构，将`/local/CA.crt`导入到进去：\n\n![导入证书](/img/gacert.png)\n \n至此，以后每次需要代理的时候只要运行`goagent.exe`或`proxy.py`就行了，此时你就可以通过Google公司加州山景城的服务器畅游墙外的世界了。\n\n> 这个大家啊，如果，对翻墙有什么想法，有什么看法，尽可以提。我觉得，我相信，广大记者朋友，是客观的。这个也欢迎大家，有机会，到墙外去，墙外人非常热心，而且这些年的这个发展，这个大家团结一致、同心同德，已经取得了很大的进步。我相信，我们这些这个记者朋友们，你们对今天翻墙，放出干货的报道，会是客观的，准确的。好，谢谢大家。","slug":"goagent","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0tc000r8mpr7aqmi0d7","content":"<p><strong><em>目前该项目已停止维护，并被开发者删除。有兴趣的童鞋请参考我fork下来的<a href=\"https://github.com/liangzhenduo0608/goagent\" target=\"_blank\" rel=\"external\">3.2.3版本</a>。</em></strong></p>\n<blockquote>\n<p>翻出长城，我有思想准备。是要触及一些人的利益，是会触及一些人的利益，是会有不同的观点和看法的，而且，已经形成防火长城的这些机构社会联系蛮广泛的，是有舆论能力的。我们敢于翻墙，也就是说呀，像古人讲的，<strong>“敢同恶鬼争高下，不向霸王让寸分”</strong>，就是要有这种精神。在此呢，你比如说，也有不少人给Google泼脏水，包括给Twitter、给Facebook泼脏水。甚至，说到一〇四师从广场上路过，怎么开59式坦克，一派胡言！我感到非常气愤，啊，一派胡言。</p>\n<p>嗯，方滨兴，啊，本来是，这个工程院，这个很早以前就认可的院士，在北邮期间，当时当校长就当得很成功。清华著名教授唐泽圣，啊，那是他的老师，啊，对他非常欣赏。结果，有的这些头衔，就是怕说，担心会不会有人给人家造谣，说他通过当校长还想出点名，把他的几个职位一朝就全辞掉了，啊那是前年的事儿了，就全不干了。现在就几乎啊，嗯，在工程院，就是与病魔做一做斗争，啊，我对他做出的这种牺牲我都很感动的，啊。</p>\n</blockquote>\n<p>具体GoAgent怎么用呢，请参照以下步骤：</p>\n<h1 id=\"创建GAE应用\"><a href=\"#创建GAE应用\" class=\"headerlink\" title=\"创建GAE应用\"></a>创建GAE应用</h1><h2 id=\"登录GAE\"><a href=\"#登录GAE\" class=\"headerlink\" title=\"登录GAE\"></a>登录GAE</h2><p>GoAgent是使用跨平台语言Python开发、基于GPL自由软件协议的代理软件。它利用<code>Google App Engine (GAE)</code>的服务器充当代理。因此要使用GoAgent就需要一个Google帐户，前往<a href=\"http://appengine.google.com\" target=\"_blank\" rel=\"external\">GAE</a>登录（有Google账号或者关联Google的账号直接登录即可，比如我的Google帐号就是hotmail的邮箱，深藏功与名）。</p>\n<p>其实这一步就是需要翻墙的，有些人到这一步就因为无法翻墙登陆不了GAE，从而无法使用GoAgent，陷入了死循环。</p>\n<h2 id=\"创建应用\"><a href=\"#创建应用\" class=\"headerlink\" title=\"创建应用\"></a>创建应用</h2><p>成功登录后就可以点击上图中的<code>Create Application</code>创建新应用。每个账户可以创建至多25个应用（现在网上说10个的都是几年前的版本了）。</p>\n<p>首次创建还要验证一下手机号，格式为<code>+86XXXXXXXXXXX</code>，不久会收到一条验证短信，把验证码填进去就可以激活GAE账号了。</p>\n<p>接下来就可以创建应用了，填入二级域名的Appid和应用名称。Appid要求为6～30个字符，可以包含小写字母、数字和<code>-</code>，必须以字母开头，不得以<code>-</code>结尾。<code>[your_appid].appspot.com</code>就是你的应用地址了。Appid一定要牢牢记住。</p>\n<p><img src=\"/img/gacreate.png\" alt=\"创建新应用\"></p>\n<p>每一个应用提供1GB的流量，月流量是60GB（传出带宽是1GB/天，传入带宽1GB/天），虽然有如此的限制，但只是上网页用起来毫无压力，从来没有用超过呢。如果觉得一个应用的每天1G不够用，可以多创建几个。</p>\n<h1 id=\"本地配置\"><a href=\"#本地配置\" class=\"headerlink\" title=\"本地配置\"></a>本地配置</h1><h2 id=\"下载GoAgent客户端\"><a href=\"#下载GoAgent客户端\" class=\"headerlink\" title=\"下载GoAgent客户端\"></a>下载GoAgent客户端</h2><p>GoAgent的项目主页已经从<a href=\"https://code.google.com/p/goagent/\" target=\"_blank\" rel=\"external\">Google Code</a>转移到<a href=\"https://github.com/goagent/goagent\" target=\"_blank\" rel=\"external\">GitHub</a>了，但是GitHub上的项目也被移除了，所以还想尝试的童鞋请到我fork的分支上下载<a href=\"https://github.com/liangzhenduo0608/goagent\" target=\"_blank\" rel=\"external\">GoAgent 3.2.3</a>。</p>\n<p><img src=\"/img/gagithub.png\" alt=\"GitHub上的GoAgent项目\"></p>\n<p>可以把这个项目clone到本地：</p>\n<pre><code>git clone https://github.com/liangzhenduo0608/goagent\n</code></pre><p>或者Download ZIP并解压出来。</p>\n<h2 id=\"上传Python服务\"><a href=\"#上传Python服务\" class=\"headerlink\" title=\"上传Python服务\"></a>上传Python服务</h2><p>进到server目录下，Windows用户以管理员身份运行<code>uploader.bat</code>，Mac/Linux用户用Python运行<code>uploader.py</code>，按照提示依次填入Appid、Email地址和口令（如果app创建时开启了两步验证，口令需要填入两步验证设置的密码，但现在创建的app基本上都跳过设置两步验证了，所以填邮Google帐户密码就行了）。上传成功会出现如下界面：</p>\n<pre><code>警告：建议先启动 goagent 客户端或者 VPN 然后再上传，如果您的 VPN 已经打开的话，请按回车键继续。\n\n===============================================================\n GoAgent服务端部署程序, 开始上传 gae 应用文件夹\n Linux/Mac 用户, 请使用 python uploader.py 来上传应用\n===============================================================\n\n请输入您的appid, 多个appid请用|号隔开\n注意：appid 请勿包含 ios/android/mobile 等字样，否则可能被某些网站识别成移动设备。\nAPPID: your_appid\nApplication: your_appid\nHost: appengine.google.com\nRolling back the update.\nEmail: your_google_account\nPassword for your_google_account: \nApplication: your_appid; version: 1\nHost: appengine.google.com\n\nStarting update of app: your_appid, version 1\nScanning files on local disk.\nCloning 1 static file.\nCloning 3 application files.\nCompilation starting.\nCompilation completed.\nStarting deployment.\nChecking if deployment succeeded.\nDeployment successful.\nChecking if updated app verion is serving.\nCompleted update of app: your_appid, version 1\n\n上传成功，请不要忘记编辑proxy.ini把你的appid填进去，谢谢。按回车键退出程序。\n</code></pre><p>验证是否成功也可以打开<code>https://[your_appid].appspot.com/_gh/</code>查看状态，像下面一样就说明成功了：</p>\n<blockquote>\n<p>GoAgent Python Server 3.2.0 works, deployed at 2015-01-08 23:33:33</p>\n</blockquote>\n<p>这里请注意一下，如果你用的是老版本的goagent比如2.x.x的域名后缀应为<code>*.appspot.com/2</code>，而新版本的3.x.x的域名后缀应为<code>*.appspot.com/_gh/</code>，因此之前用老版本而现在更新到新版本的用户需要重新上传。</p>\n<h2 id=\"配置proxy-ini\"><a href=\"#配置proxy-ini\" class=\"headerlink\" title=\"配置proxy.ini\"></a>配置proxy.ini</h2><p>这一步做的就是上一步终端中最后一行说的，修改<code>/local/proxy.ini</code>中<code>gae</code>下的<code>appid</code>和<code>password</code>并保存：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">[gae]</span></div><div class=\"line\"><span class=\"attr\">enable</span> = <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">appid</span> = your_appid</div><div class=\"line\"><span class=\"attr\">password</span> = your_password</div><div class=\"line\"><span class=\"attr\">path</span> = /_gh/</div><div class=\"line\"><span class=\"attr\">mode</span> = https</div><div class=\"line\"><span class=\"attr\">ipv6</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">sslversion</span> = TLSv1</div><div class=\"line\"><span class=\"attr\">window</span> = <span class=\"number\">7</span></div><div class=\"line\"><span class=\"attr\">cachesock</span> = <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">headfirst</span> = <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">keepalive</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">obfuscate</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">validate</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">transport</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">options</span> =</div><div class=\"line\"><span class=\"attr\">regions</span> =</div></pre></td></tr></table></figure>\n<h1 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h1><h2 id=\"运行GoAgent\"><a href=\"#运行GoAgent\" class=\"headerlink\" title=\"运行GoAgent\"></a>运行GoAgent</h2><p>如果以上步骤都正确的话，Windows以管理员身份运行local下的goagent.exe了，Mac/Linux用户用Python运行proxy.py，应该会出现如下界面：</p>\n<pre><code>------------------------------------------------------\nGoAgent Version    : 3.2.3 (python/2.7.1 gevent/1.0 pyopenssl/0.13.1)\nListen Address     : 127.0.0.1:8087\nGAE Mode           : https (TLSv1)\nGAE APPID          : your_appid\nPac Server         : http://192.168.1.101:8086/proxy.pac\nPac File           : file:///goagent-3.0/local/proxy.pac\n------------------------------------------------------ \n</code></pre><p>如果没有出现其他警告或错误，就说明配置成功了。</p>\n<h2 id=\"安装Chrome插件\"><a href=\"#安装Chrome插件\" class=\"headerlink\" title=\"安装Chrome插件\"></a>安装Chrome插件</h2><p>GoAgent可以设置全局代理，也可以设置浏览器代理。因此下面提供的是使用Chrome浏览器插件代理的方法。</p>\n<p>从Chrome浏览器打开<a href=\"https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=cn-ZH\" target=\"_blank\" rel=\"external\">Proxy SwitchyOmega</a>并添加到浏览器。如果被墙了就到<a href=\"https://github.com/FelisCatus/SwitchyOmega/releases\" target=\"_blank\" rel=\"external\">GitHub</a>下载<code>crx</code>文件手动添加。在其配置界面<code>Import/Export</code>里把<code>/local/SwitchyOptions.bak</code>导入进去：</p>\n<p><img src=\"/img/gaimport.png\" alt=\"导入配置\"></p>\n<p>可以从浏览器右上角小圈圈插件那切换各种模式：</p>\n<ul>\n<li>Direct是不通过代理直接连接</li>\n<li>GoAgent是完全通过代理访问</li>\n<li>Auto Switch是自动切换，根据设置判定哪些网站通过代理，哪些网站不通过代理。</li>\n</ul>\n<p>个人比较倾向使用自动切换模式，也比较省流量，也防止有些内地的网站因为代理而打不开。也可以在<code>Switch rules</code>里添加需要自动代理的网站。</p>\n<h2 id=\"导入证书\"><a href=\"#导入证书\" class=\"headerlink\" title=\"导入证书\"></a>导入证书</h2><p>打开chrome设置-管理证书-受信任的根证书颁发机构，将<code>/local/CA.crt</code>导入到进去：</p>\n<p><img src=\"/img/gacert.png\" alt=\"导入证书\"></p>\n<p>至此，以后每次需要代理的时候只要运行<code>goagent.exe</code>或<code>proxy.py</code>就行了，此时你就可以通过Google公司加州山景城的服务器畅游墙外的世界了。</p>\n<blockquote>\n<p>这个大家啊，如果，对翻墙有什么想法，有什么看法，尽可以提。我觉得，我相信，广大记者朋友，是客观的。这个也欢迎大家，有机会，到墙外去，墙外人非常热心，而且这些年的这个发展，这个大家团结一致、同心同德，已经取得了很大的进步。我相信，我们这些这个记者朋友们，你们对今天翻墙，放出干货的报道，会是客观的，准确的。好，谢谢大家。</p>\n</blockquote>\n","excerpt":"","more":"<p><strong><em>目前该项目已停止维护，并被开发者删除。有兴趣的童鞋请参考我fork下来的<a href=\"https://github.com/liangzhenduo0608/goagent\">3.2.3版本</a>。</em></strong></p>\n<blockquote>\n<p>翻出长城，我有思想准备。是要触及一些人的利益，是会触及一些人的利益，是会有不同的观点和看法的，而且，已经形成防火长城的这些机构社会联系蛮广泛的，是有舆论能力的。我们敢于翻墙，也就是说呀，像古人讲的，<strong>“敢同恶鬼争高下，不向霸王让寸分”</strong>，就是要有这种精神。在此呢，你比如说，也有不少人给Google泼脏水，包括给Twitter、给Facebook泼脏水。甚至，说到一〇四师从广场上路过，怎么开59式坦克，一派胡言！我感到非常气愤，啊，一派胡言。</p>\n<p>嗯，方滨兴，啊，本来是，这个工程院，这个很早以前就认可的院士，在北邮期间，当时当校长就当得很成功。清华著名教授唐泽圣，啊，那是他的老师，啊，对他非常欣赏。结果，有的这些头衔，就是怕说，担心会不会有人给人家造谣，说他通过当校长还想出点名，把他的几个职位一朝就全辞掉了，啊那是前年的事儿了，就全不干了。现在就几乎啊，嗯，在工程院，就是与病魔做一做斗争，啊，我对他做出的这种牺牲我都很感动的，啊。</p>\n</blockquote>\n<p>具体GoAgent怎么用呢，请参照以下步骤：</p>\n<h1 id=\"创建GAE应用\"><a href=\"#创建GAE应用\" class=\"headerlink\" title=\"创建GAE应用\"></a>创建GAE应用</h1><h2 id=\"登录GAE\"><a href=\"#登录GAE\" class=\"headerlink\" title=\"登录GAE\"></a>登录GAE</h2><p>GoAgent是使用跨平台语言Python开发、基于GPL自由软件协议的代理软件。它利用<code>Google App Engine (GAE)</code>的服务器充当代理。因此要使用GoAgent就需要一个Google帐户，前往<a href=\"http://appengine.google.com\">GAE</a>登录（有Google账号或者关联Google的账号直接登录即可，比如我的Google帐号就是hotmail的邮箱，深藏功与名）。</p>\n<p>其实这一步就是需要翻墙的，有些人到这一步就因为无法翻墙登陆不了GAE，从而无法使用GoAgent，陷入了死循环。</p>\n<h2 id=\"创建应用\"><a href=\"#创建应用\" class=\"headerlink\" title=\"创建应用\"></a>创建应用</h2><p>成功登录后就可以点击上图中的<code>Create Application</code>创建新应用。每个账户可以创建至多25个应用（现在网上说10个的都是几年前的版本了）。</p>\n<p>首次创建还要验证一下手机号，格式为<code>+86XXXXXXXXXXX</code>，不久会收到一条验证短信，把验证码填进去就可以激活GAE账号了。</p>\n<p>接下来就可以创建应用了，填入二级域名的Appid和应用名称。Appid要求为6～30个字符，可以包含小写字母、数字和<code>-</code>，必须以字母开头，不得以<code>-</code>结尾。<code>[your_appid].appspot.com</code>就是你的应用地址了。Appid一定要牢牢记住。</p>\n<p><img src=\"/img/gacreate.png\" alt=\"创建新应用\"></p>\n<p>每一个应用提供1GB的流量，月流量是60GB（传出带宽是1GB/天，传入带宽1GB/天），虽然有如此的限制，但只是上网页用起来毫无压力，从来没有用超过呢。如果觉得一个应用的每天1G不够用，可以多创建几个。</p>\n<h1 id=\"本地配置\"><a href=\"#本地配置\" class=\"headerlink\" title=\"本地配置\"></a>本地配置</h1><h2 id=\"下载GoAgent客户端\"><a href=\"#下载GoAgent客户端\" class=\"headerlink\" title=\"下载GoAgent客户端\"></a>下载GoAgent客户端</h2><p>GoAgent的项目主页已经从<a href=\"https://code.google.com/p/goagent/\">Google Code</a>转移到<a href=\"https://github.com/goagent/goagent\">GitHub</a>了，但是GitHub上的项目也被移除了，所以还想尝试的童鞋请到我fork的分支上下载<a href=\"https://github.com/liangzhenduo0608/goagent\">GoAgent 3.2.3</a>。</p>\n<p><img src=\"/img/gagithub.png\" alt=\"GitHub上的GoAgent项目\"></p>\n<p>可以把这个项目clone到本地：</p>\n<pre><code>git clone https://github.com/liangzhenduo0608/goagent\n</code></pre><p>或者Download ZIP并解压出来。</p>\n<h2 id=\"上传Python服务\"><a href=\"#上传Python服务\" class=\"headerlink\" title=\"上传Python服务\"></a>上传Python服务</h2><p>进到server目录下，Windows用户以管理员身份运行<code>uploader.bat</code>，Mac/Linux用户用Python运行<code>uploader.py</code>，按照提示依次填入Appid、Email地址和口令（如果app创建时开启了两步验证，口令需要填入两步验证设置的密码，但现在创建的app基本上都跳过设置两步验证了，所以填邮Google帐户密码就行了）。上传成功会出现如下界面：</p>\n<pre><code>警告：建议先启动 goagent 客户端或者 VPN 然后再上传，如果您的 VPN 已经打开的话，请按回车键继续。\n\n===============================================================\n GoAgent服务端部署程序, 开始上传 gae 应用文件夹\n Linux/Mac 用户, 请使用 python uploader.py 来上传应用\n===============================================================\n\n请输入您的appid, 多个appid请用|号隔开\n注意：appid 请勿包含 ios/android/mobile 等字样，否则可能被某些网站识别成移动设备。\nAPPID: your_appid\nApplication: your_appid\nHost: appengine.google.com\nRolling back the update.\nEmail: your_google_account\nPassword for your_google_account: \nApplication: your_appid; version: 1\nHost: appengine.google.com\n\nStarting update of app: your_appid, version 1\nScanning files on local disk.\nCloning 1 static file.\nCloning 3 application files.\nCompilation starting.\nCompilation completed.\nStarting deployment.\nChecking if deployment succeeded.\nDeployment successful.\nChecking if updated app verion is serving.\nCompleted update of app: your_appid, version 1\n\n上传成功，请不要忘记编辑proxy.ini把你的appid填进去，谢谢。按回车键退出程序。\n</code></pre><p>验证是否成功也可以打开<code>https://[your_appid].appspot.com/_gh/</code>查看状态，像下面一样就说明成功了：</p>\n<blockquote>\n<p>GoAgent Python Server 3.2.0 works, deployed at 2015-01-08 23:33:33</p>\n</blockquote>\n<p>这里请注意一下，如果你用的是老版本的goagent比如2.x.x的域名后缀应为<code>*.appspot.com/2</code>，而新版本的3.x.x的域名后缀应为<code>*.appspot.com/_gh/</code>，因此之前用老版本而现在更新到新版本的用户需要重新上传。</p>\n<h2 id=\"配置proxy-ini\"><a href=\"#配置proxy-ini\" class=\"headerlink\" title=\"配置proxy.ini\"></a>配置proxy.ini</h2><p>这一步做的就是上一步终端中最后一行说的，修改<code>/local/proxy.ini</code>中<code>gae</code>下的<code>appid</code>和<code>password</code>并保存：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">[gae]</span></div><div class=\"line\"><span class=\"attr\">enable</span> = <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">appid</span> = your_appid</div><div class=\"line\"><span class=\"attr\">password</span> = your_password</div><div class=\"line\"><span class=\"attr\">path</span> = /_gh/</div><div class=\"line\"><span class=\"attr\">mode</span> = https</div><div class=\"line\"><span class=\"attr\">ipv6</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">sslversion</span> = TLSv1</div><div class=\"line\"><span class=\"attr\">window</span> = <span class=\"number\">7</span></div><div class=\"line\"><span class=\"attr\">cachesock</span> = <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">headfirst</span> = <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">keepalive</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">obfuscate</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">validate</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">transport</span> = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">options</span> =</div><div class=\"line\"><span class=\"attr\">regions</span> =</div></pre></td></tr></table></figure>\n<h1 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h1><h2 id=\"运行GoAgent\"><a href=\"#运行GoAgent\" class=\"headerlink\" title=\"运行GoAgent\"></a>运行GoAgent</h2><p>如果以上步骤都正确的话，Windows以管理员身份运行local下的goagent.exe了，Mac/Linux用户用Python运行proxy.py，应该会出现如下界面：</p>\n<pre><code>------------------------------------------------------\nGoAgent Version    : 3.2.3 (python/2.7.1 gevent/1.0 pyopenssl/0.13.1)\nListen Address     : 127.0.0.1:8087\nGAE Mode           : https (TLSv1)\nGAE APPID          : your_appid\nPac Server         : http://192.168.1.101:8086/proxy.pac\nPac File           : file:///goagent-3.0/local/proxy.pac\n------------------------------------------------------ \n</code></pre><p>如果没有出现其他警告或错误，就说明配置成功了。</p>\n<h2 id=\"安装Chrome插件\"><a href=\"#安装Chrome插件\" class=\"headerlink\" title=\"安装Chrome插件\"></a>安装Chrome插件</h2><p>GoAgent可以设置全局代理，也可以设置浏览器代理。因此下面提供的是使用Chrome浏览器插件代理的方法。</p>\n<p>从Chrome浏览器打开<a href=\"https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=cn-ZH\">Proxy SwitchyOmega</a>并添加到浏览器。如果被墙了就到<a href=\"https://github.com/FelisCatus/SwitchyOmega/releases\">GitHub</a>下载<code>crx</code>文件手动添加。在其配置界面<code>Import/Export</code>里把<code>/local/SwitchyOptions.bak</code>导入进去：</p>\n<p><img src=\"/img/gaimport.png\" alt=\"导入配置\"></p>\n<p>可以从浏览器右上角小圈圈插件那切换各种模式：</p>\n<ul>\n<li>Direct是不通过代理直接连接</li>\n<li>GoAgent是完全通过代理访问</li>\n<li>Auto Switch是自动切换，根据设置判定哪些网站通过代理，哪些网站不通过代理。</li>\n</ul>\n<p>个人比较倾向使用自动切换模式，也比较省流量，也防止有些内地的网站因为代理而打不开。也可以在<code>Switch rules</code>里添加需要自动代理的网站。</p>\n<h2 id=\"导入证书\"><a href=\"#导入证书\" class=\"headerlink\" title=\"导入证书\"></a>导入证书</h2><p>打开chrome设置-管理证书-受信任的根证书颁发机构，将<code>/local/CA.crt</code>导入到进去：</p>\n<p><img src=\"/img/gacert.png\" alt=\"导入证书\"></p>\n<p>至此，以后每次需要代理的时候只要运行<code>goagent.exe</code>或<code>proxy.py</code>就行了，此时你就可以通过Google公司加州山景城的服务器畅游墙外的世界了。</p>\n<blockquote>\n<p>这个大家啊，如果，对翻墙有什么想法，有什么看法，尽可以提。我觉得，我相信，广大记者朋友，是客观的。这个也欢迎大家，有机会，到墙外去，墙外人非常热心，而且这些年的这个发展，这个大家团结一致、同心同德，已经取得了很大的进步。我相信，我们这些这个记者朋友们，你们对今天翻墙，放出干货的报道，会是客观的，准确的。好，谢谢大家。</p>\n</blockquote>\n"},{"title":"Hello World","date":"1969-12-31T16:00:00.000Z","_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"title: Hello World\ndate: 1970/01/01 00:00:00\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizmvz0te000t8mprbbcxbwup","content":"<p>Welcome to <a href=\"http://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"http://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"http://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"http://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"http://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"http://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"GFWlist+ShadowSocks实现路由器透明代理","date":"2016-08-06T10:18:18.000Z","photos":["/img/gfwbanner.png"],"_content":"\n前两个月OpenWrt一直使用[ChinaDNS+ShadowSocks](/posts/chinadns/)的方式按IP切换代理，但是由于长城宽带非常蛋疼代理时常上不去，导致平时可以正常访问的一些网站也无法访问，得不偿失。于是趁这周换了移动光纤，为了避免发生之前的情况，也把代理方式换成了按[GFWlist](https://github.com/gfwlist/gfwlist)得域名切换。\n\n# 必要软件\n首先是在OpenWrt下装上一堆必要软件：\n\n+ ipset\n+ iptables-mod-nat-extra\n+ libopenssl\n+ dnsmasq-full\n+ shadowsocks-libev\n\n其中前三个正常安装即可，`dnsmasq-full`需要先卸载预装的`dnsmasq`再安装。\n\n`shadowsocks-libev`可以在[sourceforge](https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/)里找到。如果无法访问也可以下载我备份在服务器上的较老版本（注意软件所适配的架构）：\n\n\twget https://www.shintaku.cc/files/shadowsocks-libev_2.4.8-3_ar71xx.ipk\n\t\n下载完成后使用`opkg install`命令直接安装即可。\n\n# 配置ShadowSocks\n编辑`/etc/shadowsocks.json`文件：\n\n```json\n{\n    \"server\": \"\",\n    \"server_port\": 8388,\n    \"local_port\": 1080,\n    \"password\": \"\",\n    \"timeout\": 300,\n    \"method\": \"rc4-md5\"\n}\n```\n\t\n修改`/etc/init.d/shadowsocks`成如下（就是把关于`ss-local`的注释掉再把`ss-redir`的解注释）：\n\n```bash\n#!/bin/sh /etc/rc.common\n\nSTART=95\n\nSERVICE_USE_PID=1\nSERVICE_WRITE_PID=1\nSERVICE_DAEMONIZE=1\n\nCONFIG=/etc/shadowsocks.json\n\nstart() {\n\t#service_start /usr/bin/ss-local -c $CONFIG -b 0.0.0.0\n\tservice_start /usr/bin/ss-redir -c $CONFIG -b 0.0.0.0\n\t#service_start /usr/bin/ss-tunnel -c $CONFIG -b 0.0.0.0 -l 5353 -L 8.8.8.8:53 -u\n}\n\nstop() {\n\t#service_stop /usr/bin/ss-local\n\tservice_stop /usr/bin/ss-redir\n\t#service_stop /usr/bin/ss-tunnel\n}\n```\n\n之后启动ShadowSocks并设置开机自启：\n\n\t/etc/init.d/shadowsocks start\n\t/etc/init.d/shadowsocks enable\n\t\n# 配置dnsmasq\n\n新建目录`/etc/dnsmasq.d`，并在其中放入`dnsmasq_list.conf`文件，这个文件就是根据GFWlist生成的走代理的域名列表，生成方法已经有大神放在了[GitHub](https://github.com/cokebar/gfwlist2dnsmasq)上，可根据自己的情况进行修改。若是懒得生成，我在服务器上也会每日更新[dnsmasq_list.conf](http://info.shintaku.cc/dnsmasq_list.conf)，里面用的DNS是在这台服务器上搭的dnsmasq，ipset表叫做`gfwlist`。\n\n建议使用自己VPS上的DNS，具体就是在服务器装上dnsmasq，编辑`/etc/dnsmasq.conf`加入：\n\n```bash\nport=5353\nserver=8.8.8.8\nserver=8.8.4.4\n```\n\n保存后运行dnsmasq并设置开机启动就可以间接使用*Google Public DNS*了。\n\n然后编辑路由器上的`/etc/dnsmasq.conf`，在全篇注释后面加一句：\n\n```bash\nconf-dir=/etc/dnsmasq.d\n```\n\n最后自定义防火墙规则（可在LuCI里直接添加）：\n\n```bash\nipset -N gfwlist iphash\niptables -t nat -A PREROUTING -p tcp -m set --match-set gfwlist dst -j REDIRECT --to-port 1080\n```\n\n重启dnsmasq就算完成了：\n\n\t/etc/init.d/dnsmasq restart","source":"_posts/gfwlist.md","raw":"title: GFWlist+ShadowSocks实现路由器透明代理\ndate: 2016-08-06 18:18:18\ntags: [GFWlist, ShadowSocks, OpenWrt, 科学上网, 路由器, Linux]\ncategories: [网络, 科学上网]\nphotos:\n\t- /img/gfwbanner.png\n---\n\n前两个月OpenWrt一直使用[ChinaDNS+ShadowSocks](/posts/chinadns/)的方式按IP切换代理，但是由于长城宽带非常蛋疼代理时常上不去，导致平时可以正常访问的一些网站也无法访问，得不偿失。于是趁这周换了移动光纤，为了避免发生之前的情况，也把代理方式换成了按[GFWlist](https://github.com/gfwlist/gfwlist)得域名切换。\n\n# 必要软件\n首先是在OpenWrt下装上一堆必要软件：\n\n+ ipset\n+ iptables-mod-nat-extra\n+ libopenssl\n+ dnsmasq-full\n+ shadowsocks-libev\n\n其中前三个正常安装即可，`dnsmasq-full`需要先卸载预装的`dnsmasq`再安装。\n\n`shadowsocks-libev`可以在[sourceforge](https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/)里找到。如果无法访问也可以下载我备份在服务器上的较老版本（注意软件所适配的架构）：\n\n\twget https://www.shintaku.cc/files/shadowsocks-libev_2.4.8-3_ar71xx.ipk\n\t\n下载完成后使用`opkg install`命令直接安装即可。\n\n# 配置ShadowSocks\n编辑`/etc/shadowsocks.json`文件：\n\n```json\n{\n    \"server\": \"\",\n    \"server_port\": 8388,\n    \"local_port\": 1080,\n    \"password\": \"\",\n    \"timeout\": 300,\n    \"method\": \"rc4-md5\"\n}\n```\n\t\n修改`/etc/init.d/shadowsocks`成如下（就是把关于`ss-local`的注释掉再把`ss-redir`的解注释）：\n\n```bash\n#!/bin/sh /etc/rc.common\n\nSTART=95\n\nSERVICE_USE_PID=1\nSERVICE_WRITE_PID=1\nSERVICE_DAEMONIZE=1\n\nCONFIG=/etc/shadowsocks.json\n\nstart() {\n\t#service_start /usr/bin/ss-local -c $CONFIG -b 0.0.0.0\n\tservice_start /usr/bin/ss-redir -c $CONFIG -b 0.0.0.0\n\t#service_start /usr/bin/ss-tunnel -c $CONFIG -b 0.0.0.0 -l 5353 -L 8.8.8.8:53 -u\n}\n\nstop() {\n\t#service_stop /usr/bin/ss-local\n\tservice_stop /usr/bin/ss-redir\n\t#service_stop /usr/bin/ss-tunnel\n}\n```\n\n之后启动ShadowSocks并设置开机自启：\n\n\t/etc/init.d/shadowsocks start\n\t/etc/init.d/shadowsocks enable\n\t\n# 配置dnsmasq\n\n新建目录`/etc/dnsmasq.d`，并在其中放入`dnsmasq_list.conf`文件，这个文件就是根据GFWlist生成的走代理的域名列表，生成方法已经有大神放在了[GitHub](https://github.com/cokebar/gfwlist2dnsmasq)上，可根据自己的情况进行修改。若是懒得生成，我在服务器上也会每日更新[dnsmasq_list.conf](http://info.shintaku.cc/dnsmasq_list.conf)，里面用的DNS是在这台服务器上搭的dnsmasq，ipset表叫做`gfwlist`。\n\n建议使用自己VPS上的DNS，具体就是在服务器装上dnsmasq，编辑`/etc/dnsmasq.conf`加入：\n\n```bash\nport=5353\nserver=8.8.8.8\nserver=8.8.4.4\n```\n\n保存后运行dnsmasq并设置开机启动就可以间接使用*Google Public DNS*了。\n\n然后编辑路由器上的`/etc/dnsmasq.conf`，在全篇注释后面加一句：\n\n```bash\nconf-dir=/etc/dnsmasq.d\n```\n\n最后自定义防火墙规则（可在LuCI里直接添加）：\n\n```bash\nipset -N gfwlist iphash\niptables -t nat -A PREROUTING -p tcp -m set --match-set gfwlist dst -j REDIRECT --to-port 1080\n```\n\n重启dnsmasq就算完成了：\n\n\t/etc/init.d/dnsmasq restart","slug":"gfwlist","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0tf000v8mprup1ltn2c","content":"<p>前两个月OpenWrt一直使用<a href=\"/posts/chinadns/\">ChinaDNS+ShadowSocks</a>的方式按IP切换代理，但是由于长城宽带非常蛋疼代理时常上不去，导致平时可以正常访问的一些网站也无法访问，得不偿失。于是趁这周换了移动光纤，为了避免发生之前的情况，也把代理方式换成了按<a href=\"https://github.com/gfwlist/gfwlist\" target=\"_blank\" rel=\"external\">GFWlist</a>得域名切换。</p>\n<h1 id=\"必要软件\"><a href=\"#必要软件\" class=\"headerlink\" title=\"必要软件\"></a>必要软件</h1><p>首先是在OpenWrt下装上一堆必要软件：</p>\n<ul>\n<li>ipset</li>\n<li>iptables-mod-nat-extra</li>\n<li>libopenssl</li>\n<li>dnsmasq-full</li>\n<li>shadowsocks-libev</li>\n</ul>\n<p>其中前三个正常安装即可，<code>dnsmasq-full</code>需要先卸载预装的<code>dnsmasq</code>再安装。</p>\n<p><code>shadowsocks-libev</code>可以在<a href=\"https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/\" target=\"_blank\" rel=\"external\">sourceforge</a>里找到。如果无法访问也可以下载我备份在服务器上的较老版本（注意软件所适配的架构）：</p>\n<pre><code>wget https://www.shintaku.cc/files/shadowsocks-libev_2.4.8-3_ar71xx.ipk\n</code></pre><p>下载完成后使用<code>opkg install</code>命令直接安装即可。</p>\n<h1 id=\"配置ShadowSocks\"><a href=\"#配置ShadowSocks\" class=\"headerlink\" title=\"配置ShadowSocks\"></a>配置ShadowSocks</h1><p>编辑<code>/etc/shadowsocks.json</code>文件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"server\"</span>: <span class=\"string\">\"\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"server_port\"</span>: <span class=\"number\">8388</span>,</div><div class=\"line\">    <span class=\"attr\">\"local_port\"</span>: <span class=\"number\">1080</span>,</div><div class=\"line\">    <span class=\"attr\">\"password\"</span>: <span class=\"string\">\"\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"timeout\"</span>: <span class=\"number\">300</span>,</div><div class=\"line\">    <span class=\"attr\">\"method\"</span>: <span class=\"string\">\"rc4-md5\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>修改<code>/etc/init.d/shadowsocks</code>成如下（就是把关于<code>ss-local</code>的注释掉再把<code>ss-redir</code>的解注释）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/bin/sh /etc/rc.common</span></div><div class=\"line\"></div><div class=\"line\">START=95</div><div class=\"line\"></div><div class=\"line\">SERVICE_USE_PID=1</div><div class=\"line\">SERVICE_WRITE_PID=1</div><div class=\"line\">SERVICE_DAEMONIZE=1</div><div class=\"line\"></div><div class=\"line\">CONFIG=/etc/shadowsocks.json</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">start</span></span>() &#123;</div><div class=\"line\">\t<span class=\"comment\">#service_start /usr/bin/ss-local -c $CONFIG -b 0.0.0.0</span></div><div class=\"line\">\tservice_start /usr/bin/ss-redir -c <span class=\"variable\">$CONFIG</span> -b 0.0.0.0</div><div class=\"line\">\t<span class=\"comment\">#service_start /usr/bin/ss-tunnel -c $CONFIG -b 0.0.0.0 -l 5353 -L 8.8.8.8:53 -u</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">stop</span></span>() &#123;</div><div class=\"line\">\t<span class=\"comment\">#service_stop /usr/bin/ss-local</span></div><div class=\"line\">\tservice_stop /usr/bin/ss-redir</div><div class=\"line\">\t<span class=\"comment\">#service_stop /usr/bin/ss-tunnel</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>之后启动ShadowSocks并设置开机自启：</p>\n<pre><code>/etc/init.d/shadowsocks start\n/etc/init.d/shadowsocks enable\n</code></pre><h1 id=\"配置dnsmasq\"><a href=\"#配置dnsmasq\" class=\"headerlink\" title=\"配置dnsmasq\"></a>配置dnsmasq</h1><p>新建目录<code>/etc/dnsmasq.d</code>，并在其中放入<code>dnsmasq_list.conf</code>文件，这个文件就是根据GFWlist生成的走代理的域名列表，生成方法已经有大神放在了<a href=\"https://github.com/cokebar/gfwlist2dnsmasq\" target=\"_blank\" rel=\"external\">GitHub</a>上，可根据自己的情况进行修改。若是懒得生成，我在服务器上也会每日更新<a href=\"http://info.shintaku.cc/dnsmasq_list.conf\" target=\"_blank\" rel=\"external\">dnsmasq_list.conf</a>，里面用的DNS是在这台服务器上搭的dnsmasq，ipset表叫做<code>gfwlist</code>。</p>\n<p>建议使用自己VPS上的DNS，具体就是在服务器装上dnsmasq，编辑<code>/etc/dnsmasq.conf</code>加入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">port=5353</div><div class=\"line\">server=8.8.8.8</div><div class=\"line\">server=8.8.4.4</div></pre></td></tr></table></figure>\n<p>保存后运行dnsmasq并设置开机启动就可以间接使用<em>Google Public DNS</em>了。</p>\n<p>然后编辑路由器上的<code>/etc/dnsmasq.conf</code>，在全篇注释后面加一句：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">conf-dir=/etc/dnsmasq.d</div></pre></td></tr></table></figure>\n<p>最后自定义防火墙规则（可在LuCI里直接添加）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ipset -N gfwlist iphash</div><div class=\"line\">iptables -t nat -A PREROUTING -p tcp -m <span class=\"built_in\">set</span> --match-set gfwlist dst -j REDIRECT --to-port 1080</div></pre></td></tr></table></figure>\n<p>重启dnsmasq就算完成了：</p>\n<pre><code>/etc/init.d/dnsmasq restart\n</code></pre>","excerpt":"","more":"<p>前两个月OpenWrt一直使用<a href=\"/posts/chinadns/\">ChinaDNS+ShadowSocks</a>的方式按IP切换代理，但是由于长城宽带非常蛋疼代理时常上不去，导致平时可以正常访问的一些网站也无法访问，得不偿失。于是趁这周换了移动光纤，为了避免发生之前的情况，也把代理方式换成了按<a href=\"https://github.com/gfwlist/gfwlist\">GFWlist</a>得域名切换。</p>\n<h1 id=\"必要软件\"><a href=\"#必要软件\" class=\"headerlink\" title=\"必要软件\"></a>必要软件</h1><p>首先是在OpenWrt下装上一堆必要软件：</p>\n<ul>\n<li>ipset</li>\n<li>iptables-mod-nat-extra</li>\n<li>libopenssl</li>\n<li>dnsmasq-full</li>\n<li>shadowsocks-libev</li>\n</ul>\n<p>其中前三个正常安装即可，<code>dnsmasq-full</code>需要先卸载预装的<code>dnsmasq</code>再安装。</p>\n<p><code>shadowsocks-libev</code>可以在<a href=\"https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/\">sourceforge</a>里找到。如果无法访问也可以下载我备份在服务器上的较老版本（注意软件所适配的架构）：</p>\n<pre><code>wget https://www.shintaku.cc/files/shadowsocks-libev_2.4.8-3_ar71xx.ipk\n</code></pre><p>下载完成后使用<code>opkg install</code>命令直接安装即可。</p>\n<h1 id=\"配置ShadowSocks\"><a href=\"#配置ShadowSocks\" class=\"headerlink\" title=\"配置ShadowSocks\"></a>配置ShadowSocks</h1><p>编辑<code>/etc/shadowsocks.json</code>文件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"server\"</span>: <span class=\"string\">\"\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"server_port\"</span>: <span class=\"number\">8388</span>,</div><div class=\"line\">    <span class=\"attr\">\"local_port\"</span>: <span class=\"number\">1080</span>,</div><div class=\"line\">    <span class=\"attr\">\"password\"</span>: <span class=\"string\">\"\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"timeout\"</span>: <span class=\"number\">300</span>,</div><div class=\"line\">    <span class=\"attr\">\"method\"</span>: <span class=\"string\">\"rc4-md5\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>修改<code>/etc/init.d/shadowsocks</code>成如下（就是把关于<code>ss-local</code>的注释掉再把<code>ss-redir</code>的解注释）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/bin/sh /etc/rc.common</span></div><div class=\"line\"></div><div class=\"line\">START=95</div><div class=\"line\"></div><div class=\"line\">SERVICE_USE_PID=1</div><div class=\"line\">SERVICE_WRITE_PID=1</div><div class=\"line\">SERVICE_DAEMONIZE=1</div><div class=\"line\"></div><div class=\"line\">CONFIG=/etc/shadowsocks.json</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">start</span></span>() &#123;</div><div class=\"line\">\t<span class=\"comment\">#service_start /usr/bin/ss-local -c $CONFIG -b 0.0.0.0</span></div><div class=\"line\">\tservice_start /usr/bin/ss-redir -c <span class=\"variable\">$CONFIG</span> -b 0.0.0.0</div><div class=\"line\">\t<span class=\"comment\">#service_start /usr/bin/ss-tunnel -c $CONFIG -b 0.0.0.0 -l 5353 -L 8.8.8.8:53 -u</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">stop</span></span>() &#123;</div><div class=\"line\">\t<span class=\"comment\">#service_stop /usr/bin/ss-local</span></div><div class=\"line\">\tservice_stop /usr/bin/ss-redir</div><div class=\"line\">\t<span class=\"comment\">#service_stop /usr/bin/ss-tunnel</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>之后启动ShadowSocks并设置开机自启：</p>\n<pre><code>/etc/init.d/shadowsocks start\n/etc/init.d/shadowsocks enable\n</code></pre><h1 id=\"配置dnsmasq\"><a href=\"#配置dnsmasq\" class=\"headerlink\" title=\"配置dnsmasq\"></a>配置dnsmasq</h1><p>新建目录<code>/etc/dnsmasq.d</code>，并在其中放入<code>dnsmasq_list.conf</code>文件，这个文件就是根据GFWlist生成的走代理的域名列表，生成方法已经有大神放在了<a href=\"https://github.com/cokebar/gfwlist2dnsmasq\">GitHub</a>上，可根据自己的情况进行修改。若是懒得生成，我在服务器上也会每日更新<a href=\"http://info.shintaku.cc/dnsmasq_list.conf\">dnsmasq_list.conf</a>，里面用的DNS是在这台服务器上搭的dnsmasq，ipset表叫做<code>gfwlist</code>。</p>\n<p>建议使用自己VPS上的DNS，具体就是在服务器装上dnsmasq，编辑<code>/etc/dnsmasq.conf</code>加入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">port=5353</div><div class=\"line\">server=8.8.8.8</div><div class=\"line\">server=8.8.4.4</div></pre></td></tr></table></figure>\n<p>保存后运行dnsmasq并设置开机启动就可以间接使用<em>Google Public DNS</em>了。</p>\n<p>然后编辑路由器上的<code>/etc/dnsmasq.conf</code>，在全篇注释后面加一句：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">conf-dir=/etc/dnsmasq.d</div></pre></td></tr></table></figure>\n<p>最后自定义防火墙规则（可在LuCI里直接添加）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ipset -N gfwlist iphash</div><div class=\"line\">iptables -t nat -A PREROUTING -p tcp -m <span class=\"built_in\">set</span> --match-set gfwlist dst -j REDIRECT --to-port 1080</div></pre></td></tr></table></figure>\n<p>重启dnsmasq就算完成了：</p>\n<pre><code>/etc/init.d/dnsmasq restart\n</code></pre>"},{"title":"Linux上搭建Minecraft服务器","date":"2016-02-14T13:11:11.000Z","photos":["/img/mcbanner.png"],"_content":"之前想在树莓派上搭建一个Minecraft服务器，但是只限于局域网内玩有点不爽，所以才想在VPS上开服。这个服务器的地址是**mc.shintaku.cc**，欢迎大家过来乱搞。\n\n# 环境配置\nMinecraft是基于Java运行的，所以首先要安装Java环境：\n\n\tyum install java\n\t\n好像比其他平台的安装简单得多。然后为了让Minecraft在后台运行而不受终端操作的干扰，要装一个screen：\n\n\tyum install screen\n\t\n# 启动游戏\n因为最开始要安装到树莓派上，硬件资源有限，所以这里介绍一个叫[SpigotMC](https://www.spigotmc.org/)的轻量级MC服务器端，是Bukkit的优化版，但是可能游戏中有些材质无法使用。由于某些原因论坛上不提供编译好的jar包下载，所以我找了一个1.7和1.8通用版本的放到服务器上：\n\n\twget https://www.shintaku.cc/files/spigot.jar\n\n新建一个目录将spigot.jar放进去，然后用以下命令启动：\n\t\n\tjava -Xms256M -Xmx512M -jar spigot.jar nogui\n\t\n后来发现[微软官网](https://minecraft.net/en/download/server)有了服务器版的下载，所以服务器配置足够好的话运行这个也是没有问题的，同样是先下载对应的版本：\n\n\twget https://s3.amazonaws.com/Minecraft.Download/versions/1.8.9/minecraft_server.1.8.9.jar\n\t\n地址里改成需要下载的版本号就可以了，启动命令相同：\n\n\tjava -Xms256M -Xmx512M -jar minecraft_server.1.8.9.jar nogui\n\t\n其中前两个参数是指定MC运行的内存范围，然后会出现一系列启动信息，最后就是`Stopping server`。\t\n# 修改配置文件\n启动之后MC的目录下会生成一些其他的文件，先编辑`eula.txt`，将`eula`的值改为`true`：\n\n\teula=true\n\t\n然后编辑`server.properties`，开始里面应除了一些注释没有其他内容，将以下内容加进去：\n\n```ini\ngenerator-settings=                 #用于设置超平坦世界的函数，留空即可\nop-permission-level=4               #设置OP的许可权等级\nallow-nether=true                   #是否允许生成/进入下界\nlevel-name=world                    #世界名称及其文件夹名\nenable-query=false                  #允许使用GameSpy4协议的服务器监听器\nallow-flight=false                  #是否允许玩家在生存模式透过MOD飞行\nannounce-player-achievements=true   #是否公开显示玩家成就\nserver-port=25565                   #服务器端口（默认为25565）\nlevel-type=DEFAULT                  #世界类型\nenable-rcon=false                   #是否允许远程访问服务器仪表盘\nlevel-seed=                         #世界种子\nforce-gamemode=false                #玩家是否总是以默认游戏模式进入服务器\nserver-ip=                          #服务器IP，一般来说留空即可\nmax-build-height=256                #最高建筑高度（最高256）\nspawn-npcs=true                     #是否生成村民NPC\nwhite-list=false                    #是否开启白名单认证\nspawn-animals=true                  #是否生成动物\nhardcore=false                      #是否开启极限模式\nsnooper-enabled=true                #是否允许服务器定期发送统计数据\nonline-mode=false                   #是否开启正版认证（开启后只有正版玩家可进入）\nresource-pack=                      #资源包URL（可让玩家选择是否使用服务器提供的资源包）\npvp=true                            #可否PVP\ndifficulty=1                        #难度\nenable-command-block=false          #是否可以使用命令方块\ngamemode=0                          #默认游戏模式\nplayer-idle-timeout=0               #如果该玩家无反应超过这个分钟数将会被踢出\nmax-players=20                      #最大玩家数量\nspawn-monsters=true                 #是否生成怪物\ngenerate-structures=true            #是否生成建筑物\nview-distance=10                    #客户端视野距离的上限\nmotd=A Minecraft Server             #服务器在服务器列表页所显示的信息\n```\n可以按照注释自己进行修改，注意如果没有购买正版需要将`online-mode`一项改为`false`。\n\n一切完成后新开一个screen来启动MC：\n\n\tscreen -S mc\n\t\n这时相当于进入一个新终端，`mc`是这个screen的名字。在里面继续执行之前的java启动命令就可以正常启动游戏了。在screen中只要按下`Ctrl+A`再按下`Ctrl+D`就可以回到原来的终端了。再想进入这个screen的话运行`screen -r mc`就可以了。想要停止游戏的话输入`stop`就可以了。\n\n然后在本地启动游戏，选多人游戏并输入服务器地址就能连接了。\n\n另外附上基本的OP命令，就可以方便地管(zhuō)理(nòng)其他玩家了：\n\n```ini\n/achievement <give|take> <stat_name|*> [player]\n/ban <name> [reason ...]\n/ban-ip <address|name> [reason ...]\n/banlist [ips|players]\n/blockdata <x> <y> <z> <dataTag>\n/clear [player] [item] [data] [maxCount] [dataTag]\n/clone <x1> <y1> <z1> <x2> <y2> <z2> <x> <y> <z> [maskMode] [cloneMode]\n/debug <start|stop>\n/defaultgamemode <mode>\n/deop <player>\n/difficulty <new difficulty>\n/effect <player> <effect> [seconds] [amplifier] [hideParticles] OR /effect <player> clear\n/enchant <player> <enchantment ID> [level]\n/entitydata <entity> <dataTag>\n/execute <entity> <x> <y> <z> <command> OR /execute <entity> <x> <y> <z> detect <x> <y> <z> <block> <data> <command>\n/fill <x1> <y1> <z1> <x2> <y2> <z2> <TileName> [dataValue] [oldBlockHandling] [dataTag]\n/gamemode <mode> [player]\n/gamerule <rule name> [value]\n/give <player> <item> [amount] [data] [dataTag]\n/help [page|command name]\n/kick <player> [reason ...]\n/kill [player|entity]\n/list\n/me <action ...>\n/op <player>\n/pardon <name>\n/pardon-ip <address>\n/particle <name> <x> <y> <z> <xd> <yd> <zd> <speed> [count] [mode]\n/playsound <sound> <player> [x] [y] [z] [volume] [pitch] [minimumVolume]\n/replaceitem <entity|block> ...\n/save-all\n/save-off\n/save-on\n/say <message ...>\n/scoreboard <objectives|players|teams> ...\n/seed\n/setblock <x> <y> <z> <TileName> [dataValue] [oldBlockHandling] [dataTag]\n/setidletimeout <Minutes until kick>\n/setworldspawn [<x> <y> <z>]\n/spawnpoint [player] [<x> <y> <z>]\n/spreadplayers <x> <z> <spreadDistance> <maxRange> <respectTeams true|false> <player ...>\n/stats <entity|block> ...\n/stop\n/summon <EntityName> [x] [y] [z] [dataTag]\n/tell <player> <private message ...>\n/tellraw <player> <raw json message>\n/testfor <player> [dataTag]\n/testforblock <x> <y> <z> <TileName> [dataValue] [dataTag]\n/testforblocks <x1> <y1> <z1> <x2> <y2> <z2> <x> <y> <z> [mode]\n/time <set|add|query> <value>\n/title <player> <title|subtitle|clear|reset|times> ...\n/toggledownfall\n/tp [target player] <destination player> OR /tp [target player] <x> <y> <z> [<y-rot> <x-rot>]\n/trigger <objective> <add|set> <value>\n/weather <clear|rain|thunder> [duration in seconds]\n/whitelist <on|off|list|add|remove|reload>\n/worldborder <set|center|damage|warning|get|add> ...\n/xp <amount> [player] OR /xp <amount>L [player]\n```","source":"_posts/minecraft.md","raw":"title: Linux上搭建Minecraft服务器\ndate: 2016-02-14 21:11:11\ntags: [Linux, Minecraft, 服务器, 游戏]\ncategories: [ACG, Minecraft]\nphotos: \n\t- /img/mcbanner.png\n---\n之前想在树莓派上搭建一个Minecraft服务器，但是只限于局域网内玩有点不爽，所以才想在VPS上开服。这个服务器的地址是**mc.shintaku.cc**，欢迎大家过来乱搞。\n\n# 环境配置\nMinecraft是基于Java运行的，所以首先要安装Java环境：\n\n\tyum install java\n\t\n好像比其他平台的安装简单得多。然后为了让Minecraft在后台运行而不受终端操作的干扰，要装一个screen：\n\n\tyum install screen\n\t\n# 启动游戏\n因为最开始要安装到树莓派上，硬件资源有限，所以这里介绍一个叫[SpigotMC](https://www.spigotmc.org/)的轻量级MC服务器端，是Bukkit的优化版，但是可能游戏中有些材质无法使用。由于某些原因论坛上不提供编译好的jar包下载，所以我找了一个1.7和1.8通用版本的放到服务器上：\n\n\twget https://www.shintaku.cc/files/spigot.jar\n\n新建一个目录将spigot.jar放进去，然后用以下命令启动：\n\t\n\tjava -Xms256M -Xmx512M -jar spigot.jar nogui\n\t\n后来发现[微软官网](https://minecraft.net/en/download/server)有了服务器版的下载，所以服务器配置足够好的话运行这个也是没有问题的，同样是先下载对应的版本：\n\n\twget https://s3.amazonaws.com/Minecraft.Download/versions/1.8.9/minecraft_server.1.8.9.jar\n\t\n地址里改成需要下载的版本号就可以了，启动命令相同：\n\n\tjava -Xms256M -Xmx512M -jar minecraft_server.1.8.9.jar nogui\n\t\n其中前两个参数是指定MC运行的内存范围，然后会出现一系列启动信息，最后就是`Stopping server`。\t\n# 修改配置文件\n启动之后MC的目录下会生成一些其他的文件，先编辑`eula.txt`，将`eula`的值改为`true`：\n\n\teula=true\n\t\n然后编辑`server.properties`，开始里面应除了一些注释没有其他内容，将以下内容加进去：\n\n```ini\ngenerator-settings=                 #用于设置超平坦世界的函数，留空即可\nop-permission-level=4               #设置OP的许可权等级\nallow-nether=true                   #是否允许生成/进入下界\nlevel-name=world                    #世界名称及其文件夹名\nenable-query=false                  #允许使用GameSpy4协议的服务器监听器\nallow-flight=false                  #是否允许玩家在生存模式透过MOD飞行\nannounce-player-achievements=true   #是否公开显示玩家成就\nserver-port=25565                   #服务器端口（默认为25565）\nlevel-type=DEFAULT                  #世界类型\nenable-rcon=false                   #是否允许远程访问服务器仪表盘\nlevel-seed=                         #世界种子\nforce-gamemode=false                #玩家是否总是以默认游戏模式进入服务器\nserver-ip=                          #服务器IP，一般来说留空即可\nmax-build-height=256                #最高建筑高度（最高256）\nspawn-npcs=true                     #是否生成村民NPC\nwhite-list=false                    #是否开启白名单认证\nspawn-animals=true                  #是否生成动物\nhardcore=false                      #是否开启极限模式\nsnooper-enabled=true                #是否允许服务器定期发送统计数据\nonline-mode=false                   #是否开启正版认证（开启后只有正版玩家可进入）\nresource-pack=                      #资源包URL（可让玩家选择是否使用服务器提供的资源包）\npvp=true                            #可否PVP\ndifficulty=1                        #难度\nenable-command-block=false          #是否可以使用命令方块\ngamemode=0                          #默认游戏模式\nplayer-idle-timeout=0               #如果该玩家无反应超过这个分钟数将会被踢出\nmax-players=20                      #最大玩家数量\nspawn-monsters=true                 #是否生成怪物\ngenerate-structures=true            #是否生成建筑物\nview-distance=10                    #客户端视野距离的上限\nmotd=A Minecraft Server             #服务器在服务器列表页所显示的信息\n```\n可以按照注释自己进行修改，注意如果没有购买正版需要将`online-mode`一项改为`false`。\n\n一切完成后新开一个screen来启动MC：\n\n\tscreen -S mc\n\t\n这时相当于进入一个新终端，`mc`是这个screen的名字。在里面继续执行之前的java启动命令就可以正常启动游戏了。在screen中只要按下`Ctrl+A`再按下`Ctrl+D`就可以回到原来的终端了。再想进入这个screen的话运行`screen -r mc`就可以了。想要停止游戏的话输入`stop`就可以了。\n\n然后在本地启动游戏，选多人游戏并输入服务器地址就能连接了。\n\n另外附上基本的OP命令，就可以方便地管(zhuō)理(nòng)其他玩家了：\n\n```ini\n/achievement <give|take> <stat_name|*> [player]\n/ban <name> [reason ...]\n/ban-ip <address|name> [reason ...]\n/banlist [ips|players]\n/blockdata <x> <y> <z> <dataTag>\n/clear [player] [item] [data] [maxCount] [dataTag]\n/clone <x1> <y1> <z1> <x2> <y2> <z2> <x> <y> <z> [maskMode] [cloneMode]\n/debug <start|stop>\n/defaultgamemode <mode>\n/deop <player>\n/difficulty <new difficulty>\n/effect <player> <effect> [seconds] [amplifier] [hideParticles] OR /effect <player> clear\n/enchant <player> <enchantment ID> [level]\n/entitydata <entity> <dataTag>\n/execute <entity> <x> <y> <z> <command> OR /execute <entity> <x> <y> <z> detect <x> <y> <z> <block> <data> <command>\n/fill <x1> <y1> <z1> <x2> <y2> <z2> <TileName> [dataValue] [oldBlockHandling] [dataTag]\n/gamemode <mode> [player]\n/gamerule <rule name> [value]\n/give <player> <item> [amount] [data] [dataTag]\n/help [page|command name]\n/kick <player> [reason ...]\n/kill [player|entity]\n/list\n/me <action ...>\n/op <player>\n/pardon <name>\n/pardon-ip <address>\n/particle <name> <x> <y> <z> <xd> <yd> <zd> <speed> [count] [mode]\n/playsound <sound> <player> [x] [y] [z] [volume] [pitch] [minimumVolume]\n/replaceitem <entity|block> ...\n/save-all\n/save-off\n/save-on\n/say <message ...>\n/scoreboard <objectives|players|teams> ...\n/seed\n/setblock <x> <y> <z> <TileName> [dataValue] [oldBlockHandling] [dataTag]\n/setidletimeout <Minutes until kick>\n/setworldspawn [<x> <y> <z>]\n/spawnpoint [player] [<x> <y> <z>]\n/spreadplayers <x> <z> <spreadDistance> <maxRange> <respectTeams true|false> <player ...>\n/stats <entity|block> ...\n/stop\n/summon <EntityName> [x] [y] [z] [dataTag]\n/tell <player> <private message ...>\n/tellraw <player> <raw json message>\n/testfor <player> [dataTag]\n/testforblock <x> <y> <z> <TileName> [dataValue] [dataTag]\n/testforblocks <x1> <y1> <z1> <x2> <y2> <z2> <x> <y> <z> [mode]\n/time <set|add|query> <value>\n/title <player> <title|subtitle|clear|reset|times> ...\n/toggledownfall\n/tp [target player] <destination player> OR /tp [target player] <x> <y> <z> [<y-rot> <x-rot>]\n/trigger <objective> <add|set> <value>\n/weather <clear|rain|thunder> [duration in seconds]\n/whitelist <on|off|list|add|remove|reload>\n/worldborder <set|center|damage|warning|get|add> ...\n/xp <amount> [player] OR /xp <amount>L [player]\n```","slug":"minecraft","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0tg000y8mpry2ekzu0h","content":"<p>之前想在树莓派上搭建一个Minecraft服务器，但是只限于局域网内玩有点不爽，所以才想在VPS上开服。这个服务器的地址是<strong>mc.shintaku.cc</strong>，欢迎大家过来乱搞。</p>\n<h1 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h1><p>Minecraft是基于Java运行的，所以首先要安装Java环境：</p>\n<pre><code>yum install java\n</code></pre><p>好像比其他平台的安装简单得多。然后为了让Minecraft在后台运行而不受终端操作的干扰，要装一个screen：</p>\n<pre><code>yum install screen\n</code></pre><h1 id=\"启动游戏\"><a href=\"#启动游戏\" class=\"headerlink\" title=\"启动游戏\"></a>启动游戏</h1><p>因为最开始要安装到树莓派上，硬件资源有限，所以这里介绍一个叫<a href=\"https://www.spigotmc.org/\" target=\"_blank\" rel=\"external\">SpigotMC</a>的轻量级MC服务器端，是Bukkit的优化版，但是可能游戏中有些材质无法使用。由于某些原因论坛上不提供编译好的jar包下载，所以我找了一个1.7和1.8通用版本的放到服务器上：</p>\n<pre><code>wget https://www.shintaku.cc/files/spigot.jar\n</code></pre><p>新建一个目录将spigot.jar放进去，然后用以下命令启动：</p>\n<pre><code>java -Xms256M -Xmx512M -jar spigot.jar nogui\n</code></pre><p>后来发现<a href=\"https://minecraft.net/en/download/server\" target=\"_blank\" rel=\"external\">微软官网</a>有了服务器版的下载，所以服务器配置足够好的话运行这个也是没有问题的，同样是先下载对应的版本：</p>\n<pre><code>wget https://s3.amazonaws.com/Minecraft.Download/versions/1.8.9/minecraft_server.1.8.9.jar\n</code></pre><p>地址里改成需要下载的版本号就可以了，启动命令相同：</p>\n<pre><code>java -Xms256M -Xmx512M -jar minecraft_server.1.8.9.jar nogui\n</code></pre><p>其中前两个参数是指定MC运行的内存范围，然后会出现一系列启动信息，最后就是<code>Stopping server</code>。    </p>\n<h1 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h1><p>启动之后MC的目录下会生成一些其他的文件，先编辑<code>eula.txt</code>，将<code>eula</code>的值改为<code>true</code>：</p>\n<pre><code>eula=true\n</code></pre><p>然后编辑<code>server.properties</code>，开始里面应除了一些注释没有其他内容，将以下内容加进去：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">generator-settings</span>=                 #用于设置超平坦世界的函数，留空即可</div><div class=\"line\"><span class=\"attr\">op-permission-level</span>=<span class=\"number\">4</span>               #设置OP的许可权等级</div><div class=\"line\"><span class=\"attr\">allow-nether</span>=<span class=\"literal\">true</span>                   #是否允许生成/进入下界</div><div class=\"line\"><span class=\"attr\">level-name</span>=world                    #世界名称及其文件夹名</div><div class=\"line\"><span class=\"attr\">enable-query</span>=<span class=\"literal\">false</span>                  #允许使用GameSpy4协议的服务器监听器</div><div class=\"line\"><span class=\"attr\">allow-flight</span>=<span class=\"literal\">false</span>                  #是否允许玩家在生存模式透过MOD飞行</div><div class=\"line\"><span class=\"attr\">announce-player-achievements</span>=<span class=\"literal\">true</span>   #是否公开显示玩家成就</div><div class=\"line\"><span class=\"attr\">server-port</span>=<span class=\"number\">25565</span>                   #服务器端口（默认为<span class=\"number\">25565</span>）</div><div class=\"line\"><span class=\"attr\">level-type</span>=DEFAULT                  #世界类型</div><div class=\"line\"><span class=\"attr\">enable-rcon</span>=<span class=\"literal\">false</span>                   #是否允许远程访问服务器仪表盘</div><div class=\"line\"><span class=\"attr\">level-seed</span>=                         #世界种子</div><div class=\"line\"><span class=\"attr\">force-gamemode</span>=<span class=\"literal\">false</span>                #玩家是否总是以默认游戏模式进入服务器</div><div class=\"line\"><span class=\"attr\">server-ip</span>=                          #服务器IP，一般来说留空即可</div><div class=\"line\"><span class=\"attr\">max-build-height</span>=<span class=\"number\">256</span>                #最高建筑高度（最高<span class=\"number\">256</span>）</div><div class=\"line\"><span class=\"attr\">spawn-npcs</span>=<span class=\"literal\">true</span>                     #是否生成村民NPC</div><div class=\"line\"><span class=\"attr\">white-list</span>=<span class=\"literal\">false</span>                    #是否开启白名单认证</div><div class=\"line\"><span class=\"attr\">spawn-animals</span>=<span class=\"literal\">true</span>                  #是否生成动物</div><div class=\"line\"><span class=\"attr\">hardcore</span>=<span class=\"literal\">false</span>                      #是否开启极限模式</div><div class=\"line\"><span class=\"attr\">snooper-enabled</span>=<span class=\"literal\">true</span>                #是否允许服务器定期发送统计数据</div><div class=\"line\"><span class=\"attr\">online-mode</span>=<span class=\"literal\">false</span>                   #是否开启正版认证（开启后只有正版玩家可进入）</div><div class=\"line\"><span class=\"attr\">resource-pack</span>=                      #资源包URL（可让玩家选择是否使用服务器提供的资源包）</div><div class=\"line\"><span class=\"attr\">pvp</span>=<span class=\"literal\">true</span>                            #可否PVP</div><div class=\"line\"><span class=\"attr\">difficulty</span>=<span class=\"number\">1</span>                        #难度</div><div class=\"line\"><span class=\"attr\">enable-command-block</span>=<span class=\"literal\">false</span>          #是否可以使用命令方块</div><div class=\"line\"><span class=\"attr\">gamemode</span>=<span class=\"number\">0</span>                          #默认游戏模式</div><div class=\"line\"><span class=\"attr\">player-idle-timeout</span>=<span class=\"number\">0</span>               #如果该玩家无反应超过这个分钟数将会被踢出</div><div class=\"line\"><span class=\"attr\">max-players</span>=<span class=\"number\">20</span>                      #最大玩家数量</div><div class=\"line\"><span class=\"attr\">spawn-monsters</span>=<span class=\"literal\">true</span>                 #是否生成怪物</div><div class=\"line\"><span class=\"attr\">generate-structures</span>=<span class=\"literal\">true</span>            #是否生成建筑物</div><div class=\"line\"><span class=\"attr\">view-distance</span>=<span class=\"number\">10</span>                    #客户端视野距离的上限</div><div class=\"line\"><span class=\"attr\">motd</span>=A Minecraft Server             #服务器在服务器列表页所显示的信息</div></pre></td></tr></table></figure>\n<p>可以按照注释自己进行修改，注意如果没有购买正版需要将<code>online-mode</code>一项改为<code>false</code>。</p>\n<p>一切完成后新开一个screen来启动MC：</p>\n<pre><code>screen -S mc\n</code></pre><p>这时相当于进入一个新终端，<code>mc</code>是这个screen的名字。在里面继续执行之前的java启动命令就可以正常启动游戏了。在screen中只要按下<code>Ctrl+A</code>再按下<code>Ctrl+D</code>就可以回到原来的终端了。再想进入这个screen的话运行<code>screen -r mc</code>就可以了。想要停止游戏的话输入<code>stop</code>就可以了。</p>\n<p>然后在本地启动游戏，选多人游戏并输入服务器地址就能连接了。</p>\n<p>另外附上基本的OP命令，就可以方便地管(zhuō)理(nòng)其他玩家了：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">/achievement &lt;give|take&gt; &lt;stat_name|*&gt; [player]</div><div class=\"line\">/ban &lt;name&gt; [reason ...]</div><div class=\"line\">/ban-ip &lt;address|name&gt; [reason ...]</div><div class=\"line\">/banlist [ips|players]</div><div class=\"line\">/blockdata &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;dataTag&gt;</div><div class=\"line\">/clear [player] [item] [data] [maxCount] [dataTag]</div><div class=\"line\">/clone &lt;x1&gt; &lt;y1&gt; &lt;z1&gt; &lt;x2&gt; &lt;y2&gt; &lt;z2&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; [maskMode] [cloneMode]</div><div class=\"line\">/debug &lt;start|stop&gt;</div><div class=\"line\">/defaultgamemode &lt;mode&gt;</div><div class=\"line\">/deop &lt;player&gt;</div><div class=\"line\">/difficulty &lt;new difficulty&gt;</div><div class=\"line\">/effect &lt;player&gt; &lt;effect&gt; [seconds] [amplifier] [hideParticles] OR /effect &lt;player&gt; clear</div><div class=\"line\">/enchant &lt;player&gt; &lt;enchantment ID&gt; [level]</div><div class=\"line\">/entitydata &lt;entity&gt; &lt;dataTag&gt;</div><div class=\"line\">/execute &lt;entity&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;command&gt; OR /execute &lt;entity&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; detect &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;block&gt; &lt;data&gt; &lt;command&gt;</div><div class=\"line\">/fill &lt;x1&gt; &lt;y1&gt; &lt;z1&gt; &lt;x2&gt; &lt;y2&gt; &lt;z2&gt; &lt;TileName&gt; [dataValue] [oldBlockHandling] [dataTag]</div><div class=\"line\">/gamemode &lt;mode&gt; [player]</div><div class=\"line\">/gamerule &lt;rule name&gt; [value]</div><div class=\"line\">/give &lt;player&gt; &lt;item&gt; [amount] [data] [dataTag]</div><div class=\"line\">/help [page|command name]</div><div class=\"line\">/kick &lt;player&gt; [reason ...]</div><div class=\"line\">/kill [player|entity]</div><div class=\"line\">/list</div><div class=\"line\">/me &lt;action ...&gt;</div><div class=\"line\">/op &lt;player&gt;</div><div class=\"line\">/pardon &lt;name&gt;</div><div class=\"line\">/pardon-ip &lt;address&gt;</div><div class=\"line\">/particle &lt;name&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;xd&gt; &lt;yd&gt; &lt;zd&gt; &lt;speed&gt; [count] [mode]</div><div class=\"line\">/playsound &lt;sound&gt; &lt;player&gt; [x] [y] [z] [volume] [pitch] [minimumVolume]</div><div class=\"line\">/replaceitem &lt;entity|block&gt; ...</div><div class=\"line\">/save-all</div><div class=\"line\">/save-off</div><div class=\"line\">/save-on</div><div class=\"line\">/say &lt;message ...&gt;</div><div class=\"line\">/scoreboard &lt;objectives|players|teams&gt; ...</div><div class=\"line\">/seed</div><div class=\"line\">/setblock &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;TileName&gt; [dataValue] [oldBlockHandling] [dataTag]</div><div class=\"line\">/setidletimeout &lt;Minutes until kick&gt;</div><div class=\"line\">/setworldspawn [&lt;x&gt; &lt;y&gt; &lt;z&gt;]</div><div class=\"line\">/spawnpoint [player] [&lt;x&gt; &lt;y&gt; &lt;z&gt;]</div><div class=\"line\">/spreadplayers &lt;x&gt; &lt;z&gt; &lt;spreadDistance&gt; &lt;maxRange&gt; &lt;respectTeams true|false&gt; &lt;player ...&gt;</div><div class=\"line\">/stats &lt;entity|block&gt; ...</div><div class=\"line\">/stop</div><div class=\"line\">/summon &lt;EntityName&gt; [x] [y] [z] [dataTag]</div><div class=\"line\">/tell &lt;player&gt; &lt;private message ...&gt;</div><div class=\"line\">/tellraw &lt;player&gt; &lt;raw json message&gt;</div><div class=\"line\">/testfor &lt;player&gt; [dataTag]</div><div class=\"line\">/testforblock &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;TileName&gt; [dataValue] [dataTag]</div><div class=\"line\">/testforblocks &lt;x1&gt; &lt;y1&gt; &lt;z1&gt; &lt;x2&gt; &lt;y2&gt; &lt;z2&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; [mode]</div><div class=\"line\">/time &lt;set|add|query&gt; &lt;value&gt;</div><div class=\"line\">/title &lt;player&gt; &lt;title|subtitle|clear|reset|times&gt; ...</div><div class=\"line\">/toggledownfall</div><div class=\"line\">/tp [target player] &lt;destination player&gt; OR /tp [target player] &lt;x&gt; &lt;y&gt; &lt;z&gt; [&lt;y-rot&gt; &lt;x-rot&gt;]</div><div class=\"line\">/trigger &lt;objective&gt; &lt;add|set&gt; &lt;value&gt;</div><div class=\"line\">/weather &lt;clear|rain|thunder&gt; [duration in seconds]</div><div class=\"line\">/whitelist &lt;on|off|list|add|remove|reload&gt;</div><div class=\"line\">/worldborder &lt;set|center|damage|warning|get|add&gt; ...</div><div class=\"line\">/xp &lt;amount&gt; [player] OR /xp &lt;amount&gt;L [player]</div></pre></td></tr></table></figure>","excerpt":"","more":"<p>之前想在树莓派上搭建一个Minecraft服务器，但是只限于局域网内玩有点不爽，所以才想在VPS上开服。这个服务器的地址是<strong>mc.shintaku.cc</strong>，欢迎大家过来乱搞。</p>\n<h1 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h1><p>Minecraft是基于Java运行的，所以首先要安装Java环境：</p>\n<pre><code>yum install java\n</code></pre><p>好像比其他平台的安装简单得多。然后为了让Minecraft在后台运行而不受终端操作的干扰，要装一个screen：</p>\n<pre><code>yum install screen\n</code></pre><h1 id=\"启动游戏\"><a href=\"#启动游戏\" class=\"headerlink\" title=\"启动游戏\"></a>启动游戏</h1><p>因为最开始要安装到树莓派上，硬件资源有限，所以这里介绍一个叫<a href=\"https://www.spigotmc.org/\">SpigotMC</a>的轻量级MC服务器端，是Bukkit的优化版，但是可能游戏中有些材质无法使用。由于某些原因论坛上不提供编译好的jar包下载，所以我找了一个1.7和1.8通用版本的放到服务器上：</p>\n<pre><code>wget https://www.shintaku.cc/files/spigot.jar\n</code></pre><p>新建一个目录将spigot.jar放进去，然后用以下命令启动：</p>\n<pre><code>java -Xms256M -Xmx512M -jar spigot.jar nogui\n</code></pre><p>后来发现<a href=\"https://minecraft.net/en/download/server\">微软官网</a>有了服务器版的下载，所以服务器配置足够好的话运行这个也是没有问题的，同样是先下载对应的版本：</p>\n<pre><code>wget https://s3.amazonaws.com/Minecraft.Download/versions/1.8.9/minecraft_server.1.8.9.jar\n</code></pre><p>地址里改成需要下载的版本号就可以了，启动命令相同：</p>\n<pre><code>java -Xms256M -Xmx512M -jar minecraft_server.1.8.9.jar nogui\n</code></pre><p>其中前两个参数是指定MC运行的内存范围，然后会出现一系列启动信息，最后就是<code>Stopping server</code>。    </p>\n<h1 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h1><p>启动之后MC的目录下会生成一些其他的文件，先编辑<code>eula.txt</code>，将<code>eula</code>的值改为<code>true</code>：</p>\n<pre><code>eula=true\n</code></pre><p>然后编辑<code>server.properties</code>，开始里面应除了一些注释没有其他内容，将以下内容加进去：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">generator-settings</span>=                 #用于设置超平坦世界的函数，留空即可</div><div class=\"line\"><span class=\"attr\">op-permission-level</span>=<span class=\"number\">4</span>               #设置OP的许可权等级</div><div class=\"line\"><span class=\"attr\">allow-nether</span>=<span class=\"literal\">true</span>                   #是否允许生成/进入下界</div><div class=\"line\"><span class=\"attr\">level-name</span>=world                    #世界名称及其文件夹名</div><div class=\"line\"><span class=\"attr\">enable-query</span>=<span class=\"literal\">false</span>                  #允许使用GameSpy4协议的服务器监听器</div><div class=\"line\"><span class=\"attr\">allow-flight</span>=<span class=\"literal\">false</span>                  #是否允许玩家在生存模式透过MOD飞行</div><div class=\"line\"><span class=\"attr\">announce-player-achievements</span>=<span class=\"literal\">true</span>   #是否公开显示玩家成就</div><div class=\"line\"><span class=\"attr\">server-port</span>=<span class=\"number\">25565</span>                   #服务器端口（默认为<span class=\"number\">25565</span>）</div><div class=\"line\"><span class=\"attr\">level-type</span>=DEFAULT                  #世界类型</div><div class=\"line\"><span class=\"attr\">enable-rcon</span>=<span class=\"literal\">false</span>                   #是否允许远程访问服务器仪表盘</div><div class=\"line\"><span class=\"attr\">level-seed</span>=                         #世界种子</div><div class=\"line\"><span class=\"attr\">force-gamemode</span>=<span class=\"literal\">false</span>                #玩家是否总是以默认游戏模式进入服务器</div><div class=\"line\"><span class=\"attr\">server-ip</span>=                          #服务器IP，一般来说留空即可</div><div class=\"line\"><span class=\"attr\">max-build-height</span>=<span class=\"number\">256</span>                #最高建筑高度（最高<span class=\"number\">256</span>）</div><div class=\"line\"><span class=\"attr\">spawn-npcs</span>=<span class=\"literal\">true</span>                     #是否生成村民NPC</div><div class=\"line\"><span class=\"attr\">white-list</span>=<span class=\"literal\">false</span>                    #是否开启白名单认证</div><div class=\"line\"><span class=\"attr\">spawn-animals</span>=<span class=\"literal\">true</span>                  #是否生成动物</div><div class=\"line\"><span class=\"attr\">hardcore</span>=<span class=\"literal\">false</span>                      #是否开启极限模式</div><div class=\"line\"><span class=\"attr\">snooper-enabled</span>=<span class=\"literal\">true</span>                #是否允许服务器定期发送统计数据</div><div class=\"line\"><span class=\"attr\">online-mode</span>=<span class=\"literal\">false</span>                   #是否开启正版认证（开启后只有正版玩家可进入）</div><div class=\"line\"><span class=\"attr\">resource-pack</span>=                      #资源包URL（可让玩家选择是否使用服务器提供的资源包）</div><div class=\"line\"><span class=\"attr\">pvp</span>=<span class=\"literal\">true</span>                            #可否PVP</div><div class=\"line\"><span class=\"attr\">difficulty</span>=<span class=\"number\">1</span>                        #难度</div><div class=\"line\"><span class=\"attr\">enable-command-block</span>=<span class=\"literal\">false</span>          #是否可以使用命令方块</div><div class=\"line\"><span class=\"attr\">gamemode</span>=<span class=\"number\">0</span>                          #默认游戏模式</div><div class=\"line\"><span class=\"attr\">player-idle-timeout</span>=<span class=\"number\">0</span>               #如果该玩家无反应超过这个分钟数将会被踢出</div><div class=\"line\"><span class=\"attr\">max-players</span>=<span class=\"number\">20</span>                      #最大玩家数量</div><div class=\"line\"><span class=\"attr\">spawn-monsters</span>=<span class=\"literal\">true</span>                 #是否生成怪物</div><div class=\"line\"><span class=\"attr\">generate-structures</span>=<span class=\"literal\">true</span>            #是否生成建筑物</div><div class=\"line\"><span class=\"attr\">view-distance</span>=<span class=\"number\">10</span>                    #客户端视野距离的上限</div><div class=\"line\"><span class=\"attr\">motd</span>=A Minecraft Server             #服务器在服务器列表页所显示的信息</div></pre></td></tr></table></figure>\n<p>可以按照注释自己进行修改，注意如果没有购买正版需要将<code>online-mode</code>一项改为<code>false</code>。</p>\n<p>一切完成后新开一个screen来启动MC：</p>\n<pre><code>screen -S mc\n</code></pre><p>这时相当于进入一个新终端，<code>mc</code>是这个screen的名字。在里面继续执行之前的java启动命令就可以正常启动游戏了。在screen中只要按下<code>Ctrl+A</code>再按下<code>Ctrl+D</code>就可以回到原来的终端了。再想进入这个screen的话运行<code>screen -r mc</code>就可以了。想要停止游戏的话输入<code>stop</code>就可以了。</p>\n<p>然后在本地启动游戏，选多人游戏并输入服务器地址就能连接了。</p>\n<p>另外附上基本的OP命令，就可以方便地管(zhuō)理(nòng)其他玩家了：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">/achievement &lt;give|take&gt; &lt;stat_name|*&gt; [player]</div><div class=\"line\">/ban &lt;name&gt; [reason ...]</div><div class=\"line\">/ban-ip &lt;address|name&gt; [reason ...]</div><div class=\"line\">/banlist [ips|players]</div><div class=\"line\">/blockdata &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;dataTag&gt;</div><div class=\"line\">/clear [player] [item] [data] [maxCount] [dataTag]</div><div class=\"line\">/clone &lt;x1&gt; &lt;y1&gt; &lt;z1&gt; &lt;x2&gt; &lt;y2&gt; &lt;z2&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; [maskMode] [cloneMode]</div><div class=\"line\">/debug &lt;start|stop&gt;</div><div class=\"line\">/defaultgamemode &lt;mode&gt;</div><div class=\"line\">/deop &lt;player&gt;</div><div class=\"line\">/difficulty &lt;new difficulty&gt;</div><div class=\"line\">/effect &lt;player&gt; &lt;effect&gt; [seconds] [amplifier] [hideParticles] OR /effect &lt;player&gt; clear</div><div class=\"line\">/enchant &lt;player&gt; &lt;enchantment ID&gt; [level]</div><div class=\"line\">/entitydata &lt;entity&gt; &lt;dataTag&gt;</div><div class=\"line\">/execute &lt;entity&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;command&gt; OR /execute &lt;entity&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; detect &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;block&gt; &lt;data&gt; &lt;command&gt;</div><div class=\"line\">/fill &lt;x1&gt; &lt;y1&gt; &lt;z1&gt; &lt;x2&gt; &lt;y2&gt; &lt;z2&gt; &lt;TileName&gt; [dataValue] [oldBlockHandling] [dataTag]</div><div class=\"line\">/gamemode &lt;mode&gt; [player]</div><div class=\"line\">/gamerule &lt;rule name&gt; [value]</div><div class=\"line\">/give &lt;player&gt; &lt;item&gt; [amount] [data] [dataTag]</div><div class=\"line\">/help [page|command name]</div><div class=\"line\">/kick &lt;player&gt; [reason ...]</div><div class=\"line\">/kill [player|entity]</div><div class=\"line\">/list</div><div class=\"line\">/me &lt;action ...&gt;</div><div class=\"line\">/op &lt;player&gt;</div><div class=\"line\">/pardon &lt;name&gt;</div><div class=\"line\">/pardon-ip &lt;address&gt;</div><div class=\"line\">/particle &lt;name&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;xd&gt; &lt;yd&gt; &lt;zd&gt; &lt;speed&gt; [count] [mode]</div><div class=\"line\">/playsound &lt;sound&gt; &lt;player&gt; [x] [y] [z] [volume] [pitch] [minimumVolume]</div><div class=\"line\">/replaceitem &lt;entity|block&gt; ...</div><div class=\"line\">/save-all</div><div class=\"line\">/save-off</div><div class=\"line\">/save-on</div><div class=\"line\">/say &lt;message ...&gt;</div><div class=\"line\">/scoreboard &lt;objectives|players|teams&gt; ...</div><div class=\"line\">/seed</div><div class=\"line\">/setblock &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;TileName&gt; [dataValue] [oldBlockHandling] [dataTag]</div><div class=\"line\">/setidletimeout &lt;Minutes until kick&gt;</div><div class=\"line\">/setworldspawn [&lt;x&gt; &lt;y&gt; &lt;z&gt;]</div><div class=\"line\">/spawnpoint [player] [&lt;x&gt; &lt;y&gt; &lt;z&gt;]</div><div class=\"line\">/spreadplayers &lt;x&gt; &lt;z&gt; &lt;spreadDistance&gt; &lt;maxRange&gt; &lt;respectTeams true|false&gt; &lt;player ...&gt;</div><div class=\"line\">/stats &lt;entity|block&gt; ...</div><div class=\"line\">/stop</div><div class=\"line\">/summon &lt;EntityName&gt; [x] [y] [z] [dataTag]</div><div class=\"line\">/tell &lt;player&gt; &lt;private message ...&gt;</div><div class=\"line\">/tellraw &lt;player&gt; &lt;raw json message&gt;</div><div class=\"line\">/testfor &lt;player&gt; [dataTag]</div><div class=\"line\">/testforblock &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;TileName&gt; [dataValue] [dataTag]</div><div class=\"line\">/testforblocks &lt;x1&gt; &lt;y1&gt; &lt;z1&gt; &lt;x2&gt; &lt;y2&gt; &lt;z2&gt; &lt;x&gt; &lt;y&gt; &lt;z&gt; [mode]</div><div class=\"line\">/time &lt;set|add|query&gt; &lt;value&gt;</div><div class=\"line\">/title &lt;player&gt; &lt;title|subtitle|clear|reset|times&gt; ...</div><div class=\"line\">/toggledownfall</div><div class=\"line\">/tp [target player] &lt;destination player&gt; OR /tp [target player] &lt;x&gt; &lt;y&gt; &lt;z&gt; [&lt;y-rot&gt; &lt;x-rot&gt;]</div><div class=\"line\">/trigger &lt;objective&gt; &lt;add|set&gt; &lt;value&gt;</div><div class=\"line\">/weather &lt;clear|rain|thunder&gt; [duration in seconds]</div><div class=\"line\">/whitelist &lt;on|off|list|add|remove|reload&gt;</div><div class=\"line\">/worldborder &lt;set|center|damage|warning|get|add&gt; ...</div><div class=\"line\">/xp &lt;amount&gt; [player] OR /xp &lt;amount&gt;L [player]</div></pre></td></tr></table></figure>"},{"title":"macOS配置PHP开发环境","date":"2016-10-31T13:11:11.000Z","photos":["/img/mpbanner.png"],"_content":"上（shí）班（xí）的时候写PHP都是在开发机上，所以公司配的电脑上一直就没有搭PHP环境。最近我预料到要写一个Web的项目，所以提前搭一下环境备用。\n\n# 安装MySQL\n可以直接通过homebrew安装：\n\n\tbrew install mysql\n\n安装完成后第一次启动MySQL：\n\n\tbrew services start mysql\n\t\n然后就可以用`mysql_secure_installation`初始化设置一下MySQL，包括root密码等等。\n\t\n开机启动`homebrew.mxcl.mysql.plist`已经默认添加到`~/Library/LaunchAgents`里了，所以不用再设置了。\n\n# 安装Nginx\n同样Nginx也可以通过homebrew安装：\n\n\tbrew install nginx\n\t\n安装完成后直接用`nginx`命令就可以启动。\n\n但是Nginx的开机启动项并没有默认添加，我们可以手动将它添加进去：\n\n\tcp /usr/local/opt/nginx/homebrew.mxcl.nginx.plist ~/Library/LaunchAgents/\n\t\n# 配置PHP\nmacOS默认是安装好PHP的，所以就不想再安装其他版本了。\n\n先编辑`/private/etc/php.ini`，如果没有就复制一份`php.ini.default`，然后配置一下时区和数据库socket：\n\n```ini\ndate.timezone = \"Asia/Shanghai\"\npdo_mysql.default_socket = /tmp/mysql.sock\n```\n\n因为我要用**~~噫~~yii**框架，所以改了这一项，如果用到了MySQL的其他函数需要修改相应的`mysql.default_socket`或`mysqli.default_socket`。\n\n然后编辑`/private/etc/php-fpm.conf`，在里面指定一下`error_log`的路径：\n\n```sh\nerror_log = /usr/local/var/log/php-fpm/error.log\n```\n\n然后直接用`php-fpm`命令启动即可。\n\n接着去配置一下`/usr/local/etc/nginx/nginx.conf`，将php的一段去掉注释，并修改`fastcgi_param`：\n\n```nginx\nlocation ~ \\.php$ {\n    root           html;\n    fastcgi_pass   127.0.0.1:9000;\n    fastcgi_index  index.php;\n    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n    include        fastcgi_params;\n}\n```\n\n然后执行`nginx -s reload`重新加载配置。\n\n然后也可以配置一下php-fpm的开机启动，直接新建`~/Library/LaunchAgents/net.php.php-fpm.plist`文件：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n  <dict>\n    <key>Label</key>\n    <string>net.php.php-fpm</string>\n    <key>RunAtLoad</key>\n    <true/>\n    <key>Program</key>\n    <string>/usr/sbin/php-fpm</string>\n  </dict>\n</plist>\n```\n\n保存后将其权限设为**600**即可，然后执行启动：\n\n\tlaunchctl load ~/Library/LaunchAgents/net.php.php-fpm.plist\n\t\n如果提示`Service is disabled`，上面的命令加上`-w`参数再执行就行了。","source":"_posts/mac-php.md","raw":"title: macOS配置PHP开发环境\ndate: 2016-10-31 21:11:11\ntags: [macOS, PHP, Nginx, MySQL, LEMP]\ncategories: [手帐, 实习]\nphotos: \n\t- /img/mpbanner.png\n---\n上（shí）班（xí）的时候写PHP都是在开发机上，所以公司配的电脑上一直就没有搭PHP环境。最近我预料到要写一个Web的项目，所以提前搭一下环境备用。\n\n# 安装MySQL\n可以直接通过homebrew安装：\n\n\tbrew install mysql\n\n安装完成后第一次启动MySQL：\n\n\tbrew services start mysql\n\t\n然后就可以用`mysql_secure_installation`初始化设置一下MySQL，包括root密码等等。\n\t\n开机启动`homebrew.mxcl.mysql.plist`已经默认添加到`~/Library/LaunchAgents`里了，所以不用再设置了。\n\n# 安装Nginx\n同样Nginx也可以通过homebrew安装：\n\n\tbrew install nginx\n\t\n安装完成后直接用`nginx`命令就可以启动。\n\n但是Nginx的开机启动项并没有默认添加，我们可以手动将它添加进去：\n\n\tcp /usr/local/opt/nginx/homebrew.mxcl.nginx.plist ~/Library/LaunchAgents/\n\t\n# 配置PHP\nmacOS默认是安装好PHP的，所以就不想再安装其他版本了。\n\n先编辑`/private/etc/php.ini`，如果没有就复制一份`php.ini.default`，然后配置一下时区和数据库socket：\n\n```ini\ndate.timezone = \"Asia/Shanghai\"\npdo_mysql.default_socket = /tmp/mysql.sock\n```\n\n因为我要用**~~噫~~yii**框架，所以改了这一项，如果用到了MySQL的其他函数需要修改相应的`mysql.default_socket`或`mysqli.default_socket`。\n\n然后编辑`/private/etc/php-fpm.conf`，在里面指定一下`error_log`的路径：\n\n```sh\nerror_log = /usr/local/var/log/php-fpm/error.log\n```\n\n然后直接用`php-fpm`命令启动即可。\n\n接着去配置一下`/usr/local/etc/nginx/nginx.conf`，将php的一段去掉注释，并修改`fastcgi_param`：\n\n```nginx\nlocation ~ \\.php$ {\n    root           html;\n    fastcgi_pass   127.0.0.1:9000;\n    fastcgi_index  index.php;\n    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n    include        fastcgi_params;\n}\n```\n\n然后执行`nginx -s reload`重新加载配置。\n\n然后也可以配置一下php-fpm的开机启动，直接新建`~/Library/LaunchAgents/net.php.php-fpm.plist`文件：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n  <dict>\n    <key>Label</key>\n    <string>net.php.php-fpm</string>\n    <key>RunAtLoad</key>\n    <true/>\n    <key>Program</key>\n    <string>/usr/sbin/php-fpm</string>\n  </dict>\n</plist>\n```\n\n保存后将其权限设为**600**即可，然后执行启动：\n\n\tlaunchctl load ~/Library/LaunchAgents/net.php.php-fpm.plist\n\t\n如果提示`Service is disabled`，上面的命令加上`-w`参数再执行就行了。","slug":"mac-php","published":1,"updated":"2017-02-18T11:33:25.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0tl00118mprbhzhzztv","content":"<p>上（shí）班（xí）的时候写PHP都是在开发机上，所以公司配的电脑上一直就没有搭PHP环境。最近我预料到要写一个Web的项目，所以提前搭一下环境备用。</p>\n<h1 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h1><p>可以直接通过homebrew安装：</p>\n<pre><code>brew install mysql\n</code></pre><p>安装完成后第一次启动MySQL：</p>\n<pre><code>brew services start mysql\n</code></pre><p>然后就可以用<code>mysql_secure_installation</code>初始化设置一下MySQL，包括root密码等等。</p>\n<p>开机启动<code>homebrew.mxcl.mysql.plist</code>已经默认添加到<code>~/Library/LaunchAgents</code>里了，所以不用再设置了。</p>\n<h1 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h1><p>同样Nginx也可以通过homebrew安装：</p>\n<pre><code>brew install nginx\n</code></pre><p>安装完成后直接用<code>nginx</code>命令就可以启动。</p>\n<p>但是Nginx的开机启动项并没有默认添加，我们可以手动将它添加进去：</p>\n<pre><code>cp /usr/local/opt/nginx/homebrew.mxcl.nginx.plist ~/Library/LaunchAgents/\n</code></pre><h1 id=\"配置PHP\"><a href=\"#配置PHP\" class=\"headerlink\" title=\"配置PHP\"></a>配置PHP</h1><p>macOS默认是安装好PHP的，所以就不想再安装其他版本了。</p>\n<p>先编辑<code>/private/etc/php.ini</code>，如果没有就复制一份<code>php.ini.default</code>，然后配置一下时区和数据库socket：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">date.timezone = \"Asia/Shanghai\"</div><div class=\"line\">pdo_mysql.default_socket = /tmp/mysql.sock</div></pre></td></tr></table></figure>\n<p>因为我要用<strong><del>噫</del>yii</strong>框架，所以改了这一项，如果用到了MySQL的其他函数需要修改相应的<code>mysql.default_socket</code>或<code>mysqli.default_socket</code>。</p>\n<p>然后编辑<code>/private/etc/php-fpm.conf</code>，在里面指定一下<code>error_log</code>的路径：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">error_log = /usr/<span class=\"built_in\">local</span>/var/<span class=\"built_in\">log</span>/php-fpm/error.log</div></pre></td></tr></table></figure>\n<p>然后直接用<code>php-fpm</code>命令启动即可。</p>\n<p>接着去配置一下<code>/usr/local/etc/nginx/nginx.conf</code>，将php的一段去掉注释，并修改<code>fastcgi_param</code>：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">root</span>           html;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_pass</span>   <span class=\"number\">127.0.0.1:9000</span>;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_index</span>  index.php;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_param</span>  SCRIPT_FILENAME  <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</div><div class=\"line\">    <span class=\"attribute\">include</span>        fastcgi_params;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后执行<code>nginx -s reload</code>重新加载配置。</p>\n<p>然后也可以配置一下php-fpm的开机启动，直接新建<code>~/Library/LaunchAgents/net.php.php-fpm.plist</code>文件：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plist</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Label<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>net.php.php-fpm<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>RunAtLoad<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Program<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>/usr/sbin/php-fpm<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plist</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>保存后将其权限设为<strong>600</strong>即可，然后执行启动：</p>\n<pre><code>launchctl load ~/Library/LaunchAgents/net.php.php-fpm.plist\n</code></pre><p>如果提示<code>Service is disabled</code>，上面的命令加上<code>-w</code>参数再执行就行了。</p>\n","excerpt":"","more":"<p>上（shí）班（xí）的时候写PHP都是在开发机上，所以公司配的电脑上一直就没有搭PHP环境。最近我预料到要写一个Web的项目，所以提前搭一下环境备用。</p>\n<h1 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h1><p>可以直接通过homebrew安装：</p>\n<pre><code>brew install mysql\n</code></pre><p>安装完成后第一次启动MySQL：</p>\n<pre><code>brew services start mysql\n</code></pre><p>然后就可以用<code>mysql_secure_installation</code>初始化设置一下MySQL，包括root密码等等。</p>\n<p>开机启动<code>homebrew.mxcl.mysql.plist</code>已经默认添加到<code>~/Library/LaunchAgents</code>里了，所以不用再设置了。</p>\n<h1 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h1><p>同样Nginx也可以通过homebrew安装：</p>\n<pre><code>brew install nginx\n</code></pre><p>安装完成后直接用<code>nginx</code>命令就可以启动。</p>\n<p>但是Nginx的开机启动项并没有默认添加，我们可以手动将它添加进去：</p>\n<pre><code>cp /usr/local/opt/nginx/homebrew.mxcl.nginx.plist ~/Library/LaunchAgents/\n</code></pre><h1 id=\"配置PHP\"><a href=\"#配置PHP\" class=\"headerlink\" title=\"配置PHP\"></a>配置PHP</h1><p>macOS默认是安装好PHP的，所以就不想再安装其他版本了。</p>\n<p>先编辑<code>/private/etc/php.ini</code>，如果没有就复制一份<code>php.ini.default</code>，然后配置一下时区和数据库socket：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">date.timezone = \"Asia/Shanghai\"</div><div class=\"line\">pdo_mysql.default_socket = /tmp/mysql.sock</div></pre></td></tr></table></figure>\n<p>因为我要用<strong><del>噫</del>yii</strong>框架，所以改了这一项，如果用到了MySQL的其他函数需要修改相应的<code>mysql.default_socket</code>或<code>mysqli.default_socket</code>。</p>\n<p>然后编辑<code>/private/etc/php-fpm.conf</code>，在里面指定一下<code>error_log</code>的路径：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">error_log = /usr/<span class=\"built_in\">local</span>/var/<span class=\"built_in\">log</span>/php-fpm/error.log</div></pre></td></tr></table></figure>\n<p>然后直接用<code>php-fpm</code>命令启动即可。</p>\n<p>接着去配置一下<code>/usr/local/etc/nginx/nginx.conf</code>，将php的一段去掉注释，并修改<code>fastcgi_param</code>：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~ \\.php$</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">root</span>           html;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_pass</span>   <span class=\"number\">127.0.0.1:9000</span>;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_index</span>  index.php;</div><div class=\"line\">    <span class=\"attribute\">fastcgi_param</span>  SCRIPT_FILENAME  <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</div><div class=\"line\">    <span class=\"attribute\">include</span>        fastcgi_params;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后执行<code>nginx -s reload</code>重新加载配置。</p>\n<p>然后也可以配置一下php-fpm的开机启动，直接新建<code>~/Library/LaunchAgents/net.php.php-fpm.plist</code>文件：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plist</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Label<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>net.php.php-fpm<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>RunAtLoad<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Program<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>/usr/sbin/php-fpm<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plist</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>保存后将其权限设为<strong>600</strong>即可，然后执行启动：</p>\n<pre><code>launchctl load ~/Library/LaunchAgents/net.php.php-fpm.plist\n</code></pre><p>如果提示<code>Service is disabled</code>，上面的命令加上<code>-w</code>参数再执行就行了。</p>\n"},{"title":"「艦これ」Android版運用","date":"2016-11-27T14:22:22.000Z","photos":["/img/kcabanner.png"],"_content":"舰队Collection之前出了Android版，最开始需要预约抽签才能登录，2016年8月份开始全体提督都可以玩了。Android版有一个好处就是（除首次登录外）**无需代理**即可随时随地肝船了。\n\n# 下载安装DMM Game Store\n先到[DMM App Store](http://www.dmm.com/app/-/appstore/download/)下载[安装包](http://portalapp.dmm.com/dmmappstore/DMMGameStore.apk)，安装完毕打开任意代理（只要不是中国大陆的地址就行）后打开游戏中心，点右上角游戏按钮登录：\n\n![DMM Game Store](/img/kcastore.png)\n\n登录后选择**艦隊これくしょん -艦これ-**并下载：\n\n![ダウンロード](/img/kcadownload.png)\n\n# 安装运行「艦これ」\n下载完了直接安装就行了，此时就不需要代理了，然后直接启动：\n\n![スタート](/img/kcastart.png)\n\n此时按**~~ミュージック~~スタート**就进入游戏了，游戏本身和网页版大同小异：\n\n![Kan Colle](/img/kcaandroid.png)","source":"_posts/kancolle-android.md","raw":"title: 「艦これ」Android版運用\ndate: 2016-11-27 22:22:22\ntags: [舰队Collection, 游戏, Android]\ncategories: [ACG, 艦隊これくしょん]\nphotos: \n\t- /img/kcabanner.png\n---\n舰队Collection之前出了Android版，最开始需要预约抽签才能登录，2016年8月份开始全体提督都可以玩了。Android版有一个好处就是（除首次登录外）**无需代理**即可随时随地肝船了。\n\n# 下载安装DMM Game Store\n先到[DMM App Store](http://www.dmm.com/app/-/appstore/download/)下载[安装包](http://portalapp.dmm.com/dmmappstore/DMMGameStore.apk)，安装完毕打开任意代理（只要不是中国大陆的地址就行）后打开游戏中心，点右上角游戏按钮登录：\n\n![DMM Game Store](/img/kcastore.png)\n\n登录后选择**艦隊これくしょん -艦これ-**并下载：\n\n![ダウンロード](/img/kcadownload.png)\n\n# 安装运行「艦これ」\n下载完了直接安装就行了，此时就不需要代理了，然后直接启动：\n\n![スタート](/img/kcastart.png)\n\n此时按**~~ミュージック~~スタート**就进入游戏了，游戏本身和网页版大同小异：\n\n![Kan Colle](/img/kcaandroid.png)","slug":"kancolle-android","published":1,"updated":"2017-01-09T08:19:57.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0tm00148mpr83mg434a","content":"<p>舰队Collection之前出了Android版，最开始需要预约抽签才能登录，2016年8月份开始全体提督都可以玩了。Android版有一个好处就是（除首次登录外）<strong>无需代理</strong>即可随时随地肝船了。</p>\n<h1 id=\"下载安装DMM-Game-Store\"><a href=\"#下载安装DMM-Game-Store\" class=\"headerlink\" title=\"下载安装DMM Game Store\"></a>下载安装DMM Game Store</h1><p>先到<a href=\"http://www.dmm.com/app/-/appstore/download/\" target=\"_blank\" rel=\"external\">DMM App Store</a>下载<a href=\"http://portalapp.dmm.com/dmmappstore/DMMGameStore.apk\" target=\"_blank\" rel=\"external\">安装包</a>，安装完毕打开任意代理（只要不是中国大陆的地址就行）后打开游戏中心，点右上角游戏按钮登录：</p>\n<p><img src=\"/img/kcastore.png\" alt=\"DMM Game Store\"></p>\n<p>登录后选择<strong>艦隊これくしょん -艦これ-</strong>并下载：</p>\n<p><img src=\"/img/kcadownload.png\" alt=\"ダウンロード\"></p>\n<h1 id=\"安装运行「艦これ」\"><a href=\"#安装运行「艦これ」\" class=\"headerlink\" title=\"安装运行「艦これ」\"></a>安装运行「艦これ」</h1><p>下载完了直接安装就行了，此时就不需要代理了，然后直接启动：</p>\n<p><img src=\"/img/kcastart.png\" alt=\"スタート\"></p>\n<p>此时按<strong><del>ミュージック</del>スタート</strong>就进入游戏了，游戏本身和网页版大同小异：</p>\n<p><img src=\"/img/kcaandroid.png\" alt=\"Kan Colle\"></p>\n","excerpt":"","more":"<p>舰队Collection之前出了Android版，最开始需要预约抽签才能登录，2016年8月份开始全体提督都可以玩了。Android版有一个好处就是（除首次登录外）<strong>无需代理</strong>即可随时随地肝船了。</p>\n<h1 id=\"下载安装DMM-Game-Store\"><a href=\"#下载安装DMM-Game-Store\" class=\"headerlink\" title=\"下载安装DMM Game Store\"></a>下载安装DMM Game Store</h1><p>先到<a href=\"http://www.dmm.com/app/-/appstore/download/\">DMM App Store</a>下载<a href=\"http://portalapp.dmm.com/dmmappstore/DMMGameStore.apk\">安装包</a>，安装完毕打开任意代理（只要不是中国大陆的地址就行）后打开游戏中心，点右上角游戏按钮登录：</p>\n<p><img src=\"/img/kcastore.png\" alt=\"DMM Game Store\"></p>\n<p>登录后选择<strong>艦隊これくしょん -艦これ-</strong>并下载：</p>\n<p><img src=\"/img/kcadownload.png\" alt=\"ダウンロード\"></p>\n<h1 id=\"安装运行「艦これ」\"><a href=\"#安装运行「艦これ」\" class=\"headerlink\" title=\"安装运行「艦これ」\"></a>安装运行「艦これ」</h1><p>下载完了直接安装就行了，此时就不需要代理了，然后直接启动：</p>\n<p><img src=\"/img/kcastart.png\" alt=\"スタート\"></p>\n<p>此时按<strong><del>ミュージック</del>スタート</strong>就进入游戏了，游戏本身和网页版大同小异：</p>\n<p><img src=\"/img/kcaandroid.png\" alt=\"Kan Colle\"></p>\n"},{"title":"舰娘更改Cookie直接连接","date":"2016-02-29T14:22:22.000Z","photos":["/img/kcbanner.png"],"_content":"> DMM的游戏限制境外玩家登录，因此玩游戏必须要**让DMM认为你是从日本访问的**，境外玩家使用日本的匿名代理是一种常见的手段。而DMM仅仅是在登陆的时候会验证访客的IP地址，因此多了所谓直连的这一种途径。另外，DMM并不会经常改变游戏Token，因此采用任何方法登陆后，都可以通过浏览器的开发者工具将Flash的链接提取出来并保存为书签便可直接登陆游戏。<div style=\"text-align:right\">***———— 萌娘百科***</div>\n\n![地区错误](/img/kcen.png)\n\n之前玩舰娘不是使用ShadowSocks就是使用VPN，后来也曾一度使用改hosts搭配国内VPN的方式（因为只改hosts在有的网络环境下会出现白屏）。觉得这些方式都太繁琐并且过于依赖网络代理，后来就找到一种注入Cookie的方法。\n\n直连方法是利用DMM在大部分时间都不检查用户IP这个特性，通过技术手段绕过IP验证的环节来达到直接连接的目的，更改浏览器或者舰娘辅助工具（比如Poi）的Cookie来使服务器不去验证用户的地域信息。\n\n# 清空Cookie\n首先打开[DMM](http://www.dmm.com/)主页并选择语言为**日本语**：\n\n![选择语言](/img/kcjp.png)\n\n然后清一下Cookie：\n\n![删除Cookie](/img/kccookie.png)\n\n# 注入Cookie\n打开浏览器**开发者工具**中的**控制台**（在Poi中是**显示**菜单中的**Webview开发者工具**），将以下代码粘贴进去并回车：\n\n\tdocument.cookie = \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=osapi.dmm.com;path=/\";\n\tdocument.cookie = \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=203.104.209.7;path=/\";\n\tdocument.cookie = \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=www.dmm.com;path=/netgame/\";\n\tdocument.cookie = \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=log-netgame.dmm.com;path=/\";\n\n![运行代码](/img/kccode.png)\n\n如果出现\n\n> \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=log-netgame.dmm.com;path=/\"\n\t\n则说明注入成功。这时再次进入舰娘的页面[-艦これ-](http://www.dmm.com/netgame/social/-/gadgets/=/app_id=854854/)则会正常打开：\n\n![舰娘主页](/img/kchome.png)\n\n登陆后就会顺利进入游戏了：\n\n![进入游戏](/img/kcgame.png)\n\n楽しもっ！","source":"_posts/kancolle-cookie.md","raw":"title: 舰娘更改Cookie直接连接\ndate: 2016-02-29 22:22:22\ntags: [舰队Collection, 游戏]\ncategories: [ACG, 艦隊これくしょん]\nphotos: \n\t- /img/kcbanner.png\n---\n> DMM的游戏限制境外玩家登录，因此玩游戏必须要**让DMM认为你是从日本访问的**，境外玩家使用日本的匿名代理是一种常见的手段。而DMM仅仅是在登陆的时候会验证访客的IP地址，因此多了所谓直连的这一种途径。另外，DMM并不会经常改变游戏Token，因此采用任何方法登陆后，都可以通过浏览器的开发者工具将Flash的链接提取出来并保存为书签便可直接登陆游戏。<div style=\"text-align:right\">***———— 萌娘百科***</div>\n\n![地区错误](/img/kcen.png)\n\n之前玩舰娘不是使用ShadowSocks就是使用VPN，后来也曾一度使用改hosts搭配国内VPN的方式（因为只改hosts在有的网络环境下会出现白屏）。觉得这些方式都太繁琐并且过于依赖网络代理，后来就找到一种注入Cookie的方法。\n\n直连方法是利用DMM在大部分时间都不检查用户IP这个特性，通过技术手段绕过IP验证的环节来达到直接连接的目的，更改浏览器或者舰娘辅助工具（比如Poi）的Cookie来使服务器不去验证用户的地域信息。\n\n# 清空Cookie\n首先打开[DMM](http://www.dmm.com/)主页并选择语言为**日本语**：\n\n![选择语言](/img/kcjp.png)\n\n然后清一下Cookie：\n\n![删除Cookie](/img/kccookie.png)\n\n# 注入Cookie\n打开浏览器**开发者工具**中的**控制台**（在Poi中是**显示**菜单中的**Webview开发者工具**），将以下代码粘贴进去并回车：\n\n\tdocument.cookie = \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=osapi.dmm.com;path=/\";\n\tdocument.cookie = \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=203.104.209.7;path=/\";\n\tdocument.cookie = \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=www.dmm.com;path=/netgame/\";\n\tdocument.cookie = \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=log-netgame.dmm.com;path=/\";\n\n![运行代码](/img/kccode.png)\n\n如果出现\n\n> \"ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=log-netgame.dmm.com;path=/\"\n\t\n则说明注入成功。这时再次进入舰娘的页面[-艦これ-](http://www.dmm.com/netgame/social/-/gadgets/=/app_id=854854/)则会正常打开：\n\n![舰娘主页](/img/kchome.png)\n\n登陆后就会顺利进入游戏了：\n\n![进入游戏](/img/kcgame.png)\n\n楽しもっ！","slug":"kancolle-cookie","published":1,"updated":"2017-02-17T06:20:09.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0tq00198mpr2d13919q","content":"<blockquote>\n<p>DMM的游戏限制境外玩家登录，因此玩游戏必须要<strong>让DMM认为你是从日本访问的</strong>，境外玩家使用日本的匿名代理是一种常见的手段。而DMM仅仅是在登陆的时候会验证访客的IP地址，因此多了所谓直连的这一种途径。另外，DMM并不会经常改变游戏Token，因此采用任何方法登陆后，都可以通过浏览器的开发者工具将Flash的链接提取出来并保存为书签便可直接登陆游戏。<div style=\"text-align:right\"><strong><em>———— 萌娘百科</em></strong></div></p>\n</blockquote>\n<p><img src=\"/img/kcen.png\" alt=\"地区错误\"></p>\n<p>之前玩舰娘不是使用ShadowSocks就是使用VPN，后来也曾一度使用改hosts搭配国内VPN的方式（因为只改hosts在有的网络环境下会出现白屏）。觉得这些方式都太繁琐并且过于依赖网络代理，后来就找到一种注入Cookie的方法。</p>\n<p>直连方法是利用DMM在大部分时间都不检查用户IP这个特性，通过技术手段绕过IP验证的环节来达到直接连接的目的，更改浏览器或者舰娘辅助工具（比如Poi）的Cookie来使服务器不去验证用户的地域信息。</p>\n<h1 id=\"清空Cookie\"><a href=\"#清空Cookie\" class=\"headerlink\" title=\"清空Cookie\"></a>清空Cookie</h1><p>首先打开<a href=\"http://www.dmm.com/\" target=\"_blank\" rel=\"external\">DMM</a>主页并选择语言为<strong>日本语</strong>：</p>\n<p><img src=\"/img/kcjp.png\" alt=\"选择语言\"></p>\n<p>然后清一下Cookie：</p>\n<p><img src=\"/img/kccookie.png\" alt=\"删除Cookie\"></p>\n<h1 id=\"注入Cookie\"><a href=\"#注入Cookie\" class=\"headerlink\" title=\"注入Cookie\"></a>注入Cookie</h1><p>打开浏览器<strong>开发者工具</strong>中的<strong>控制台</strong>（在Poi中是<strong>显示</strong>菜单中的<strong>Webview开发者工具</strong>），将以下代码粘贴进去并回车：</p>\n<pre><code>document.cookie = &quot;ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=osapi.dmm.com;path=/&quot;;\ndocument.cookie = &quot;ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=203.104.209.7;path=/&quot;;\ndocument.cookie = &quot;ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=www.dmm.com;path=/netgame/&quot;;\ndocument.cookie = &quot;ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=log-netgame.dmm.com;path=/&quot;;\n</code></pre><p><img src=\"/img/kccode.png\" alt=\"运行代码\"></p>\n<p>如果出现</p>\n<blockquote>\n<p>“ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=log-netgame.dmm.com;path=/“</p>\n</blockquote>\n<p>则说明注入成功。这时再次进入舰娘的页面<a href=\"http://www.dmm.com/netgame/social/-/gadgets/=/app_id=854854/\" target=\"_blank\" rel=\"external\">-艦これ-</a>则会正常打开：</p>\n<p><img src=\"/img/kchome.png\" alt=\"舰娘主页\"></p>\n<p>登陆后就会顺利进入游戏了：</p>\n<p><img src=\"/img/kcgame.png\" alt=\"进入游戏\"></p>\n<p>楽しもっ！</p>\n","excerpt":"","more":"<blockquote>\n<p>DMM的游戏限制境外玩家登录，因此玩游戏必须要<strong>让DMM认为你是从日本访问的</strong>，境外玩家使用日本的匿名代理是一种常见的手段。而DMM仅仅是在登陆的时候会验证访客的IP地址，因此多了所谓直连的这一种途径。另外，DMM并不会经常改变游戏Token，因此采用任何方法登陆后，都可以通过浏览器的开发者工具将Flash的链接提取出来并保存为书签便可直接登陆游戏。<div style=\"text-align:right\"><strong><em>———— 萌娘百科</em></strong></div></p>\n</blockquote>\n<p><img src=\"/img/kcen.png\" alt=\"地区错误\"></p>\n<p>之前玩舰娘不是使用ShadowSocks就是使用VPN，后来也曾一度使用改hosts搭配国内VPN的方式（因为只改hosts在有的网络环境下会出现白屏）。觉得这些方式都太繁琐并且过于依赖网络代理，后来就找到一种注入Cookie的方法。</p>\n<p>直连方法是利用DMM在大部分时间都不检查用户IP这个特性，通过技术手段绕过IP验证的环节来达到直接连接的目的，更改浏览器或者舰娘辅助工具（比如Poi）的Cookie来使服务器不去验证用户的地域信息。</p>\n<h1 id=\"清空Cookie\"><a href=\"#清空Cookie\" class=\"headerlink\" title=\"清空Cookie\"></a>清空Cookie</h1><p>首先打开<a href=\"http://www.dmm.com/\">DMM</a>主页并选择语言为<strong>日本语</strong>：</p>\n<p><img src=\"/img/kcjp.png\" alt=\"选择语言\"></p>\n<p>然后清一下Cookie：</p>\n<p><img src=\"/img/kccookie.png\" alt=\"删除Cookie\"></p>\n<h1 id=\"注入Cookie\"><a href=\"#注入Cookie\" class=\"headerlink\" title=\"注入Cookie\"></a>注入Cookie</h1><p>打开浏览器<strong>开发者工具</strong>中的<strong>控制台</strong>（在Poi中是<strong>显示</strong>菜单中的<strong>Webview开发者工具</strong>），将以下代码粘贴进去并回车：</p>\n<pre><code>document.cookie = &quot;ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=osapi.dmm.com;path=/&quot;;\ndocument.cookie = &quot;ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=203.104.209.7;path=/&quot;;\ndocument.cookie = &quot;ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=www.dmm.com;path=/netgame/&quot;;\ndocument.cookie = &quot;ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=log-netgame.dmm.com;path=/&quot;;\n</code></pre><p><img src=\"/img/kccode.png\" alt=\"运行代码\"></p>\n<p>如果出现</p>\n<blockquote>\n<p>“ckcy=1;expires=Sun, 09 Feb 2019 09:00:09 GMT;domain=log-netgame.dmm.com;path=/“</p>\n</blockquote>\n<p>则说明注入成功。这时再次进入舰娘的页面<a href=\"http://www.dmm.com/netgame/social/-/gadgets/=/app_id=854854/\">-艦これ-</a>则会正常打开：</p>\n<p><img src=\"/img/kchome.png\" alt=\"舰娘主页\"></p>\n<p>登陆后就会顺利进入游戏了：</p>\n<p><img src=\"/img/kcgame.png\" alt=\"进入游戏\"></p>\n<p>楽しもっ！</p>\n"},{"title":"搭建Ngrok内网穿透服务","date":"2016-09-01T13:11:11.000Z","photos":["/img/ngbanner.png"],"_content":"\n之前上开源课的时候听说可以通过外网访问局域网电脑获取文件，但由于自己家中的宽带一直不给分配公网地址，所以无法直接访问。\n\n后来又听说可以用[花生壳](http://www.oray.com/)之类的**DDNS**动态解析，即使家中IP总变化也可以通过域名访问。但苦于这样的服务一般是收费的，而且又是使用第三方的服务器容易受制于人，用起来有些不爽，才一直寻找更好的方法。\n\n近日又发现**Ngrok**这样的神器，可以自己搭建内网穿透服务，只用**一台VPS**和**一个域名**就完美地解决了问题。其主要是在客户端与服务端之间建立端到端的隧道进行通信，用固定的域名进行访问以规避了IP变更的不便。\n\n# 服务端\n目前[Ngrok官网](https://ngrok.com/)上放出的2.0以上版本是付费的服务，若要自己搭建需要自行编译1.7的源码。首先将源码从[GitHub](https://github.com/inconshreveable/ngrok)上clone下来：\n\n\tgit clone https://github.com/inconshreveable/ngrok.git\n\n## 编译\n由于该服务是*Go语言*编写的，所以先要安装golang开发环境：\n\n\tyum install golang\n\t\n然后将`NGROK_DOMAIN`这个变量赋成要使用的域名后面要用到，例如使用如下域名，相应的也要在域名解析里将`shintaku.cc`和`*.shintaku.cc`解析到这台VPS的IP上：\n\n\tNGROK_DOMAIN=\"shintaku.cc\"\n\n使用Ngrok官方服务时，下载的客户端使用的是官方证书。我们自己编译服务端和客户端，使用自己的域名也要生成**自签名证书**：\n\n\tcd ngrok\n\topenssl genrsa -out ngrokroot.key 2048\n\topenssl req -x509 -new -nodes -key ngrokroot.key -subj \"/CN=$NGROK_DOMAIN\" -days 36500 -out ngrokroot.crt\n\topenssl genrsa -out snakeoil.key 2048\n\topenssl req -new -key snakeoil.key -subj \"/CN=$NGROK_DOMAIN\" -out snakeoil.csr\n\topenssl x509 -req -in snakeoil.csr -days 36500 -CA ngrokroot.crt -CAkey ngrokroot.key -CAcreateserial -out snakeoil.crt \n\t\n这样就在当前目录下生成了`ngrokroot.crt`、`ngrokroot.key`、`ngrokroot.srl`、`snakeoil.crt`、`snakeoil.csr`、`snakeoil.key`六个文件，将它们复制到相应的目录中：\n\t\n\tcp ngrokroot.crt assets/client/tls/\n\tcp snakeoil.crt assets/server/tls/\n\tcp snakeoil.key assets/server/tls/\n\t\n然后就可以开始编译服务端了：\n\n\tmake release-server\n\n编译好的二进制文件`ngrokd`生成在bin目录下。\n\n## 启动\nngrokd可以在其目录下直接启动，若要想全局使用这个命令可以将其移动到设了环境变量的目录下：\n\n\tcp ./bin/ngrokd /usr/sbin/\n\t\n可以先`ngrokd -h`看一下使用说明，然后就可以通过如下命令启动服务端了：\n\n\tngrokd -domain=\"shintaku.cc\" -httpAddr=\":80\" -httpsAddr=\":443\"\n\t\n启动要像上面一样加参数指定域名和端口。由于这台VPS我没有搭建Web服务，所以80和443端口没有占用，当然默认也是使用这两个端口的，这样在浏览器访问地址时也省得指定非80端口的麻烦了。出现如下信息就说明启动成功了：\n\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.(\\*PrefixLogger).Info:83) [registry] [tun] No affinity cache specified\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for public http connections on [::]:80\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for public https connections on [::]:443\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for control and proxy connections on [::]:4443\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.(\\*PrefixLogger).Info:83) [metrics] Reporting every 30 seconds\n\t\n另外4443端口用于监听客户端，如有必要也可修改。\n\n# 客户端\n## 编译\n客户端的编译和服务端类似，但要使用与服务端相同的文件。可以先在本机安装golang环境，再将VPS上的源码拷贝到本机直接用`make release-client`编译；也可以在VPS上加参数编译其他环境的客户端：\n\n### macOS\n\t\n\tGOOS=darwin GOARCH=amd64 make release-client\n\n### Windows\n\n\tGOOS=windows GOARCH=amd64 make release-client\n\t\n### OpenWrt\n由于OpenWrt上没有对应的Go环境，所以没法用ngrok源码直接编译OpenWrt的客户端。但是[dosgo](https://www.v2ex.com/t/176838)大神写了一个*C语言*版本的[ngrok-c](https://github.com/dosgo/ngrok-c)，文档中也附带了[编译方法](http://www.jianshu.com/p/8428949d946c)。但是编译过程比较复杂，而且自己编译出来的二进制文件体积也不小，比较占空间，所以就在恩山上搜了一个民间高手编译好的装上了，顺带着LuCI界面放到服务器上：\n\n\twget https://www.shintaku.cc/files/ngrokc_ba56781152-1_ar71xx.ipk\n\twget https://www.shintaku.cc/files/luci-app-ngrokc_git-15.290.16504-8c2fd44-1_all.ipk\n\t\n如果安装时遇到问题请确定路由器上是否已经安装了必要的库：\n\n\topkg install libstdcpp\n\topkg install libopenssl\n\t\n## 启动\n### PC\n先创建配置文件`~/.ngrok`并编辑，写入自己的域名和监听端口：\n\n```sh\nserver_addr: \"shintaku.cc:4443\"\ntrust_host_root_certs: false\n```\n\n可以先用`ngrok -h`查看使用说明，然后指定二级域名和要映射的端口启动客户端：\n\n\tngrok -subdomain test 4000\n\t\n就会出现Ngrok的连接状态：\n\t\n> ngrok                                                           (Ctrl+C to quit)\n\n> Tunnel Status                 online\n> Version                       1.7/1.7\n> Forwarding                    http://test.shintaku.cc -> 127.0.0.1:4000\n> Forwarding                    https://test.shintaku.cc -> 127.0.0.1:4000\n> Web Interface                 127.0.0.1:4040\n> \\# Conn                        0\n> Avg Conn Time                 0.00ms\n\t\n然后再访问`test.shintaku.cc`就会发现和`localhost:4000`的内容是一样的，就说明Ngrok连接成功了：\n\n![](/img/ngcompare.png)\n\n也可以通过`localhost:4040`的Web页面查看连接状态：\n\n![Inbound Requests](/img/ngrequests.png)\n\n### OpenWrt\n路由器上装好了以后可以在`服务`-`Ngrok Settings`下设置：\n\n![OpenWrt](/img/ngluci.png)\n\n除了HTTP协议以外，也可映射TCP其他端口，例如ssh的22端口映射到远程的8022端口：\n\n![OpenWrt](/img/ngssh.png)\n\n这时`ssh root@shintaku.cc -p 8022`和`ssh root@192.168.1.1`的效果是一样的，意味着即使在外面也可以访问没有公网地址的路由器了。更进一步，如果给路由器下连接的设备都分配了固定的局域网IP地址，将它们的端口映射到Ngrok服务器的端口，外网同样可以访问，这样就可以做很多事情了。","source":"_posts/ngrok.md","raw":"title: 搭建Ngrok内网穿透服务\ndate: 2016-09-01 21:11:11\ntags: [服务器, VPS, OpenWrt, 路由器]\ncategories: [网络, 网站部署]\nphotos: \n\t- /img/ngbanner.png\n---\n\n之前上开源课的时候听说可以通过外网访问局域网电脑获取文件，但由于自己家中的宽带一直不给分配公网地址，所以无法直接访问。\n\n后来又听说可以用[花生壳](http://www.oray.com/)之类的**DDNS**动态解析，即使家中IP总变化也可以通过域名访问。但苦于这样的服务一般是收费的，而且又是使用第三方的服务器容易受制于人，用起来有些不爽，才一直寻找更好的方法。\n\n近日又发现**Ngrok**这样的神器，可以自己搭建内网穿透服务，只用**一台VPS**和**一个域名**就完美地解决了问题。其主要是在客户端与服务端之间建立端到端的隧道进行通信，用固定的域名进行访问以规避了IP变更的不便。\n\n# 服务端\n目前[Ngrok官网](https://ngrok.com/)上放出的2.0以上版本是付费的服务，若要自己搭建需要自行编译1.7的源码。首先将源码从[GitHub](https://github.com/inconshreveable/ngrok)上clone下来：\n\n\tgit clone https://github.com/inconshreveable/ngrok.git\n\n## 编译\n由于该服务是*Go语言*编写的，所以先要安装golang开发环境：\n\n\tyum install golang\n\t\n然后将`NGROK_DOMAIN`这个变量赋成要使用的域名后面要用到，例如使用如下域名，相应的也要在域名解析里将`shintaku.cc`和`*.shintaku.cc`解析到这台VPS的IP上：\n\n\tNGROK_DOMAIN=\"shintaku.cc\"\n\n使用Ngrok官方服务时，下载的客户端使用的是官方证书。我们自己编译服务端和客户端，使用自己的域名也要生成**自签名证书**：\n\n\tcd ngrok\n\topenssl genrsa -out ngrokroot.key 2048\n\topenssl req -x509 -new -nodes -key ngrokroot.key -subj \"/CN=$NGROK_DOMAIN\" -days 36500 -out ngrokroot.crt\n\topenssl genrsa -out snakeoil.key 2048\n\topenssl req -new -key snakeoil.key -subj \"/CN=$NGROK_DOMAIN\" -out snakeoil.csr\n\topenssl x509 -req -in snakeoil.csr -days 36500 -CA ngrokroot.crt -CAkey ngrokroot.key -CAcreateserial -out snakeoil.crt \n\t\n这样就在当前目录下生成了`ngrokroot.crt`、`ngrokroot.key`、`ngrokroot.srl`、`snakeoil.crt`、`snakeoil.csr`、`snakeoil.key`六个文件，将它们复制到相应的目录中：\n\t\n\tcp ngrokroot.crt assets/client/tls/\n\tcp snakeoil.crt assets/server/tls/\n\tcp snakeoil.key assets/server/tls/\n\t\n然后就可以开始编译服务端了：\n\n\tmake release-server\n\n编译好的二进制文件`ngrokd`生成在bin目录下。\n\n## 启动\nngrokd可以在其目录下直接启动，若要想全局使用这个命令可以将其移动到设了环境变量的目录下：\n\n\tcp ./bin/ngrokd /usr/sbin/\n\t\n可以先`ngrokd -h`看一下使用说明，然后就可以通过如下命令启动服务端了：\n\n\tngrokd -domain=\"shintaku.cc\" -httpAddr=\":80\" -httpsAddr=\":443\"\n\t\n启动要像上面一样加参数指定域名和端口。由于这台VPS我没有搭建Web服务，所以80和443端口没有占用，当然默认也是使用这两个端口的，这样在浏览器访问地址时也省得指定非80端口的麻烦了。出现如下信息就说明启动成功了：\n\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.(\\*PrefixLogger).Info:83) [registry] [tun] No affinity cache specified\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for public http connections on [::]:80\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for public https connections on [::]:443\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for control and proxy connections on [::]:4443\n> [16:58:26 CST 2016/09/01] [INFO] (ngrok/log.(\\*PrefixLogger).Info:83) [metrics] Reporting every 30 seconds\n\t\n另外4443端口用于监听客户端，如有必要也可修改。\n\n# 客户端\n## 编译\n客户端的编译和服务端类似，但要使用与服务端相同的文件。可以先在本机安装golang环境，再将VPS上的源码拷贝到本机直接用`make release-client`编译；也可以在VPS上加参数编译其他环境的客户端：\n\n### macOS\n\t\n\tGOOS=darwin GOARCH=amd64 make release-client\n\n### Windows\n\n\tGOOS=windows GOARCH=amd64 make release-client\n\t\n### OpenWrt\n由于OpenWrt上没有对应的Go环境，所以没法用ngrok源码直接编译OpenWrt的客户端。但是[dosgo](https://www.v2ex.com/t/176838)大神写了一个*C语言*版本的[ngrok-c](https://github.com/dosgo/ngrok-c)，文档中也附带了[编译方法](http://www.jianshu.com/p/8428949d946c)。但是编译过程比较复杂，而且自己编译出来的二进制文件体积也不小，比较占空间，所以就在恩山上搜了一个民间高手编译好的装上了，顺带着LuCI界面放到服务器上：\n\n\twget https://www.shintaku.cc/files/ngrokc_ba56781152-1_ar71xx.ipk\n\twget https://www.shintaku.cc/files/luci-app-ngrokc_git-15.290.16504-8c2fd44-1_all.ipk\n\t\n如果安装时遇到问题请确定路由器上是否已经安装了必要的库：\n\n\topkg install libstdcpp\n\topkg install libopenssl\n\t\n## 启动\n### PC\n先创建配置文件`~/.ngrok`并编辑，写入自己的域名和监听端口：\n\n```sh\nserver_addr: \"shintaku.cc:4443\"\ntrust_host_root_certs: false\n```\n\n可以先用`ngrok -h`查看使用说明，然后指定二级域名和要映射的端口启动客户端：\n\n\tngrok -subdomain test 4000\n\t\n就会出现Ngrok的连接状态：\n\t\n> ngrok                                                           (Ctrl+C to quit)\n\n> Tunnel Status                 online\n> Version                       1.7/1.7\n> Forwarding                    http://test.shintaku.cc -> 127.0.0.1:4000\n> Forwarding                    https://test.shintaku.cc -> 127.0.0.1:4000\n> Web Interface                 127.0.0.1:4040\n> \\# Conn                        0\n> Avg Conn Time                 0.00ms\n\t\n然后再访问`test.shintaku.cc`就会发现和`localhost:4000`的内容是一样的，就说明Ngrok连接成功了：\n\n![](/img/ngcompare.png)\n\n也可以通过`localhost:4040`的Web页面查看连接状态：\n\n![Inbound Requests](/img/ngrequests.png)\n\n### OpenWrt\n路由器上装好了以后可以在`服务`-`Ngrok Settings`下设置：\n\n![OpenWrt](/img/ngluci.png)\n\n除了HTTP协议以外，也可映射TCP其他端口，例如ssh的22端口映射到远程的8022端口：\n\n![OpenWrt](/img/ngssh.png)\n\n这时`ssh root@shintaku.cc -p 8022`和`ssh root@192.168.1.1`的效果是一样的，意味着即使在外面也可以访问没有公网地址的路由器了。更进一步，如果给路由器下连接的设备都分配了固定的局域网IP地址，将它们的端口映射到Ngrok服务器的端口，外网同样可以访问，这样就可以做很多事情了。","slug":"ngrok","published":1,"updated":"2017-02-17T06:18:30.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0tv001c8mprxd00482l","content":"<p>之前上开源课的时候听说可以通过外网访问局域网电脑获取文件，但由于自己家中的宽带一直不给分配公网地址，所以无法直接访问。</p>\n<p>后来又听说可以用<a href=\"http://www.oray.com/\" target=\"_blank\" rel=\"external\">花生壳</a>之类的<strong>DDNS</strong>动态解析，即使家中IP总变化也可以通过域名访问。但苦于这样的服务一般是收费的，而且又是使用第三方的服务器容易受制于人，用起来有些不爽，才一直寻找更好的方法。</p>\n<p>近日又发现<strong>Ngrok</strong>这样的神器，可以自己搭建内网穿透服务，只用<strong>一台VPS</strong>和<strong>一个域名</strong>就完美地解决了问题。其主要是在客户端与服务端之间建立端到端的隧道进行通信，用固定的域名进行访问以规避了IP变更的不便。</p>\n<h1 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h1><p>目前<a href=\"https://ngrok.com/\" target=\"_blank\" rel=\"external\">Ngrok官网</a>上放出的2.0以上版本是付费的服务，若要自己搭建需要自行编译1.7的源码。首先将源码从<a href=\"https://github.com/inconshreveable/ngrok\" target=\"_blank\" rel=\"external\">GitHub</a>上clone下来：</p>\n<pre><code>git clone https://github.com/inconshreveable/ngrok.git\n</code></pre><h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>由于该服务是<em>Go语言</em>编写的，所以先要安装golang开发环境：</p>\n<pre><code>yum install golang\n</code></pre><p>然后将<code>NGROK_DOMAIN</code>这个变量赋成要使用的域名后面要用到，例如使用如下域名，相应的也要在域名解析里将<code>shintaku.cc</code>和<code>*.shintaku.cc</code>解析到这台VPS的IP上：</p>\n<pre><code>NGROK_DOMAIN=&quot;shintaku.cc&quot;\n</code></pre><p>使用Ngrok官方服务时，下载的客户端使用的是官方证书。我们自己编译服务端和客户端，使用自己的域名也要生成<strong>自签名证书</strong>：</p>\n<pre><code>cd ngrok\nopenssl genrsa -out ngrokroot.key 2048\nopenssl req -x509 -new -nodes -key ngrokroot.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -days 36500 -out ngrokroot.crt\nopenssl genrsa -out snakeoil.key 2048\nopenssl req -new -key snakeoil.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -out snakeoil.csr\nopenssl x509 -req -in snakeoil.csr -days 36500 -CA ngrokroot.crt -CAkey ngrokroot.key -CAcreateserial -out snakeoil.crt \n</code></pre><p>这样就在当前目录下生成了<code>ngrokroot.crt</code>、<code>ngrokroot.key</code>、<code>ngrokroot.srl</code>、<code>snakeoil.crt</code>、<code>snakeoil.csr</code>、<code>snakeoil.key</code>六个文件，将它们复制到相应的目录中：</p>\n<pre><code>cp ngrokroot.crt assets/client/tls/\ncp snakeoil.crt assets/server/tls/\ncp snakeoil.key assets/server/tls/\n</code></pre><p>然后就可以开始编译服务端了：</p>\n<pre><code>make release-server\n</code></pre><p>编译好的二进制文件<code>ngrokd</code>生成在bin目录下。</p>\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><p>ngrokd可以在其目录下直接启动，若要想全局使用这个命令可以将其移动到设了环境变量的目录下：</p>\n<pre><code>cp ./bin/ngrokd /usr/sbin/\n</code></pre><p>可以先<code>ngrokd -h</code>看一下使用说明，然后就可以通过如下命令启动服务端了：</p>\n<pre><code>ngrokd -domain=&quot;shintaku.cc&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:443&quot;\n</code></pre><p>启动要像上面一样加参数指定域名和端口。由于这台VPS我没有搭建Web服务，所以80和443端口没有占用，当然默认也是使用这两个端口的，这样在浏览器访问地址时也省得指定非80端口的麻烦了。出现如下信息就说明启动成功了：</p>\n<blockquote>\n<p>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.(*PrefixLogger).Info:83) [registry] [tun] No affinity cache specified<br>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for public http connections on [::]:80<br>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for public https connections on [::]:443<br>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for control and proxy connections on [::]:4443<br>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.(*PrefixLogger).Info:83) [metrics] Reporting every 30 seconds</p>\n</blockquote>\n<p>另外4443端口用于监听客户端，如有必要也可修改。</p>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><h2 id=\"编译-1\"><a href=\"#编译-1\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>客户端的编译和服务端类似，但要使用与服务端相同的文件。可以先在本机安装golang环境，再将VPS上的源码拷贝到本机直接用<code>make release-client</code>编译；也可以在VPS上加参数编译其他环境的客户端：</p>\n<h3 id=\"macOS\"><a href=\"#macOS\" class=\"headerlink\" title=\"macOS\"></a>macOS</h3><pre><code>GOOS=darwin GOARCH=amd64 make release-client\n</code></pre><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><pre><code>GOOS=windows GOARCH=amd64 make release-client\n</code></pre><h3 id=\"OpenWrt\"><a href=\"#OpenWrt\" class=\"headerlink\" title=\"OpenWrt\"></a>OpenWrt</h3><p>由于OpenWrt上没有对应的Go环境，所以没法用ngrok源码直接编译OpenWrt的客户端。但是<a href=\"https://www.v2ex.com/t/176838\" target=\"_blank\" rel=\"external\">dosgo</a>大神写了一个<em>C语言</em>版本的<a href=\"https://github.com/dosgo/ngrok-c\" target=\"_blank\" rel=\"external\">ngrok-c</a>，文档中也附带了<a href=\"http://www.jianshu.com/p/8428949d946c\" target=\"_blank\" rel=\"external\">编译方法</a>。但是编译过程比较复杂，而且自己编译出来的二进制文件体积也不小，比较占空间，所以就在恩山上搜了一个民间高手编译好的装上了，顺带着LuCI界面放到服务器上：</p>\n<pre><code>wget https://www.shintaku.cc/files/ngrokc_ba56781152-1_ar71xx.ipk\nwget https://www.shintaku.cc/files/luci-app-ngrokc_git-15.290.16504-8c2fd44-1_all.ipk\n</code></pre><p>如果安装时遇到问题请确定路由器上是否已经安装了必要的库：</p>\n<pre><code>opkg install libstdcpp\nopkg install libopenssl\n</code></pre><h2 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h2><h3 id=\"PC\"><a href=\"#PC\" class=\"headerlink\" title=\"PC\"></a>PC</h3><p>先创建配置文件<code>~/.ngrok</code>并编辑，写入自己的域名和监听端口：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">server_addr: <span class=\"string\">\"shintaku.cc:4443\"</span></div><div class=\"line\">trust_host_root_certs: <span class=\"literal\">false</span></div></pre></td></tr></table></figure>\n<p>可以先用<code>ngrok -h</code>查看使用说明，然后指定二级域名和要映射的端口启动客户端：</p>\n<pre><code>ngrok -subdomain test 4000\n</code></pre><p>就会出现Ngrok的连接状态：</p>\n<blockquote>\n<p>ngrok                                                           (Ctrl+C to quit)</p>\n<p>Tunnel Status                 online<br>Version                       1.7/1.7<br>Forwarding                    <a href=\"http://test.shintaku.cc\" target=\"_blank\" rel=\"external\">http://test.shintaku.cc</a> -&gt; 127.0.0.1:4000<br>Forwarding                    <a href=\"https://test.shintaku.cc\" target=\"_blank\" rel=\"external\">https://test.shintaku.cc</a> -&gt; 127.0.0.1:4000<br>Web Interface                 127.0.0.1:4040<br># Conn                        0<br>Avg Conn Time                 0.00ms</p>\n</blockquote>\n<p>然后再访问<code>test.shintaku.cc</code>就会发现和<code>localhost:4000</code>的内容是一样的，就说明Ngrok连接成功了：</p>\n<p><img src=\"/img/ngcompare.png\" alt=\"\"></p>\n<p>也可以通过<code>localhost:4040</code>的Web页面查看连接状态：</p>\n<p><img src=\"/img/ngrequests.png\" alt=\"Inbound Requests\"></p>\n<h3 id=\"OpenWrt-1\"><a href=\"#OpenWrt-1\" class=\"headerlink\" title=\"OpenWrt\"></a>OpenWrt</h3><p>路由器上装好了以后可以在<code>服务</code>-<code>Ngrok Settings</code>下设置：</p>\n<p><img src=\"/img/ngluci.png\" alt=\"OpenWrt\"></p>\n<p>除了HTTP协议以外，也可映射TCP其他端口，例如ssh的22端口映射到远程的8022端口：</p>\n<p><img src=\"/img/ngssh.png\" alt=\"OpenWrt\"></p>\n<p>这时<code>ssh root@shintaku.cc -p 8022</code>和<code>ssh root@192.168.1.1</code>的效果是一样的，意味着即使在外面也可以访问没有公网地址的路由器了。更进一步，如果给路由器下连接的设备都分配了固定的局域网IP地址，将它们的端口映射到Ngrok服务器的端口，外网同样可以访问，这样就可以做很多事情了。</p>\n","excerpt":"","more":"<p>之前上开源课的时候听说可以通过外网访问局域网电脑获取文件，但由于自己家中的宽带一直不给分配公网地址，所以无法直接访问。</p>\n<p>后来又听说可以用<a href=\"http://www.oray.com/\">花生壳</a>之类的<strong>DDNS</strong>动态解析，即使家中IP总变化也可以通过域名访问。但苦于这样的服务一般是收费的，而且又是使用第三方的服务器容易受制于人，用起来有些不爽，才一直寻找更好的方法。</p>\n<p>近日又发现<strong>Ngrok</strong>这样的神器，可以自己搭建内网穿透服务，只用<strong>一台VPS</strong>和<strong>一个域名</strong>就完美地解决了问题。其主要是在客户端与服务端之间建立端到端的隧道进行通信，用固定的域名进行访问以规避了IP变更的不便。</p>\n<h1 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h1><p>目前<a href=\"https://ngrok.com/\">Ngrok官网</a>上放出的2.0以上版本是付费的服务，若要自己搭建需要自行编译1.7的源码。首先将源码从<a href=\"https://github.com/inconshreveable/ngrok\">GitHub</a>上clone下来：</p>\n<pre><code>git clone https://github.com/inconshreveable/ngrok.git\n</code></pre><h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>由于该服务是<em>Go语言</em>编写的，所以先要安装golang开发环境：</p>\n<pre><code>yum install golang\n</code></pre><p>然后将<code>NGROK_DOMAIN</code>这个变量赋成要使用的域名后面要用到，例如使用如下域名，相应的也要在域名解析里将<code>shintaku.cc</code>和<code>*.shintaku.cc</code>解析到这台VPS的IP上：</p>\n<pre><code>NGROK_DOMAIN=&quot;shintaku.cc&quot;\n</code></pre><p>使用Ngrok官方服务时，下载的客户端使用的是官方证书。我们自己编译服务端和客户端，使用自己的域名也要生成<strong>自签名证书</strong>：</p>\n<pre><code>cd ngrok\nopenssl genrsa -out ngrokroot.key 2048\nopenssl req -x509 -new -nodes -key ngrokroot.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -days 36500 -out ngrokroot.crt\nopenssl genrsa -out snakeoil.key 2048\nopenssl req -new -key snakeoil.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -out snakeoil.csr\nopenssl x509 -req -in snakeoil.csr -days 36500 -CA ngrokroot.crt -CAkey ngrokroot.key -CAcreateserial -out snakeoil.crt \n</code></pre><p>这样就在当前目录下生成了<code>ngrokroot.crt</code>、<code>ngrokroot.key</code>、<code>ngrokroot.srl</code>、<code>snakeoil.crt</code>、<code>snakeoil.csr</code>、<code>snakeoil.key</code>六个文件，将它们复制到相应的目录中：</p>\n<pre><code>cp ngrokroot.crt assets/client/tls/\ncp snakeoil.crt assets/server/tls/\ncp snakeoil.key assets/server/tls/\n</code></pre><p>然后就可以开始编译服务端了：</p>\n<pre><code>make release-server\n</code></pre><p>编译好的二进制文件<code>ngrokd</code>生成在bin目录下。</p>\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><p>ngrokd可以在其目录下直接启动，若要想全局使用这个命令可以将其移动到设了环境变量的目录下：</p>\n<pre><code>cp ./bin/ngrokd /usr/sbin/\n</code></pre><p>可以先<code>ngrokd -h</code>看一下使用说明，然后就可以通过如下命令启动服务端了：</p>\n<pre><code>ngrokd -domain=&quot;shintaku.cc&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:443&quot;\n</code></pre><p>启动要像上面一样加参数指定域名和端口。由于这台VPS我没有搭建Web服务，所以80和443端口没有占用，当然默认也是使用这两个端口的，这样在浏览器访问地址时也省得指定非80端口的麻烦了。出现如下信息就说明启动成功了：</p>\n<blockquote>\n<p>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.(*PrefixLogger).Info:83) [registry] [tun] No affinity cache specified<br>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for public http connections on [::]:80<br>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for public https connections on [::]:443<br>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.Info:112) Listening for control and proxy connections on [::]:4443<br>[16:58:26 CST 2016/09/01] [INFO] (ngrok/log.(*PrefixLogger).Info:83) [metrics] Reporting every 30 seconds</p>\n</blockquote>\n<p>另外4443端口用于监听客户端，如有必要也可修改。</p>\n<h1 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h1><h2 id=\"编译-1\"><a href=\"#编译-1\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>客户端的编译和服务端类似，但要使用与服务端相同的文件。可以先在本机安装golang环境，再将VPS上的源码拷贝到本机直接用<code>make release-client</code>编译；也可以在VPS上加参数编译其他环境的客户端：</p>\n<h3 id=\"macOS\"><a href=\"#macOS\" class=\"headerlink\" title=\"macOS\"></a>macOS</h3><pre><code>GOOS=darwin GOARCH=amd64 make release-client\n</code></pre><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><pre><code>GOOS=windows GOARCH=amd64 make release-client\n</code></pre><h3 id=\"OpenWrt\"><a href=\"#OpenWrt\" class=\"headerlink\" title=\"OpenWrt\"></a>OpenWrt</h3><p>由于OpenWrt上没有对应的Go环境，所以没法用ngrok源码直接编译OpenWrt的客户端。但是<a href=\"https://www.v2ex.com/t/176838\">dosgo</a>大神写了一个<em>C语言</em>版本的<a href=\"https://github.com/dosgo/ngrok-c\">ngrok-c</a>，文档中也附带了<a href=\"http://www.jianshu.com/p/8428949d946c\">编译方法</a>。但是编译过程比较复杂，而且自己编译出来的二进制文件体积也不小，比较占空间，所以就在恩山上搜了一个民间高手编译好的装上了，顺带着LuCI界面放到服务器上：</p>\n<pre><code>wget https://www.shintaku.cc/files/ngrokc_ba56781152-1_ar71xx.ipk\nwget https://www.shintaku.cc/files/luci-app-ngrokc_git-15.290.16504-8c2fd44-1_all.ipk\n</code></pre><p>如果安装时遇到问题请确定路由器上是否已经安装了必要的库：</p>\n<pre><code>opkg install libstdcpp\nopkg install libopenssl\n</code></pre><h2 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h2><h3 id=\"PC\"><a href=\"#PC\" class=\"headerlink\" title=\"PC\"></a>PC</h3><p>先创建配置文件<code>~/.ngrok</code>并编辑，写入自己的域名和监听端口：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">server_addr: <span class=\"string\">\"shintaku.cc:4443\"</span></div><div class=\"line\">trust_host_root_certs: <span class=\"literal\">false</span></div></pre></td></tr></table></figure>\n<p>可以先用<code>ngrok -h</code>查看使用说明，然后指定二级域名和要映射的端口启动客户端：</p>\n<pre><code>ngrok -subdomain test 4000\n</code></pre><p>就会出现Ngrok的连接状态：</p>\n<blockquote>\n<p>ngrok                                                           (Ctrl+C to quit)</p>\n<p>Tunnel Status                 online<br>Version                       1.7/1.7<br>Forwarding                    <a href=\"http://test.shintaku.cc\">http://test.shintaku.cc</a> -&gt; 127.0.0.1:4000<br>Forwarding                    <a href=\"https://test.shintaku.cc\">https://test.shintaku.cc</a> -&gt; 127.0.0.1:4000<br>Web Interface                 127.0.0.1:4040<br># Conn                        0<br>Avg Conn Time                 0.00ms</p>\n</blockquote>\n<p>然后再访问<code>test.shintaku.cc</code>就会发现和<code>localhost:4000</code>的内容是一样的，就说明Ngrok连接成功了：</p>\n<p><img src=\"/img/ngcompare.png\" alt=\"\"></p>\n<p>也可以通过<code>localhost:4040</code>的Web页面查看连接状态：</p>\n<p><img src=\"/img/ngrequests.png\" alt=\"Inbound Requests\"></p>\n<h3 id=\"OpenWrt-1\"><a href=\"#OpenWrt-1\" class=\"headerlink\" title=\"OpenWrt\"></a>OpenWrt</h3><p>路由器上装好了以后可以在<code>服务</code>-<code>Ngrok Settings</code>下设置：</p>\n<p><img src=\"/img/ngluci.png\" alt=\"OpenWrt\"></p>\n<p>除了HTTP协议以外，也可映射TCP其他端口，例如ssh的22端口映射到远程的8022端口：</p>\n<p><img src=\"/img/ngssh.png\" alt=\"OpenWrt\"></p>\n<p>这时<code>ssh root@shintaku.cc -p 8022</code>和<code>ssh root@192.168.1.1</code>的效果是一样的，意味着即使在外面也可以访问没有公网地址的路由器了。更进一步，如果给路由器下连接的设备都分配了固定的局域网IP地址，将它们的端口映射到Ngrok服务器的端口，外网同样可以访问，这样就可以做很多事情了。</p>\n"},{"title":"Qt5.5程序的打包与发布","date":"2015-10-18T13:11:11.000Z","photos":["/img/qtbanner.png"],"_content":"因为要做C＋＋软件实习的大作业，所以选择了易于上手的Qt作为图形化界面程序开发框架，IDE自然就是Qt Creator了。但是Qt程序的打包发布却是不接地气，因为依赖实在是太多了。有的时候加好依赖后在自己的开发环境上可以运行，但脱离开发环境却依旧报\n> This application failed to start because it could not find or load the Qt platform plugin \"windows\".\n\n![无法加载qwindows](/img/qtwindows.png)\n\n甚至\n\n![Runtime](/img/qtruntime.png)\n于是现在亟待解决的问题就是如何能够找到所有所需依赖并能够将其打包引用。\n\n# 查找依赖工具\n通过阅读[官方文档](http://doc.qt.io/qt-5/windows-deployment.html#application-dependencies)发现，Qt里面内置了一个dll依赖性检查工具——`windeploy.exe`。这个程序应当在`~/Qt/Qt5.5.0/5.5/mingw492_32/bin/`下，通过命令提示符执行它可以得到使用方法：\n\n\tC:\\Users\\Shintaku>C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe\n    Please specify the binary or folder.\n\n    Usage: C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe [options] [files]\n    Qt Deploy Tool 5.5.0\n\n    The simplest way to use windeployqt is to add the bin directory of your Qt installation \n    (e.g. <QT_DIR\\bin>) to the PATH variable and then run:\n      windeployqt <path-to-app-binary>\n    If ICU, ANGLE, etc. are not in the bin directory, they need to be in the PATH variable. \n    If your application uses Qt Quick, run:\n      windeployqt --qmldir <path-to-app-qml-files> <path-to-app-binary>\n\n    Options:\n      -?, -h, --help             Displays this help.\n      -v, --version              Displays version information.\n      --dir <directory>          Use directory instead of binary directory.\n      --libdir <path>            Copy libraries to path.\n      --debug                    Assume debug binaries.\n      --release                  Assume release binaries.\n      --release-with-debug-info  Assume release binaries with debug information.\n      --force                    Force updating files.\n      --dry-run                  Simulation mode. Behave normally, but do not\n                                 copy/update any files.\n      --no-plugins               Skip plugin deployment.\n      --no-libraries             Skip library deployment.\n      --qmldir <directory>       Scan for QML-imports starting from directory.\n      --no-quick-import          Skip deployment of Qt Quick imports.\n      --no-translations          Skip deployment of translations.\n      --no-system-d3d-compiler   Skip deployment of the system D3D compiler.\n      --compiler-runtime         Deploy compiler runtime (Desktop only).\n      --no-compiler-runtime      Do not deploy compiler runtime (Desktop only).\n      --webkit2                  Deployment of WebKit2 (web process).\n      --no-webkit2               Skip deployment of WebKit2.\n      --json                     Print to stdout in JSON format.\n      --angle                    Force deployment of ANGLE.\n      --no-angle                 Disable deployment of ANGLE.\n      --list <option>            Print only the names of the files copied.\n                                 Available options:\n                                  source:   absolute path of the source files\n                                  target:   absolute path of the target files\n                                  relative: paths of the target files, relative\n                                            to the target directory\n                                  mapping:  outputs the source and the relative\n                                            target, suitable for use within an\n                                            Appx mapping file\n      --verbose <level>          Verbose level.\n\n    Qt libraries can be added by passing their name (-xml) or removed \n    by passing the name prepended by --no- (--no-xml). Available libraries:\n    bluetooth clucene concurrent core declarative designer designercomponents\n    enginio gui qthelp multimedia multimediawidgets multimediaquick network nfc\n    opengl positioning printsupport qml qmltooling quick quickparticles quickwidgets\n\n    script scripttools sensors serialport sql svg test webkit webkitwidgets\n    websockets widgets winextras xml xmlpatterns webenginecore webengine\n    webenginewidgets 3dcore 3drenderer 3dquick 3dquickrenderer 3dinput geoservices\n\n    Arguments:\n      [files]                    Binaries or directory containing the binary.\n\n\n发现当`windeploy`有一个参数为`二进制文件`时，会在其所在目录下生成该文件所依赖的所有文件。\n\n# 提取依赖文件\n于是我们可以在任意目录下新建一个文件夹，然后将Qt编译生成的`可执行文件`复制到新文件夹下。\n接下来在命令提示符里执行`windeploy yourProgram.exe`便可以将其所需依赖加入到新文件夹中了。\n\n    > C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe Library.exe\n    Library.exe 32 bit, release executable\n    Adding Qt5Svg for qsvgicon.dll\n    Direct dependencies: Qt5Core Qt5Gui Qt5Sql Qt5Widgets\n    All dependencies   : Qt5Core Qt5Gui Qt5Sql Qt5Widgets\n    To be deployed     : Qt5Core Qt5Gui Qt5Sql Qt5Svg Qt5Widgets\n    Updating Qt5Core.dll.\n    Updating Qt5Gui.dll.\n    Updating Qt5Sql.dll.\n    Updating Qt5Svg.dll.\n    Updating Qt5Widgets.dll.\n    Updating libGLESV2.dll.\n    Updating libEGL.dll.\n    Updating D3Dcompiler_47.dll.\n    Creating directory iconengines.\n    Updating qsvgicon.dll.\n    Creating directory imageformats.\n    Updating qdds.dll.\n    Updating qgif.dll.\n    Updating qicns.dll.\n    Updating qico.dll.\n    Updating qjp2.dll.\n    Updating qjpeg.dll.\n    Updating qmng.dll.\n    Updating qsvg.dll.\n    Updating qtga.dll.\n    Updating qtiff.dll.\n    Updating qwbmp.dll.\n    Updating qwebp.dll.\n    Creating directory platforms.\n    Updating qwindows.dll.\n    Creating directory sqldrivers.\n    Updating qsqlite.dll.\n    Updating qsqlmysql.dll.\n    Updating qsqlodbc.dll.\n    Updating qsqlpsql.dll.\n    Creating C:\\Users\\Shintaku\\Desktop\\release\\translations...\n    Creating qt_ca.qm...\n    Creating qt_cs.qm...\n    Creating qt_de.qm...\n    Creating qt_fi.qm...\n    Creating qt_fr.qm...\n    Creating qt_hu.qm...\n    Creating qt_it.qm...\n    Creating qt_ja.qm...\n    Creating qt_ko.qm...\n    Creating qt_lv.qm...\n    Creating qt_ru.qm...\n    Creating qt_sk.qm...\n    Creating qt_uk.qm...\n\n强烈建议在此文件夹下运行一下程序试试，因为这个工具并不一定能将所有必需的依赖加进来，这时运行极有可能还会报\n![系统错误](/img/qterror.png)\n如果这样，请移步`~/Qt/Qt5.5.0/5.5/mingw492_32/bin`下找到缺少的`.dll`文件将它们移到新文件夹下。经过这步检查，在开发环境下应该可以正常运行可执行文件了。\n\n# 修改引用路径\n这时请把这个文件夹拷贝到其他运行环境上测试程序是否能成功运行：如果可以成功运行，那么请跳过这一步；如果不能成功运行，而且依旧报\n> This application failed to start because it could not find or load the Qt platform plugin \"windows\".\n\n则说明程序没有成功引用到动态链接库，这时应当修改源代码。\n找到工程中的`main.cpp`文件，在主函数开头中加入一句\n``` cpp\nQApplication::addLibraryPath(\".\");\n```\n重新编译并替换新文件夹中的.exe文件，再放到其他运行环境上就应该可以成功引用到链接库了。\n\n# 打包程序发布\n这时我们就可以打包程序了。我使用的是一款叫做[Enigma Virtual Box](http://enigmaprotector.com/en/aboutvb.html)的封装工具，这个软件的名字和当年图灵破译的英格玛机一样。\n软件装好后运行，从主界面选择输入目标文件和输出文件的路径，然后在下面`Files`里添加所有需要的链接库\n![添加文件](/img/qt3.png)\n然后有一个`Files Options`里可选是否压缩文件，压缩后会比较小，然后点`Process`就行了\n![压缩文件](/img/qt4.png)\n不久后会在选择的输出路径中生成最终打包好的程序，大功告成。","source":"_posts/qt.md","raw":"title: Qt5.5程序的打包与发布\ndate: 2015-10-18 21:11:11\ntags: [Qt, Windows]\ncategories: [奇技淫巧, Windows]\nphotos: \n\t- /img/qtbanner.png\n---\n因为要做C＋＋软件实习的大作业，所以选择了易于上手的Qt作为图形化界面程序开发框架，IDE自然就是Qt Creator了。但是Qt程序的打包发布却是不接地气，因为依赖实在是太多了。有的时候加好依赖后在自己的开发环境上可以运行，但脱离开发环境却依旧报\n> This application failed to start because it could not find or load the Qt platform plugin \"windows\".\n\n![无法加载qwindows](/img/qtwindows.png)\n\n甚至\n\n![Runtime](/img/qtruntime.png)\n于是现在亟待解决的问题就是如何能够找到所有所需依赖并能够将其打包引用。\n\n# 查找依赖工具\n通过阅读[官方文档](http://doc.qt.io/qt-5/windows-deployment.html#application-dependencies)发现，Qt里面内置了一个dll依赖性检查工具——`windeploy.exe`。这个程序应当在`~/Qt/Qt5.5.0/5.5/mingw492_32/bin/`下，通过命令提示符执行它可以得到使用方法：\n\n\tC:\\Users\\Shintaku>C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe\n    Please specify the binary or folder.\n\n    Usage: C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe [options] [files]\n    Qt Deploy Tool 5.5.0\n\n    The simplest way to use windeployqt is to add the bin directory of your Qt installation \n    (e.g. <QT_DIR\\bin>) to the PATH variable and then run:\n      windeployqt <path-to-app-binary>\n    If ICU, ANGLE, etc. are not in the bin directory, they need to be in the PATH variable. \n    If your application uses Qt Quick, run:\n      windeployqt --qmldir <path-to-app-qml-files> <path-to-app-binary>\n\n    Options:\n      -?, -h, --help             Displays this help.\n      -v, --version              Displays version information.\n      --dir <directory>          Use directory instead of binary directory.\n      --libdir <path>            Copy libraries to path.\n      --debug                    Assume debug binaries.\n      --release                  Assume release binaries.\n      --release-with-debug-info  Assume release binaries with debug information.\n      --force                    Force updating files.\n      --dry-run                  Simulation mode. Behave normally, but do not\n                                 copy/update any files.\n      --no-plugins               Skip plugin deployment.\n      --no-libraries             Skip library deployment.\n      --qmldir <directory>       Scan for QML-imports starting from directory.\n      --no-quick-import          Skip deployment of Qt Quick imports.\n      --no-translations          Skip deployment of translations.\n      --no-system-d3d-compiler   Skip deployment of the system D3D compiler.\n      --compiler-runtime         Deploy compiler runtime (Desktop only).\n      --no-compiler-runtime      Do not deploy compiler runtime (Desktop only).\n      --webkit2                  Deployment of WebKit2 (web process).\n      --no-webkit2               Skip deployment of WebKit2.\n      --json                     Print to stdout in JSON format.\n      --angle                    Force deployment of ANGLE.\n      --no-angle                 Disable deployment of ANGLE.\n      --list <option>            Print only the names of the files copied.\n                                 Available options:\n                                  source:   absolute path of the source files\n                                  target:   absolute path of the target files\n                                  relative: paths of the target files, relative\n                                            to the target directory\n                                  mapping:  outputs the source and the relative\n                                            target, suitable for use within an\n                                            Appx mapping file\n      --verbose <level>          Verbose level.\n\n    Qt libraries can be added by passing their name (-xml) or removed \n    by passing the name prepended by --no- (--no-xml). Available libraries:\n    bluetooth clucene concurrent core declarative designer designercomponents\n    enginio gui qthelp multimedia multimediawidgets multimediaquick network nfc\n    opengl positioning printsupport qml qmltooling quick quickparticles quickwidgets\n\n    script scripttools sensors serialport sql svg test webkit webkitwidgets\n    websockets widgets winextras xml xmlpatterns webenginecore webengine\n    webenginewidgets 3dcore 3drenderer 3dquick 3dquickrenderer 3dinput geoservices\n\n    Arguments:\n      [files]                    Binaries or directory containing the binary.\n\n\n发现当`windeploy`有一个参数为`二进制文件`时，会在其所在目录下生成该文件所依赖的所有文件。\n\n# 提取依赖文件\n于是我们可以在任意目录下新建一个文件夹，然后将Qt编译生成的`可执行文件`复制到新文件夹下。\n接下来在命令提示符里执行`windeploy yourProgram.exe`便可以将其所需依赖加入到新文件夹中了。\n\n    > C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe Library.exe\n    Library.exe 32 bit, release executable\n    Adding Qt5Svg for qsvgicon.dll\n    Direct dependencies: Qt5Core Qt5Gui Qt5Sql Qt5Widgets\n    All dependencies   : Qt5Core Qt5Gui Qt5Sql Qt5Widgets\n    To be deployed     : Qt5Core Qt5Gui Qt5Sql Qt5Svg Qt5Widgets\n    Updating Qt5Core.dll.\n    Updating Qt5Gui.dll.\n    Updating Qt5Sql.dll.\n    Updating Qt5Svg.dll.\n    Updating Qt5Widgets.dll.\n    Updating libGLESV2.dll.\n    Updating libEGL.dll.\n    Updating D3Dcompiler_47.dll.\n    Creating directory iconengines.\n    Updating qsvgicon.dll.\n    Creating directory imageformats.\n    Updating qdds.dll.\n    Updating qgif.dll.\n    Updating qicns.dll.\n    Updating qico.dll.\n    Updating qjp2.dll.\n    Updating qjpeg.dll.\n    Updating qmng.dll.\n    Updating qsvg.dll.\n    Updating qtga.dll.\n    Updating qtiff.dll.\n    Updating qwbmp.dll.\n    Updating qwebp.dll.\n    Creating directory platforms.\n    Updating qwindows.dll.\n    Creating directory sqldrivers.\n    Updating qsqlite.dll.\n    Updating qsqlmysql.dll.\n    Updating qsqlodbc.dll.\n    Updating qsqlpsql.dll.\n    Creating C:\\Users\\Shintaku\\Desktop\\release\\translations...\n    Creating qt_ca.qm...\n    Creating qt_cs.qm...\n    Creating qt_de.qm...\n    Creating qt_fi.qm...\n    Creating qt_fr.qm...\n    Creating qt_hu.qm...\n    Creating qt_it.qm...\n    Creating qt_ja.qm...\n    Creating qt_ko.qm...\n    Creating qt_lv.qm...\n    Creating qt_ru.qm...\n    Creating qt_sk.qm...\n    Creating qt_uk.qm...\n\n强烈建议在此文件夹下运行一下程序试试，因为这个工具并不一定能将所有必需的依赖加进来，这时运行极有可能还会报\n![系统错误](/img/qterror.png)\n如果这样，请移步`~/Qt/Qt5.5.0/5.5/mingw492_32/bin`下找到缺少的`.dll`文件将它们移到新文件夹下。经过这步检查，在开发环境下应该可以正常运行可执行文件了。\n\n# 修改引用路径\n这时请把这个文件夹拷贝到其他运行环境上测试程序是否能成功运行：如果可以成功运行，那么请跳过这一步；如果不能成功运行，而且依旧报\n> This application failed to start because it could not find or load the Qt platform plugin \"windows\".\n\n则说明程序没有成功引用到动态链接库，这时应当修改源代码。\n找到工程中的`main.cpp`文件，在主函数开头中加入一句\n``` cpp\nQApplication::addLibraryPath(\".\");\n```\n重新编译并替换新文件夹中的.exe文件，再放到其他运行环境上就应该可以成功引用到链接库了。\n\n# 打包程序发布\n这时我们就可以打包程序了。我使用的是一款叫做[Enigma Virtual Box](http://enigmaprotector.com/en/aboutvb.html)的封装工具，这个软件的名字和当年图灵破译的英格玛机一样。\n软件装好后运行，从主界面选择输入目标文件和输出文件的路径，然后在下面`Files`里添加所有需要的链接库\n![添加文件](/img/qt3.png)\n然后有一个`Files Options`里可选是否压缩文件，压缩后会比较小，然后点`Process`就行了\n![压缩文件](/img/qt4.png)\n不久后会在选择的输出路径中生成最终打包好的程序，大功告成。","slug":"qt","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0tx001h8mprck4uig82","content":"<p>因为要做C＋＋软件实习的大作业，所以选择了易于上手的Qt作为图形化界面程序开发框架，IDE自然就是Qt Creator了。但是Qt程序的打包发布却是不接地气，因为依赖实在是太多了。有的时候加好依赖后在自己的开发环境上可以运行，但脱离开发环境却依旧报</p>\n<blockquote>\n<p>This application failed to start because it could not find or load the Qt platform plugin “windows”.</p>\n</blockquote>\n<p><img src=\"/img/qtwindows.png\" alt=\"无法加载qwindows\"></p>\n<p>甚至</p>\n<p><img src=\"/img/qtruntime.png\" alt=\"Runtime\"><br>于是现在亟待解决的问题就是如何能够找到所有所需依赖并能够将其打包引用。</p>\n<h1 id=\"查找依赖工具\"><a href=\"#查找依赖工具\" class=\"headerlink\" title=\"查找依赖工具\"></a>查找依赖工具</h1><p>通过阅读<a href=\"http://doc.qt.io/qt-5/windows-deployment.html#application-dependencies\" target=\"_blank\" rel=\"external\">官方文档</a>发现，Qt里面内置了一个dll依赖性检查工具——<code>windeploy.exe</code>。这个程序应当在<code>~/Qt/Qt5.5.0/5.5/mingw492_32/bin/</code>下，通过命令提示符执行它可以得到使用方法：</p>\n<pre><code>C:\\Users\\Shintaku&gt;C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe\nPlease specify the binary or folder.\n\nUsage: C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe [options] [files]\nQt Deploy Tool 5.5.0\n\nThe simplest way to use windeployqt is to add the bin directory of your Qt installation \n(e.g. &lt;QT_DIR\\bin&gt;) to the PATH variable and then run:\n  windeployqt &lt;path-to-app-binary&gt;\nIf ICU, ANGLE, etc. are not in the bin directory, they need to be in the PATH variable. \nIf your application uses Qt Quick, run:\n  windeployqt --qmldir &lt;path-to-app-qml-files&gt; &lt;path-to-app-binary&gt;\n\nOptions:\n  -?, -h, --help             Displays this help.\n  -v, --version              Displays version information.\n  --dir &lt;directory&gt;          Use directory instead of binary directory.\n  --libdir &lt;path&gt;            Copy libraries to path.\n  --debug                    Assume debug binaries.\n  --release                  Assume release binaries.\n  --release-with-debug-info  Assume release binaries with debug information.\n  --force                    Force updating files.\n  --dry-run                  Simulation mode. Behave normally, but do not\n                             copy/update any files.\n  --no-plugins               Skip plugin deployment.\n  --no-libraries             Skip library deployment.\n  --qmldir &lt;directory&gt;       Scan for QML-imports starting from directory.\n  --no-quick-import          Skip deployment of Qt Quick imports.\n  --no-translations          Skip deployment of translations.\n  --no-system-d3d-compiler   Skip deployment of the system D3D compiler.\n  --compiler-runtime         Deploy compiler runtime (Desktop only).\n  --no-compiler-runtime      Do not deploy compiler runtime (Desktop only).\n  --webkit2                  Deployment of WebKit2 (web process).\n  --no-webkit2               Skip deployment of WebKit2.\n  --json                     Print to stdout in JSON format.\n  --angle                    Force deployment of ANGLE.\n  --no-angle                 Disable deployment of ANGLE.\n  --list &lt;option&gt;            Print only the names of the files copied.\n                             Available options:\n                              source:   absolute path of the source files\n                              target:   absolute path of the target files\n                              relative: paths of the target files, relative\n                                        to the target directory\n                              mapping:  outputs the source and the relative\n                                        target, suitable for use within an\n                                        Appx mapping file\n  --verbose &lt;level&gt;          Verbose level.\n\nQt libraries can be added by passing their name (-xml) or removed \nby passing the name prepended by --no- (--no-xml). Available libraries:\nbluetooth clucene concurrent core declarative designer designercomponents\nenginio gui qthelp multimedia multimediawidgets multimediaquick network nfc\nopengl positioning printsupport qml qmltooling quick quickparticles quickwidgets\n\nscript scripttools sensors serialport sql svg test webkit webkitwidgets\nwebsockets widgets winextras xml xmlpatterns webenginecore webengine\nwebenginewidgets 3dcore 3drenderer 3dquick 3dquickrenderer 3dinput geoservices\n\nArguments:\n  [files]                    Binaries or directory containing the binary.\n</code></pre><p>发现当<code>windeploy</code>有一个参数为<code>二进制文件</code>时，会在其所在目录下生成该文件所依赖的所有文件。</p>\n<h1 id=\"提取依赖文件\"><a href=\"#提取依赖文件\" class=\"headerlink\" title=\"提取依赖文件\"></a>提取依赖文件</h1><p>于是我们可以在任意目录下新建一个文件夹，然后将Qt编译生成的<code>可执行文件</code>复制到新文件夹下。<br>接下来在命令提示符里执行<code>windeploy yourProgram.exe</code>便可以将其所需依赖加入到新文件夹中了。</p>\n<pre><code>&gt; C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe Library.exe\nLibrary.exe 32 bit, release executable\nAdding Qt5Svg for qsvgicon.dll\nDirect dependencies: Qt5Core Qt5Gui Qt5Sql Qt5Widgets\nAll dependencies   : Qt5Core Qt5Gui Qt5Sql Qt5Widgets\nTo be deployed     : Qt5Core Qt5Gui Qt5Sql Qt5Svg Qt5Widgets\nUpdating Qt5Core.dll.\nUpdating Qt5Gui.dll.\nUpdating Qt5Sql.dll.\nUpdating Qt5Svg.dll.\nUpdating Qt5Widgets.dll.\nUpdating libGLESV2.dll.\nUpdating libEGL.dll.\nUpdating D3Dcompiler_47.dll.\nCreating directory iconengines.\nUpdating qsvgicon.dll.\nCreating directory imageformats.\nUpdating qdds.dll.\nUpdating qgif.dll.\nUpdating qicns.dll.\nUpdating qico.dll.\nUpdating qjp2.dll.\nUpdating qjpeg.dll.\nUpdating qmng.dll.\nUpdating qsvg.dll.\nUpdating qtga.dll.\nUpdating qtiff.dll.\nUpdating qwbmp.dll.\nUpdating qwebp.dll.\nCreating directory platforms.\nUpdating qwindows.dll.\nCreating directory sqldrivers.\nUpdating qsqlite.dll.\nUpdating qsqlmysql.dll.\nUpdating qsqlodbc.dll.\nUpdating qsqlpsql.dll.\nCreating C:\\Users\\Shintaku\\Desktop\\release\\translations...\nCreating qt_ca.qm...\nCreating qt_cs.qm...\nCreating qt_de.qm...\nCreating qt_fi.qm...\nCreating qt_fr.qm...\nCreating qt_hu.qm...\nCreating qt_it.qm...\nCreating qt_ja.qm...\nCreating qt_ko.qm...\nCreating qt_lv.qm...\nCreating qt_ru.qm...\nCreating qt_sk.qm...\nCreating qt_uk.qm...\n</code></pre><p>强烈建议在此文件夹下运行一下程序试试，因为这个工具并不一定能将所有必需的依赖加进来，这时运行极有可能还会报<br><img src=\"/img/qterror.png\" alt=\"系统错误\"><br>如果这样，请移步<code>~/Qt/Qt5.5.0/5.5/mingw492_32/bin</code>下找到缺少的<code>.dll</code>文件将它们移到新文件夹下。经过这步检查，在开发环境下应该可以正常运行可执行文件了。</p>\n<h1 id=\"修改引用路径\"><a href=\"#修改引用路径\" class=\"headerlink\" title=\"修改引用路径\"></a>修改引用路径</h1><p>这时请把这个文件夹拷贝到其他运行环境上测试程序是否能成功运行：如果可以成功运行，那么请跳过这一步；如果不能成功运行，而且依旧报</p>\n<blockquote>\n<p>This application failed to start because it could not find or load the Qt platform plugin “windows”.</p>\n</blockquote>\n<p>则说明程序没有成功引用到动态链接库，这时应当修改源代码。<br>找到工程中的<code>main.cpp</code>文件，在主函数开头中加入一句<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">QApplication::addLibraryPath(<span class=\"string\">\".\"</span>);</div></pre></td></tr></table></figure></p>\n<p>重新编译并替换新文件夹中的.exe文件，再放到其他运行环境上就应该可以成功引用到链接库了。</p>\n<h1 id=\"打包程序发布\"><a href=\"#打包程序发布\" class=\"headerlink\" title=\"打包程序发布\"></a>打包程序发布</h1><p>这时我们就可以打包程序了。我使用的是一款叫做<a href=\"http://enigmaprotector.com/en/aboutvb.html\" target=\"_blank\" rel=\"external\">Enigma Virtual Box</a>的封装工具，这个软件的名字和当年图灵破译的英格玛机一样。<br>软件装好后运行，从主界面选择输入目标文件和输出文件的路径，然后在下面<code>Files</code>里添加所有需要的链接库<br><img src=\"/img/qt3.png\" alt=\"添加文件\"><br>然后有一个<code>Files Options</code>里可选是否压缩文件，压缩后会比较小，然后点<code>Process</code>就行了<br><img src=\"/img/qt4.png\" alt=\"压缩文件\"><br>不久后会在选择的输出路径中生成最终打包好的程序，大功告成。</p>\n","excerpt":"","more":"<p>因为要做C＋＋软件实习的大作业，所以选择了易于上手的Qt作为图形化界面程序开发框架，IDE自然就是Qt Creator了。但是Qt程序的打包发布却是不接地气，因为依赖实在是太多了。有的时候加好依赖后在自己的开发环境上可以运行，但脱离开发环境却依旧报</p>\n<blockquote>\n<p>This application failed to start because it could not find or load the Qt platform plugin “windows”.</p>\n</blockquote>\n<p><img src=\"/img/qtwindows.png\" alt=\"无法加载qwindows\"></p>\n<p>甚至</p>\n<p><img src=\"/img/qtruntime.png\" alt=\"Runtime\"><br>于是现在亟待解决的问题就是如何能够找到所有所需依赖并能够将其打包引用。</p>\n<h1 id=\"查找依赖工具\"><a href=\"#查找依赖工具\" class=\"headerlink\" title=\"查找依赖工具\"></a>查找依赖工具</h1><p>通过阅读<a href=\"http://doc.qt.io/qt-5/windows-deployment.html#application-dependencies\">官方文档</a>发现，Qt里面内置了一个dll依赖性检查工具——<code>windeploy.exe</code>。这个程序应当在<code>~/Qt/Qt5.5.0/5.5/mingw492_32/bin/</code>下，通过命令提示符执行它可以得到使用方法：</p>\n<pre><code>C:\\Users\\Shintaku&gt;C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe\nPlease specify the binary or folder.\n\nUsage: C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe [options] [files]\nQt Deploy Tool 5.5.0\n\nThe simplest way to use windeployqt is to add the bin directory of your Qt installation \n(e.g. &lt;QT_DIR\\bin&gt;) to the PATH variable and then run:\n  windeployqt &lt;path-to-app-binary&gt;\nIf ICU, ANGLE, etc. are not in the bin directory, they need to be in the PATH variable. \nIf your application uses Qt Quick, run:\n  windeployqt --qmldir &lt;path-to-app-qml-files&gt; &lt;path-to-app-binary&gt;\n\nOptions:\n  -?, -h, --help             Displays this help.\n  -v, --version              Displays version information.\n  --dir &lt;directory&gt;          Use directory instead of binary directory.\n  --libdir &lt;path&gt;            Copy libraries to path.\n  --debug                    Assume debug binaries.\n  --release                  Assume release binaries.\n  --release-with-debug-info  Assume release binaries with debug information.\n  --force                    Force updating files.\n  --dry-run                  Simulation mode. Behave normally, but do not\n                             copy/update any files.\n  --no-plugins               Skip plugin deployment.\n  --no-libraries             Skip library deployment.\n  --qmldir &lt;directory&gt;       Scan for QML-imports starting from directory.\n  --no-quick-import          Skip deployment of Qt Quick imports.\n  --no-translations          Skip deployment of translations.\n  --no-system-d3d-compiler   Skip deployment of the system D3D compiler.\n  --compiler-runtime         Deploy compiler runtime (Desktop only).\n  --no-compiler-runtime      Do not deploy compiler runtime (Desktop only).\n  --webkit2                  Deployment of WebKit2 (web process).\n  --no-webkit2               Skip deployment of WebKit2.\n  --json                     Print to stdout in JSON format.\n  --angle                    Force deployment of ANGLE.\n  --no-angle                 Disable deployment of ANGLE.\n  --list &lt;option&gt;            Print only the names of the files copied.\n                             Available options:\n                              source:   absolute path of the source files\n                              target:   absolute path of the target files\n                              relative: paths of the target files, relative\n                                        to the target directory\n                              mapping:  outputs the source and the relative\n                                        target, suitable for use within an\n                                        Appx mapping file\n  --verbose &lt;level&gt;          Verbose level.\n\nQt libraries can be added by passing their name (-xml) or removed \nby passing the name prepended by --no- (--no-xml). Available libraries:\nbluetooth clucene concurrent core declarative designer designercomponents\nenginio gui qthelp multimedia multimediawidgets multimediaquick network nfc\nopengl positioning printsupport qml qmltooling quick quickparticles quickwidgets\n\nscript scripttools sensors serialport sql svg test webkit webkitwidgets\nwebsockets widgets winextras xml xmlpatterns webenginecore webengine\nwebenginewidgets 3dcore 3drenderer 3dquick 3dquickrenderer 3dinput geoservices\n\nArguments:\n  [files]                    Binaries or directory containing the binary.\n</code></pre><p>发现当<code>windeploy</code>有一个参数为<code>二进制文件</code>时，会在其所在目录下生成该文件所依赖的所有文件。</p>\n<h1 id=\"提取依赖文件\"><a href=\"#提取依赖文件\" class=\"headerlink\" title=\"提取依赖文件\"></a>提取依赖文件</h1><p>于是我们可以在任意目录下新建一个文件夹，然后将Qt编译生成的<code>可执行文件</code>复制到新文件夹下。<br>接下来在命令提示符里执行<code>windeploy yourProgram.exe</code>便可以将其所需依赖加入到新文件夹中了。</p>\n<pre><code>&gt; C:\\Qt\\Qt5.5.0\\5.5\\mingw492_32\\bin\\windeployqt.exe Library.exe\nLibrary.exe 32 bit, release executable\nAdding Qt5Svg for qsvgicon.dll\nDirect dependencies: Qt5Core Qt5Gui Qt5Sql Qt5Widgets\nAll dependencies   : Qt5Core Qt5Gui Qt5Sql Qt5Widgets\nTo be deployed     : Qt5Core Qt5Gui Qt5Sql Qt5Svg Qt5Widgets\nUpdating Qt5Core.dll.\nUpdating Qt5Gui.dll.\nUpdating Qt5Sql.dll.\nUpdating Qt5Svg.dll.\nUpdating Qt5Widgets.dll.\nUpdating libGLESV2.dll.\nUpdating libEGL.dll.\nUpdating D3Dcompiler_47.dll.\nCreating directory iconengines.\nUpdating qsvgicon.dll.\nCreating directory imageformats.\nUpdating qdds.dll.\nUpdating qgif.dll.\nUpdating qicns.dll.\nUpdating qico.dll.\nUpdating qjp2.dll.\nUpdating qjpeg.dll.\nUpdating qmng.dll.\nUpdating qsvg.dll.\nUpdating qtga.dll.\nUpdating qtiff.dll.\nUpdating qwbmp.dll.\nUpdating qwebp.dll.\nCreating directory platforms.\nUpdating qwindows.dll.\nCreating directory sqldrivers.\nUpdating qsqlite.dll.\nUpdating qsqlmysql.dll.\nUpdating qsqlodbc.dll.\nUpdating qsqlpsql.dll.\nCreating C:\\Users\\Shintaku\\Desktop\\release\\translations...\nCreating qt_ca.qm...\nCreating qt_cs.qm...\nCreating qt_de.qm...\nCreating qt_fi.qm...\nCreating qt_fr.qm...\nCreating qt_hu.qm...\nCreating qt_it.qm...\nCreating qt_ja.qm...\nCreating qt_ko.qm...\nCreating qt_lv.qm...\nCreating qt_ru.qm...\nCreating qt_sk.qm...\nCreating qt_uk.qm...\n</code></pre><p>强烈建议在此文件夹下运行一下程序试试，因为这个工具并不一定能将所有必需的依赖加进来，这时运行极有可能还会报<br><img src=\"/img/qterror.png\" alt=\"系统错误\"><br>如果这样，请移步<code>~/Qt/Qt5.5.0/5.5/mingw492_32/bin</code>下找到缺少的<code>.dll</code>文件将它们移到新文件夹下。经过这步检查，在开发环境下应该可以正常运行可执行文件了。</p>\n<h1 id=\"修改引用路径\"><a href=\"#修改引用路径\" class=\"headerlink\" title=\"修改引用路径\"></a>修改引用路径</h1><p>这时请把这个文件夹拷贝到其他运行环境上测试程序是否能成功运行：如果可以成功运行，那么请跳过这一步；如果不能成功运行，而且依旧报</p>\n<blockquote>\n<p>This application failed to start because it could not find or load the Qt platform plugin “windows”.</p>\n</blockquote>\n<p>则说明程序没有成功引用到动态链接库，这时应当修改源代码。<br>找到工程中的<code>main.cpp</code>文件，在主函数开头中加入一句<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">QApplication::addLibraryPath(<span class=\"string\">\".\"</span>);</div></pre></td></tr></table></figure></p>\n<p>重新编译并替换新文件夹中的.exe文件，再放到其他运行环境上就应该可以成功引用到链接库了。</p>\n<h1 id=\"打包程序发布\"><a href=\"#打包程序发布\" class=\"headerlink\" title=\"打包程序发布\"></a>打包程序发布</h1><p>这时我们就可以打包程序了。我使用的是一款叫做<a href=\"http://enigmaprotector.com/en/aboutvb.html\">Enigma Virtual Box</a>的封装工具，这个软件的名字和当年图灵破译的英格玛机一样。<br>软件装好后运行，从主界面选择输入目标文件和输出文件的路径，然后在下面<code>Files</code>里添加所有需要的链接库<br><img src=\"/img/qt3.png\" alt=\"添加文件\"><br>然后有一个<code>Files Options</code>里可选是否压缩文件，压缩后会比较小，然后点<code>Process</code>就行了<br><img src=\"/img/qt4.png\" alt=\"压缩文件\"><br>不久后会在选择的输出路径中生成最终打包好的程序，大功告成。</p>\n"},{"title":"树莓派SPI驱动OLED屏幕","date":"2017-02-07T13:11:11.000Z","photos":["/img/oledbanner.png"],"_content":"\n曾经在B站看到过有人用树莓派连接OLED屏幕播放***Bad Apple***（有屏幕的地方就有***Bad Apple***），想到前些年在智能车打酱油时遗留下的一块128*64的OLED屏幕，就想给树莓派加一个monitor。\n\n# 连接引脚\n![物理编号](/img/oledpin.png)\n\n屏幕上有7个引脚，与树莓派用母对母杜邦线连接，接法如下表：\n\n|OLED引脚|功能|树莓派引脚|编号|\n|---|---|---|---|\n|GND||GND|25|\n|VCC||3.3V PWR|17|\n|D0|SCLK|GPIO 11|23|\n|D1|MOSI|GPIO 10|19|\n|RST||GPIO 17|11|\n|DC||GPIO 27|13|\n|CS|CS0|GPIO 8|24|\n\n\n# 安装依赖\n在驱动屏幕之前要先启用SPI：\n\n\tsudo raspi-config\n\t\n然后选择`Advanced Options`里的`SPI`并启用它，然后执行`sudo reboot`重启。重启后执行`ls /dev | grep spi`，如果显示：\n\n> spidev0.0\n> spidev0.1\n\t\n就说明设置生效了。\n\n先安装一些要用到的Python模块：\n\n\tsudo apt-get install build-essential python-dev python-pip\n\tsudo apt-get install python-imaging python-smbus\n\tsudo pip install RPi.GPIO\n\t\n然后克隆SPI的驱动模块并安装：\n\n\tgit clone https://github.com/adafruit/Adafruit_Python_SSD1306.git\n\tcd Adafruit_Python_SSD1306\n\tsudo python setup.py install\n\t\n# 编写脚本\n网上有人给出了Python版的测试Demo：\n\n```py\n#!/usr/bin/python/\n# coding: utf-8\nimport time\nimport Adafruit_GPIO.SPI as SPI\nimport Adafruit_SSD1306\nimport Image\nimport ImageDraw\nimport ImageFont\n \n# Raspberry Pi pin configuration:\nRST = 17\n# Note the following are only used with SPI:\nDC = 27\nSPI_PORT = 0\nSPI_DEVICE = 0\n \n# 128x64 display with hardware SPI:\ndisp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, dc=DC, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=8000000))\n \n# Initialize library.\ndisp.begin()\n \n# Clear display.\ndisp.clear()\ndisp.display()\n \n# Create blank image for drawing.\n# Make sure to create image with mode '1' for 1-bit color.\nwidth = disp.width\nheight = disp.height\nimage = Image.new('1', (width, height))\n \n# Get drawing object to draw on image.\ndraw = ImageDraw.Draw(image)\n \n# Draw a black filled box to clear the image.\ndraw.rectangle((0,0,width,height), outline=0, fill=0)\n \n# Draw some shapes.\n# First define some constants to allow easy resizing of shapes.\npadding = 1\ntop = padding\nx = padding\n# Load default font.\nfont = ImageFont.load_default()\n \n# Alternatively load a TTF font.\n# Some other nice fonts to try: http://www.dafont.com/bitmap.php\n#font = ImageFont.truetype('Minecraftia.ttf', 8)\n \ndraw.text((x, top), 'This is first line', font=font, fill=255)\ndraw.text((x, top+10), 'This is second line', font=font, fill=255)\ndraw.text((x, top+20), 'This is third line', font=font, fill=255)\ndraw.text((x, top+30), 'This is fourth line', font=font, fill=255)\ndraw.text((x, top+40), 'This is fifth line', font=font, fill=255)\ndraw.text((x, top+50), 'This is last line', font=font, fill=255)\n \n# Display image.\ndisp.image(image)\ndisp.display()\n```\n\n如果运行它能正常显示就可以编写自己的脚本了。参考这个Demo我又撸了一个显示系统实时信息的脚本：\n\n```py\n#!/usr/bin/python/\n# coding: utf-8\nimport os\nimport time\nimport socket\nimport fcntl\nimport struct\nimport requests\nimport Adafruit_GPIO.SPI as SPI\nimport Adafruit_SSD1306\nimport Image\nimport ImageDraw\nimport ImageFont\n\ndef raminfo():\n    with open('/proc/meminfo') as f:\n        total = float(f.readline().split()[1])\n        free = float(f.readline().split()[1])\n    return format((total-free)/total, '.1%')\n\ndef diskinfo():\n    st = os.statvfs('/')\n    total = float(st.f_blocks * st.f_frsize)\n    used = float(st.f_blocks - st.f_bfree) * st.f_frsize\n    return format(used/total, '.1%')\n\ndef cpuinfo():\n    with open('/proc/stat') as f:\n        info = f.readline().split()\n        t0 = float(info[1]) + float(info[2]) + float(info[3])\n        s0 = t0 + float(info[4]) + float(info[5]) + float(info[6]) + float(info[7])\n    time.sleep(0.033)\n    with open('/proc/stat') as f:\n        info = f.readline().split()\n        t1 = float(info[1]) + float(info[2]) + float(info[3])\n        s1 = t1 + float(info[4]) + float(info[5]) + float(info[6]) + float(info[7])\n    return format((t1-t0)/(s1-s0), '.1%')\n\ndef cputemp():\n    with open('/sys/class/thermal/thermal_zone0/temp') as f:\n        temp = float(f.readline())\n    return format(temp/1000, '.1f')\n\ndef wifiinfo():\n    with open('/proc/net/wireless') as f:\n        f.readline()\n        f.readline()\n        info = f.readline().split()\n    return info[3][:-1]\n\ndef get_ip_address(ifname):\n    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    return socket.inet_ntoa(fcntl.ioctl(\n        s.fileno(),\n        0x8915,  # SIOCGIFADDR\n        struct.pack('256s', ifname[:15])\n    )[20:24])\n\nIP = requests.get('http://ip.3322.net').text\n\n# Raspberry Pi pin configuration:\nRST = 17\nDC = 27\nSPI_PORT = 0\nSPI_DEVICE = 0\n\n# 128x64 display with hardware SPI:\ndisp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, dc=DC, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=8000000))\n# Initialize library.\ndisp.begin()\n# Clear display.\ndisp.clear()\n\nwhile True:\n    disp.display()\n    # Create blank image for drawing.\n    width = disp.width\n    height = disp.height\n    image = Image.new('1', (width, height))\n    # Get drawing object to draw on image.\n    draw = ImageDraw.Draw(image)\n    # Initialize background.\n    draw.rectangle((0,0,width,height), outline=0, fill=0)\n\n    padding = 1\n    top = padding\n    x = padding\n    font = ImageFont.load_default()\n\n    draw.text((x, top), time.strftime(\" %Y-%m-%d %H:%M:%S \",time.localtime(time.time())), font=font, fill=255)\n    draw.text((x, top+14), 'disk:' + diskinfo() + '  RAM:' + raminfo(), font=font, fill=255)\n    draw.text((x, top+24), 'temp:' + cputemp() + 'C  CPU:' + cpuinfo(), font=font, fill=255)\n    draw.text((x, top+34), 'signal:' + wifiinfo() + 'dBm', font=font, fill=255)\n    draw.text((x, top+44), 'LAN:' + get_ip_address('wlan0'), font=font, fill=255)\n    draw.text((x, top+54), 'WAN:' + IP, font=font, fill=255)\n\n    # Display image.\n    disp.image(image)\n    disp.display()\n```\n\n效果如下：\n\n![](/img/oled.gif)\n\n# 开机启动\n先新建一个Unit配置文件：\n\n\tsudo vim /lib/systemd/system/oled.service\n\t\n内容如下：\n\n```accesslog\n[Unit]\nDescription=oled autostart\n\n[Service]\nType=idle\nExecStart=/usr/bin/python /home/pi/oled.py\n\n[Install]\nWantedBy=multi-user.target\n```\n\n然后启动并加入启动项：\n\n\tsudo systemctl daemon-reload\n\tsudo systemctl start oled\n\tsudo systemctl enable oled","source":"_posts/raspi-oled.md","raw":"title: 树莓派SPI驱动OLED屏幕\ndate: 2017-02-07 21:11:11\ntags: [树莓派, Linux, Python]\ncategories: [奇技淫巧, 树莓派]\nphotos: \n\t- /img/oledbanner.png\n---\n\n曾经在B站看到过有人用树莓派连接OLED屏幕播放***Bad Apple***（有屏幕的地方就有***Bad Apple***），想到前些年在智能车打酱油时遗留下的一块128*64的OLED屏幕，就想给树莓派加一个monitor。\n\n# 连接引脚\n![物理编号](/img/oledpin.png)\n\n屏幕上有7个引脚，与树莓派用母对母杜邦线连接，接法如下表：\n\n|OLED引脚|功能|树莓派引脚|编号|\n|---|---|---|---|\n|GND||GND|25|\n|VCC||3.3V PWR|17|\n|D0|SCLK|GPIO 11|23|\n|D1|MOSI|GPIO 10|19|\n|RST||GPIO 17|11|\n|DC||GPIO 27|13|\n|CS|CS0|GPIO 8|24|\n\n\n# 安装依赖\n在驱动屏幕之前要先启用SPI：\n\n\tsudo raspi-config\n\t\n然后选择`Advanced Options`里的`SPI`并启用它，然后执行`sudo reboot`重启。重启后执行`ls /dev | grep spi`，如果显示：\n\n> spidev0.0\n> spidev0.1\n\t\n就说明设置生效了。\n\n先安装一些要用到的Python模块：\n\n\tsudo apt-get install build-essential python-dev python-pip\n\tsudo apt-get install python-imaging python-smbus\n\tsudo pip install RPi.GPIO\n\t\n然后克隆SPI的驱动模块并安装：\n\n\tgit clone https://github.com/adafruit/Adafruit_Python_SSD1306.git\n\tcd Adafruit_Python_SSD1306\n\tsudo python setup.py install\n\t\n# 编写脚本\n网上有人给出了Python版的测试Demo：\n\n```py\n#!/usr/bin/python/\n# coding: utf-8\nimport time\nimport Adafruit_GPIO.SPI as SPI\nimport Adafruit_SSD1306\nimport Image\nimport ImageDraw\nimport ImageFont\n \n# Raspberry Pi pin configuration:\nRST = 17\n# Note the following are only used with SPI:\nDC = 27\nSPI_PORT = 0\nSPI_DEVICE = 0\n \n# 128x64 display with hardware SPI:\ndisp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, dc=DC, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=8000000))\n \n# Initialize library.\ndisp.begin()\n \n# Clear display.\ndisp.clear()\ndisp.display()\n \n# Create blank image for drawing.\n# Make sure to create image with mode '1' for 1-bit color.\nwidth = disp.width\nheight = disp.height\nimage = Image.new('1', (width, height))\n \n# Get drawing object to draw on image.\ndraw = ImageDraw.Draw(image)\n \n# Draw a black filled box to clear the image.\ndraw.rectangle((0,0,width,height), outline=0, fill=0)\n \n# Draw some shapes.\n# First define some constants to allow easy resizing of shapes.\npadding = 1\ntop = padding\nx = padding\n# Load default font.\nfont = ImageFont.load_default()\n \n# Alternatively load a TTF font.\n# Some other nice fonts to try: http://www.dafont.com/bitmap.php\n#font = ImageFont.truetype('Minecraftia.ttf', 8)\n \ndraw.text((x, top), 'This is first line', font=font, fill=255)\ndraw.text((x, top+10), 'This is second line', font=font, fill=255)\ndraw.text((x, top+20), 'This is third line', font=font, fill=255)\ndraw.text((x, top+30), 'This is fourth line', font=font, fill=255)\ndraw.text((x, top+40), 'This is fifth line', font=font, fill=255)\ndraw.text((x, top+50), 'This is last line', font=font, fill=255)\n \n# Display image.\ndisp.image(image)\ndisp.display()\n```\n\n如果运行它能正常显示就可以编写自己的脚本了。参考这个Demo我又撸了一个显示系统实时信息的脚本：\n\n```py\n#!/usr/bin/python/\n# coding: utf-8\nimport os\nimport time\nimport socket\nimport fcntl\nimport struct\nimport requests\nimport Adafruit_GPIO.SPI as SPI\nimport Adafruit_SSD1306\nimport Image\nimport ImageDraw\nimport ImageFont\n\ndef raminfo():\n    with open('/proc/meminfo') as f:\n        total = float(f.readline().split()[1])\n        free = float(f.readline().split()[1])\n    return format((total-free)/total, '.1%')\n\ndef diskinfo():\n    st = os.statvfs('/')\n    total = float(st.f_blocks * st.f_frsize)\n    used = float(st.f_blocks - st.f_bfree) * st.f_frsize\n    return format(used/total, '.1%')\n\ndef cpuinfo():\n    with open('/proc/stat') as f:\n        info = f.readline().split()\n        t0 = float(info[1]) + float(info[2]) + float(info[3])\n        s0 = t0 + float(info[4]) + float(info[5]) + float(info[6]) + float(info[7])\n    time.sleep(0.033)\n    with open('/proc/stat') as f:\n        info = f.readline().split()\n        t1 = float(info[1]) + float(info[2]) + float(info[3])\n        s1 = t1 + float(info[4]) + float(info[5]) + float(info[6]) + float(info[7])\n    return format((t1-t0)/(s1-s0), '.1%')\n\ndef cputemp():\n    with open('/sys/class/thermal/thermal_zone0/temp') as f:\n        temp = float(f.readline())\n    return format(temp/1000, '.1f')\n\ndef wifiinfo():\n    with open('/proc/net/wireless') as f:\n        f.readline()\n        f.readline()\n        info = f.readline().split()\n    return info[3][:-1]\n\ndef get_ip_address(ifname):\n    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    return socket.inet_ntoa(fcntl.ioctl(\n        s.fileno(),\n        0x8915,  # SIOCGIFADDR\n        struct.pack('256s', ifname[:15])\n    )[20:24])\n\nIP = requests.get('http://ip.3322.net').text\n\n# Raspberry Pi pin configuration:\nRST = 17\nDC = 27\nSPI_PORT = 0\nSPI_DEVICE = 0\n\n# 128x64 display with hardware SPI:\ndisp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, dc=DC, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=8000000))\n# Initialize library.\ndisp.begin()\n# Clear display.\ndisp.clear()\n\nwhile True:\n    disp.display()\n    # Create blank image for drawing.\n    width = disp.width\n    height = disp.height\n    image = Image.new('1', (width, height))\n    # Get drawing object to draw on image.\n    draw = ImageDraw.Draw(image)\n    # Initialize background.\n    draw.rectangle((0,0,width,height), outline=0, fill=0)\n\n    padding = 1\n    top = padding\n    x = padding\n    font = ImageFont.load_default()\n\n    draw.text((x, top), time.strftime(\" %Y-%m-%d %H:%M:%S \",time.localtime(time.time())), font=font, fill=255)\n    draw.text((x, top+14), 'disk:' + diskinfo() + '  RAM:' + raminfo(), font=font, fill=255)\n    draw.text((x, top+24), 'temp:' + cputemp() + 'C  CPU:' + cpuinfo(), font=font, fill=255)\n    draw.text((x, top+34), 'signal:' + wifiinfo() + 'dBm', font=font, fill=255)\n    draw.text((x, top+44), 'LAN:' + get_ip_address('wlan0'), font=font, fill=255)\n    draw.text((x, top+54), 'WAN:' + IP, font=font, fill=255)\n\n    # Display image.\n    disp.image(image)\n    disp.display()\n```\n\n效果如下：\n\n![](/img/oled.gif)\n\n# 开机启动\n先新建一个Unit配置文件：\n\n\tsudo vim /lib/systemd/system/oled.service\n\t\n内容如下：\n\n```accesslog\n[Unit]\nDescription=oled autostart\n\n[Service]\nType=idle\nExecStart=/usr/bin/python /home/pi/oled.py\n\n[Install]\nWantedBy=multi-user.target\n```\n\n然后启动并加入启动项：\n\n\tsudo systemctl daemon-reload\n\tsudo systemctl start oled\n\tsudo systemctl enable oled","slug":"raspi-oled","published":1,"updated":"2017-02-18T11:38:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0ty001k8mprhr4oeaaf","content":"<p>曾经在B站看到过有人用树莓派连接OLED屏幕播放<strong><em>Bad Apple</em></strong>（有屏幕的地方就有<strong><em>Bad Apple</em></strong>），想到前些年在智能车打酱油时遗留下的一块128*64的OLED屏幕，就想给树莓派加一个monitor。</p>\n<h1 id=\"连接引脚\"><a href=\"#连接引脚\" class=\"headerlink\" title=\"连接引脚\"></a>连接引脚</h1><p><img src=\"/img/oledpin.png\" alt=\"物理编号\"></p>\n<p>屏幕上有7个引脚，与树莓派用母对母杜邦线连接，接法如下表：</p>\n<table>\n<thead>\n<tr>\n<th>OLED引脚</th>\n<th>功能</th>\n<th>树莓派引脚</th>\n<th>编号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GND</td>\n<td></td>\n<td>GND</td>\n<td>25</td>\n</tr>\n<tr>\n<td>VCC</td>\n<td></td>\n<td>3.3V PWR</td>\n<td>17</td>\n</tr>\n<tr>\n<td>D0</td>\n<td>SCLK</td>\n<td>GPIO 11</td>\n<td>23</td>\n</tr>\n<tr>\n<td>D1</td>\n<td>MOSI</td>\n<td>GPIO 10</td>\n<td>19</td>\n</tr>\n<tr>\n<td>RST</td>\n<td></td>\n<td>GPIO 17</td>\n<td>11</td>\n</tr>\n<tr>\n<td>DC</td>\n<td></td>\n<td>GPIO 27</td>\n<td>13</td>\n</tr>\n<tr>\n<td>CS</td>\n<td>CS0</td>\n<td>GPIO 8</td>\n<td>24</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><p>在驱动屏幕之前要先启用SPI：</p>\n<pre><code>sudo raspi-config\n</code></pre><p>然后选择<code>Advanced Options</code>里的<code>SPI</code>并启用它，然后执行<code>sudo reboot</code>重启。重启后执行<code>ls /dev | grep spi</code>，如果显示：</p>\n<blockquote>\n<p>spidev0.0<br>spidev0.1</p>\n</blockquote>\n<p>就说明设置生效了。</p>\n<p>先安装一些要用到的Python模块：</p>\n<pre><code>sudo apt-get install build-essential python-dev python-pip\nsudo apt-get install python-imaging python-smbus\nsudo pip install RPi.GPIO\n</code></pre><p>然后克隆SPI的驱动模块并安装：</p>\n<pre><code>git clone https://github.com/adafruit/Adafruit_Python_SSD1306.git\ncd Adafruit_Python_SSD1306\nsudo python setup.py install\n</code></pre><h1 id=\"编写脚本\"><a href=\"#编写脚本\" class=\"headerlink\" title=\"编写脚本\"></a>编写脚本</h1><p>网上有人给出了Python版的测试Demo：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python/</span></div><div class=\"line\"><span class=\"comment\"># coding: utf-8</span></div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"><span class=\"keyword\">import</span> Adafruit_GPIO.SPI <span class=\"keyword\">as</span> SPI</div><div class=\"line\"><span class=\"keyword\">import</span> Adafruit_SSD1306</div><div class=\"line\"><span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"keyword\">import</span> ImageDraw</div><div class=\"line\"><span class=\"keyword\">import</span> ImageFont</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Raspberry Pi pin configuration:</span></div><div class=\"line\">RST = <span class=\"number\">17</span></div><div class=\"line\"><span class=\"comment\"># Note the following are only used with SPI:</span></div><div class=\"line\">DC = <span class=\"number\">27</span></div><div class=\"line\">SPI_PORT = <span class=\"number\">0</span></div><div class=\"line\">SPI_DEVICE = <span class=\"number\">0</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># 128x64 display with hardware SPI:</span></div><div class=\"line\">disp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, dc=DC, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=<span class=\"number\">8000000</span>))</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Initialize library.</span></div><div class=\"line\">disp.begin()</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Clear display.</span></div><div class=\"line\">disp.clear()</div><div class=\"line\">disp.display()</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Create blank image for drawing.</span></div><div class=\"line\"><span class=\"comment\"># Make sure to create image with mode '1' for 1-bit color.</span></div><div class=\"line\">width = disp.width</div><div class=\"line\">height = disp.height</div><div class=\"line\">image = Image.new(<span class=\"string\">'1'</span>, (width, height))</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Get drawing object to draw on image.</span></div><div class=\"line\">draw = ImageDraw.Draw(image)</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Draw a black filled box to clear the image.</span></div><div class=\"line\">draw.rectangle((<span class=\"number\">0</span>,<span class=\"number\">0</span>,width,height), outline=<span class=\"number\">0</span>, fill=<span class=\"number\">0</span>)</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Draw some shapes.</span></div><div class=\"line\"><span class=\"comment\"># First define some constants to allow easy resizing of shapes.</span></div><div class=\"line\">padding = <span class=\"number\">1</span></div><div class=\"line\">top = padding</div><div class=\"line\">x = padding</div><div class=\"line\"><span class=\"comment\"># Load default font.</span></div><div class=\"line\">font = ImageFont.load_default()</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Alternatively load a TTF font.</span></div><div class=\"line\"><span class=\"comment\"># Some other nice fonts to try: http://www.dafont.com/bitmap.php</span></div><div class=\"line\"><span class=\"comment\">#font = ImageFont.truetype('Minecraftia.ttf', 8)</span></div><div class=\"line\"> </div><div class=\"line\">draw.text((x, top), <span class=\"string\">'This is first line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">10</span>), <span class=\"string\">'This is second line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">20</span>), <span class=\"string\">'This is third line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">30</span>), <span class=\"string\">'This is fourth line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">40</span>), <span class=\"string\">'This is fifth line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">50</span>), <span class=\"string\">'This is last line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Display image.</span></div><div class=\"line\">disp.image(image)</div><div class=\"line\">disp.display()</div></pre></td></tr></table></figure>\n<p>如果运行它能正常显示就可以编写自己的脚本了。参考这个Demo我又撸了一个显示系统实时信息的脚本：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python/</span></div><div class=\"line\"><span class=\"comment\"># coding: utf-8</span></div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"><span class=\"keyword\">import</span> socket</div><div class=\"line\"><span class=\"keyword\">import</span> fcntl</div><div class=\"line\"><span class=\"keyword\">import</span> struct</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">import</span> Adafruit_GPIO.SPI <span class=\"keyword\">as</span> SPI</div><div class=\"line\"><span class=\"keyword\">import</span> Adafruit_SSD1306</div><div class=\"line\"><span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"keyword\">import</span> ImageDraw</div><div class=\"line\"><span class=\"keyword\">import</span> ImageFont</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">raminfo</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/proc/meminfo'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        total = float(f.readline().split()[<span class=\"number\">1</span>])</div><div class=\"line\">        free = float(f.readline().split()[<span class=\"number\">1</span>])</div><div class=\"line\">    <span class=\"keyword\">return</span> format((total-free)/total, <span class=\"string\">'.1%'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">diskinfo</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    st = os.statvfs(<span class=\"string\">'/'</span>)</div><div class=\"line\">    total = float(st.f_blocks * st.f_frsize)</div><div class=\"line\">    used = float(st.f_blocks - st.f_bfree) * st.f_frsize</div><div class=\"line\">    <span class=\"keyword\">return</span> format(used/total, <span class=\"string\">'.1%'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cpuinfo</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/proc/stat'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        info = f.readline().split()</div><div class=\"line\">        t0 = float(info[<span class=\"number\">1</span>]) + float(info[<span class=\"number\">2</span>]) + float(info[<span class=\"number\">3</span>])</div><div class=\"line\">        s0 = t0 + float(info[<span class=\"number\">4</span>]) + float(info[<span class=\"number\">5</span>]) + float(info[<span class=\"number\">6</span>]) + float(info[<span class=\"number\">7</span>])</div><div class=\"line\">    time.sleep(<span class=\"number\">0.033</span>)</div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/proc/stat'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        info = f.readline().split()</div><div class=\"line\">        t1 = float(info[<span class=\"number\">1</span>]) + float(info[<span class=\"number\">2</span>]) + float(info[<span class=\"number\">3</span>])</div><div class=\"line\">        s1 = t1 + float(info[<span class=\"number\">4</span>]) + float(info[<span class=\"number\">5</span>]) + float(info[<span class=\"number\">6</span>]) + float(info[<span class=\"number\">7</span>])</div><div class=\"line\">    <span class=\"keyword\">return</span> format((t1-t0)/(s1-s0), <span class=\"string\">'.1%'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cputemp</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/sys/class/thermal/thermal_zone0/temp'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        temp = float(f.readline())</div><div class=\"line\">    <span class=\"keyword\">return</span> format(temp/<span class=\"number\">1000</span>, <span class=\"string\">'.1f'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wifiinfo</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/proc/net/wireless'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        f.readline()</div><div class=\"line\">        f.readline()</div><div class=\"line\">        info = f.readline().split()</div><div class=\"line\">    <span class=\"keyword\">return</span> info[<span class=\"number\">3</span>][:<span class=\"number\">-1</span>]</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_ip_address</span><span class=\"params\">(ifname)</span>:</span></div><div class=\"line\">    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</div><div class=\"line\">    <span class=\"keyword\">return</span> socket.inet_ntoa(fcntl.ioctl(</div><div class=\"line\">        s.fileno(),</div><div class=\"line\">        <span class=\"number\">0x8915</span>,  <span class=\"comment\"># SIOCGIFADDR</span></div><div class=\"line\">        struct.pack(<span class=\"string\">'256s'</span>, ifname[:<span class=\"number\">15</span>])</div><div class=\"line\">    )[<span class=\"number\">20</span>:<span class=\"number\">24</span>])</div><div class=\"line\"></div><div class=\"line\">IP = requests.get(<span class=\"string\">'http://ip.3322.net'</span>).text</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Raspberry Pi pin configuration:</span></div><div class=\"line\">RST = <span class=\"number\">17</span></div><div class=\"line\">DC = <span class=\"number\">27</span></div><div class=\"line\">SPI_PORT = <span class=\"number\">0</span></div><div class=\"line\">SPI_DEVICE = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 128x64 display with hardware SPI:</span></div><div class=\"line\">disp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, dc=DC, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=<span class=\"number\">8000000</span>))</div><div class=\"line\"><span class=\"comment\"># Initialize library.</span></div><div class=\"line\">disp.begin()</div><div class=\"line\"><span class=\"comment\"># Clear display.</span></div><div class=\"line\">disp.clear()</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">    disp.display()</div><div class=\"line\">    <span class=\"comment\"># Create blank image for drawing.</span></div><div class=\"line\">    width = disp.width</div><div class=\"line\">    height = disp.height</div><div class=\"line\">    image = Image.new(<span class=\"string\">'1'</span>, (width, height))</div><div class=\"line\">    <span class=\"comment\"># Get drawing object to draw on image.</span></div><div class=\"line\">    draw = ImageDraw.Draw(image)</div><div class=\"line\">    <span class=\"comment\"># Initialize background.</span></div><div class=\"line\">    draw.rectangle((<span class=\"number\">0</span>,<span class=\"number\">0</span>,width,height), outline=<span class=\"number\">0</span>, fill=<span class=\"number\">0</span>)</div><div class=\"line\"></div><div class=\"line\">    padding = <span class=\"number\">1</span></div><div class=\"line\">    top = padding</div><div class=\"line\">    x = padding</div><div class=\"line\">    font = ImageFont.load_default()</div><div class=\"line\"></div><div class=\"line\">    draw.text((x, top), time.strftime(<span class=\"string\">\" %Y-%m-%d %H:%M:%S \"</span>,time.localtime(time.time())), font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">14</span>), <span class=\"string\">'disk:'</span> + diskinfo() + <span class=\"string\">'  RAM:'</span> + raminfo(), font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">24</span>), <span class=\"string\">'temp:'</span> + cputemp() + <span class=\"string\">'C  CPU:'</span> + cpuinfo(), font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">34</span>), <span class=\"string\">'signal:'</span> + wifiinfo() + <span class=\"string\">'dBm'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">44</span>), <span class=\"string\">'LAN:'</span> + get_ip_address(<span class=\"string\">'wlan0'</span>), font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">54</span>), <span class=\"string\">'WAN:'</span> + IP, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Display image.</span></div><div class=\"line\">    disp.image(image)</div><div class=\"line\">    disp.display()</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><img src=\"/img/oled.gif\" alt=\"\"></p>\n<h1 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h1><p>先新建一个Unit配置文件：</p>\n<pre><code>sudo vim /lib/systemd/system/oled.service\n</code></pre><p>内容如下：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">[Unit]</span></div><div class=\"line\">Description=oled autostart</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">[Service]</span></div><div class=\"line\">Type=idle</div><div class=\"line\">ExecStart=/usr/bin/python /home/pi/oled.py</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">[Install]</span></div><div class=\"line\">WantedBy=multi-user.target</div></pre></td></tr></table></figure>\n<p>然后启动并加入启动项：</p>\n<pre><code>sudo systemctl daemon-reload\nsudo systemctl start oled\nsudo systemctl enable oled\n</code></pre>","excerpt":"","more":"<p>曾经在B站看到过有人用树莓派连接OLED屏幕播放<strong><em>Bad Apple</em></strong>（有屏幕的地方就有<strong><em>Bad Apple</em></strong>），想到前些年在智能车打酱油时遗留下的一块128*64的OLED屏幕，就想给树莓派加一个monitor。</p>\n<h1 id=\"连接引脚\"><a href=\"#连接引脚\" class=\"headerlink\" title=\"连接引脚\"></a>连接引脚</h1><p><img src=\"/img/oledpin.png\" alt=\"物理编号\"></p>\n<p>屏幕上有7个引脚，与树莓派用母对母杜邦线连接，接法如下表：</p>\n<table>\n<thead>\n<tr>\n<th>OLED引脚</th>\n<th>功能</th>\n<th>树莓派引脚</th>\n<th>编号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GND</td>\n<td></td>\n<td>GND</td>\n<td>25</td>\n</tr>\n<tr>\n<td>VCC</td>\n<td></td>\n<td>3.3V PWR</td>\n<td>17</td>\n</tr>\n<tr>\n<td>D0</td>\n<td>SCLK</td>\n<td>GPIO 11</td>\n<td>23</td>\n</tr>\n<tr>\n<td>D1</td>\n<td>MOSI</td>\n<td>GPIO 10</td>\n<td>19</td>\n</tr>\n<tr>\n<td>RST</td>\n<td></td>\n<td>GPIO 17</td>\n<td>11</td>\n</tr>\n<tr>\n<td>DC</td>\n<td></td>\n<td>GPIO 27</td>\n<td>13</td>\n</tr>\n<tr>\n<td>CS</td>\n<td>CS0</td>\n<td>GPIO 8</td>\n<td>24</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h1><p>在驱动屏幕之前要先启用SPI：</p>\n<pre><code>sudo raspi-config\n</code></pre><p>然后选择<code>Advanced Options</code>里的<code>SPI</code>并启用它，然后执行<code>sudo reboot</code>重启。重启后执行<code>ls /dev | grep spi</code>，如果显示：</p>\n<blockquote>\n<p>spidev0.0<br>spidev0.1</p>\n</blockquote>\n<p>就说明设置生效了。</p>\n<p>先安装一些要用到的Python模块：</p>\n<pre><code>sudo apt-get install build-essential python-dev python-pip\nsudo apt-get install python-imaging python-smbus\nsudo pip install RPi.GPIO\n</code></pre><p>然后克隆SPI的驱动模块并安装：</p>\n<pre><code>git clone https://github.com/adafruit/Adafruit_Python_SSD1306.git\ncd Adafruit_Python_SSD1306\nsudo python setup.py install\n</code></pre><h1 id=\"编写脚本\"><a href=\"#编写脚本\" class=\"headerlink\" title=\"编写脚本\"></a>编写脚本</h1><p>网上有人给出了Python版的测试Demo：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python/</span></div><div class=\"line\"><span class=\"comment\"># coding: utf-8</span></div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"><span class=\"keyword\">import</span> Adafruit_GPIO.SPI <span class=\"keyword\">as</span> SPI</div><div class=\"line\"><span class=\"keyword\">import</span> Adafruit_SSD1306</div><div class=\"line\"><span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"keyword\">import</span> ImageDraw</div><div class=\"line\"><span class=\"keyword\">import</span> ImageFont</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Raspberry Pi pin configuration:</span></div><div class=\"line\">RST = <span class=\"number\">17</span></div><div class=\"line\"><span class=\"comment\"># Note the following are only used with SPI:</span></div><div class=\"line\">DC = <span class=\"number\">27</span></div><div class=\"line\">SPI_PORT = <span class=\"number\">0</span></div><div class=\"line\">SPI_DEVICE = <span class=\"number\">0</span></div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># 128x64 display with hardware SPI:</span></div><div class=\"line\">disp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, dc=DC, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=<span class=\"number\">8000000</span>))</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Initialize library.</span></div><div class=\"line\">disp.begin()</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Clear display.</span></div><div class=\"line\">disp.clear()</div><div class=\"line\">disp.display()</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Create blank image for drawing.</span></div><div class=\"line\"><span class=\"comment\"># Make sure to create image with mode '1' for 1-bit color.</span></div><div class=\"line\">width = disp.width</div><div class=\"line\">height = disp.height</div><div class=\"line\">image = Image.new(<span class=\"string\">'1'</span>, (width, height))</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Get drawing object to draw on image.</span></div><div class=\"line\">draw = ImageDraw.Draw(image)</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Draw a black filled box to clear the image.</span></div><div class=\"line\">draw.rectangle((<span class=\"number\">0</span>,<span class=\"number\">0</span>,width,height), outline=<span class=\"number\">0</span>, fill=<span class=\"number\">0</span>)</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Draw some shapes.</span></div><div class=\"line\"><span class=\"comment\"># First define some constants to allow easy resizing of shapes.</span></div><div class=\"line\">padding = <span class=\"number\">1</span></div><div class=\"line\">top = padding</div><div class=\"line\">x = padding</div><div class=\"line\"><span class=\"comment\"># Load default font.</span></div><div class=\"line\">font = ImageFont.load_default()</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Alternatively load a TTF font.</span></div><div class=\"line\"><span class=\"comment\"># Some other nice fonts to try: http://www.dafont.com/bitmap.php</span></div><div class=\"line\"><span class=\"comment\">#font = ImageFont.truetype('Minecraftia.ttf', 8)</span></div><div class=\"line\"> </div><div class=\"line\">draw.text((x, top), <span class=\"string\">'This is first line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">10</span>), <span class=\"string\">'This is second line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">20</span>), <span class=\"string\">'This is third line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">30</span>), <span class=\"string\">'This is fourth line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">40</span>), <span class=\"string\">'This is fifth line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">draw.text((x, top+<span class=\"number\">50</span>), <span class=\"string\">'This is last line'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># Display image.</span></div><div class=\"line\">disp.image(image)</div><div class=\"line\">disp.display()</div></pre></td></tr></table></figure>\n<p>如果运行它能正常显示就可以编写自己的脚本了。参考这个Demo我又撸了一个显示系统实时信息的脚本：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python/</span></div><div class=\"line\"><span class=\"comment\"># coding: utf-8</span></div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"><span class=\"keyword\">import</span> socket</div><div class=\"line\"><span class=\"keyword\">import</span> fcntl</div><div class=\"line\"><span class=\"keyword\">import</span> struct</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">import</span> Adafruit_GPIO.SPI <span class=\"keyword\">as</span> SPI</div><div class=\"line\"><span class=\"keyword\">import</span> Adafruit_SSD1306</div><div class=\"line\"><span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"keyword\">import</span> ImageDraw</div><div class=\"line\"><span class=\"keyword\">import</span> ImageFont</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">raminfo</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/proc/meminfo'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        total = float(f.readline().split()[<span class=\"number\">1</span>])</div><div class=\"line\">        free = float(f.readline().split()[<span class=\"number\">1</span>])</div><div class=\"line\">    <span class=\"keyword\">return</span> format((total-free)/total, <span class=\"string\">'.1%'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">diskinfo</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    st = os.statvfs(<span class=\"string\">'/'</span>)</div><div class=\"line\">    total = float(st.f_blocks * st.f_frsize)</div><div class=\"line\">    used = float(st.f_blocks - st.f_bfree) * st.f_frsize</div><div class=\"line\">    <span class=\"keyword\">return</span> format(used/total, <span class=\"string\">'.1%'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cpuinfo</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/proc/stat'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        info = f.readline().split()</div><div class=\"line\">        t0 = float(info[<span class=\"number\">1</span>]) + float(info[<span class=\"number\">2</span>]) + float(info[<span class=\"number\">3</span>])</div><div class=\"line\">        s0 = t0 + float(info[<span class=\"number\">4</span>]) + float(info[<span class=\"number\">5</span>]) + float(info[<span class=\"number\">6</span>]) + float(info[<span class=\"number\">7</span>])</div><div class=\"line\">    time.sleep(<span class=\"number\">0.033</span>)</div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/proc/stat'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        info = f.readline().split()</div><div class=\"line\">        t1 = float(info[<span class=\"number\">1</span>]) + float(info[<span class=\"number\">2</span>]) + float(info[<span class=\"number\">3</span>])</div><div class=\"line\">        s1 = t1 + float(info[<span class=\"number\">4</span>]) + float(info[<span class=\"number\">5</span>]) + float(info[<span class=\"number\">6</span>]) + float(info[<span class=\"number\">7</span>])</div><div class=\"line\">    <span class=\"keyword\">return</span> format((t1-t0)/(s1-s0), <span class=\"string\">'.1%'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cputemp</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/sys/class/thermal/thermal_zone0/temp'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        temp = float(f.readline())</div><div class=\"line\">    <span class=\"keyword\">return</span> format(temp/<span class=\"number\">1000</span>, <span class=\"string\">'.1f'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wifiinfo</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'/proc/net/wireless'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">        f.readline()</div><div class=\"line\">        f.readline()</div><div class=\"line\">        info = f.readline().split()</div><div class=\"line\">    <span class=\"keyword\">return</span> info[<span class=\"number\">3</span>][:<span class=\"number\">-1</span>]</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_ip_address</span><span class=\"params\">(ifname)</span>:</span></div><div class=\"line\">    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</div><div class=\"line\">    <span class=\"keyword\">return</span> socket.inet_ntoa(fcntl.ioctl(</div><div class=\"line\">        s.fileno(),</div><div class=\"line\">        <span class=\"number\">0x8915</span>,  <span class=\"comment\"># SIOCGIFADDR</span></div><div class=\"line\">        struct.pack(<span class=\"string\">'256s'</span>, ifname[:<span class=\"number\">15</span>])</div><div class=\"line\">    )[<span class=\"number\">20</span>:<span class=\"number\">24</span>])</div><div class=\"line\"></div><div class=\"line\">IP = requests.get(<span class=\"string\">'http://ip.3322.net'</span>).text</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Raspberry Pi pin configuration:</span></div><div class=\"line\">RST = <span class=\"number\">17</span></div><div class=\"line\">DC = <span class=\"number\">27</span></div><div class=\"line\">SPI_PORT = <span class=\"number\">0</span></div><div class=\"line\">SPI_DEVICE = <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 128x64 display with hardware SPI:</span></div><div class=\"line\">disp = Adafruit_SSD1306.SSD1306_128_64(rst=RST, dc=DC, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=<span class=\"number\">8000000</span>))</div><div class=\"line\"><span class=\"comment\"># Initialize library.</span></div><div class=\"line\">disp.begin()</div><div class=\"line\"><span class=\"comment\"># Clear display.</span></div><div class=\"line\">disp.clear()</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">    disp.display()</div><div class=\"line\">    <span class=\"comment\"># Create blank image for drawing.</span></div><div class=\"line\">    width = disp.width</div><div class=\"line\">    height = disp.height</div><div class=\"line\">    image = Image.new(<span class=\"string\">'1'</span>, (width, height))</div><div class=\"line\">    <span class=\"comment\"># Get drawing object to draw on image.</span></div><div class=\"line\">    draw = ImageDraw.Draw(image)</div><div class=\"line\">    <span class=\"comment\"># Initialize background.</span></div><div class=\"line\">    draw.rectangle((<span class=\"number\">0</span>,<span class=\"number\">0</span>,width,height), outline=<span class=\"number\">0</span>, fill=<span class=\"number\">0</span>)</div><div class=\"line\"></div><div class=\"line\">    padding = <span class=\"number\">1</span></div><div class=\"line\">    top = padding</div><div class=\"line\">    x = padding</div><div class=\"line\">    font = ImageFont.load_default()</div><div class=\"line\"></div><div class=\"line\">    draw.text((x, top), time.strftime(<span class=\"string\">\" %Y-%m-%d %H:%M:%S \"</span>,time.localtime(time.time())), font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">14</span>), <span class=\"string\">'disk:'</span> + diskinfo() + <span class=\"string\">'  RAM:'</span> + raminfo(), font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">24</span>), <span class=\"string\">'temp:'</span> + cputemp() + <span class=\"string\">'C  CPU:'</span> + cpuinfo(), font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">34</span>), <span class=\"string\">'signal:'</span> + wifiinfo() + <span class=\"string\">'dBm'</span>, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">44</span>), <span class=\"string\">'LAN:'</span> + get_ip_address(<span class=\"string\">'wlan0'</span>), font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\">    draw.text((x, top+<span class=\"number\">54</span>), <span class=\"string\">'WAN:'</span> + IP, font=font, fill=<span class=\"number\">255</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\"># Display image.</span></div><div class=\"line\">    disp.image(image)</div><div class=\"line\">    disp.display()</div></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><img src=\"/img/oled.gif\" alt=\"\"></p>\n<h1 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h1><p>先新建一个Unit配置文件：</p>\n<pre><code>sudo vim /lib/systemd/system/oled.service\n</code></pre><p>内容如下：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">[Unit]</span></div><div class=\"line\">Description=oled autostart</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">[Service]</span></div><div class=\"line\">Type=idle</div><div class=\"line\">ExecStart=/usr/bin/python /home/pi/oled.py</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">[Install]</span></div><div class=\"line\">WantedBy=multi-user.target</div></pre></td></tr></table></figure>\n<p>然后启动并加入启动项：</p>\n<pre><code>sudo systemctl daemon-reload\nsudo systemctl start oled\nsudo systemctl enable oled\n</code></pre>"},{"title":"路由器刷入OpenWrt固件","date":"2015-12-12T04:12:12.000Z","photos":["https://wiki.openwrt.org/lib/tpl/openwrt/images/logo.png"],"_content":"\n暑假剁手了一台rMBP但没有以太网接口，为了省钱就需要一个无线路由器，之前曾了解到路由器可以刷**OpenWrt**后装上**ShadowSocks**实现自动科学上网，于是就在集训的时候从马云家买了一个二手的[TP-Link TL-WR703N](http://www.tp-link.com.cn/product_225.html)刷上OpenWrt在机房给笔记本供网。\n\n![TL-WR703N](/img/op703n.png)\n\n由于这货只有一个网口，当路由器自动获取IP地址后，就进不去[192.168.1.1](http://192.168.1.1/)的管理界面了，虽然能上网，但每次换网线接头的时候都要捅菊花抹掉原来的设置。因此只有使用静态IP时才能正常使用这种路由器。这学期开学后发现家里有一个[Netgear WNR2200](http://www.netgear.com/home/products/networking/wifi-routers/wnr2200.aspx)在吃灰，于是就把它拿到学校刷上了OpenWrt放宿舍给各种无线设备供网。\n\n![WNR2200](/img/op2200.png)\n\n# 刷入固件\n**OpenWrt**是一个适合于嵌入式设备的Linux发行版。它提供了一个可添加软件包的可写的文件系统，使用者可以自由的选择应用程序和配置，并且可以使用一些适合某方面的应用的软件包来定制设备。\n\n## 准备工作\n### 路由器\n首先你要拥有一台可以刷入OpenWrt的路由器，至于OpenWrt支持那些设备，请到[Supported Devices](https://wiki.openwrt.org/toh/start)页面查看。本文以WNR2200为例。\n### 固件\n前往[Download](https://downloads.openwrt.org/latest/)下载最新的对应设备的固件。注意固件列表里一半会有两种后缀：`squashfs-factory.img`和`squashfs-sysupgrade.img`，如果是从原厂固件刷到OpenWrt请用前者，如果是从OpenWrt升级请用后者。还有一种可能文件名以`NA`结尾~~，可能是代表`North America`~~，基本上与不带`NA`的没什么区别。\n### 环境\n还需要一台有以太网接口的电脑和一根网线，电脑操作系统不限，但是*Windows*需要提前开启`TFTP`（因为这个功能系统默认是关闭的），具体操作就是进入`控制面板`-`程序`-`程序和功能`，\n\n![开启TFTP](/img/optftp.png)\n\n打开`打开或关闭Windows功能`窗口，在里面把`TFTP`挑上钩，之后就可以开始了。\n\n## 刷入固件\n**刷机有风险，操作需谨慎！**\n**刷机有风险，操作需谨慎！**\n**刷机有风险，操作需谨慎！**\n~~重要的事说三遍~~\n\n首先要将路由器与电脑用网线相连（在后面的设置中网线是必要的），然后进入到路由器管理界面。\n\n有的原厂固件是可以直接升级成OpenWrt的，因此首先进入路由器管理界面，找到固件升级的选项，选择下好的OpenWrt固件上传就可以了，我之前刷TL-WR703N时是可以直接上传的，上传完成重启后就算是刷完了。但我后来刷WNR2200时遇到了不认固件的情况（可能是因为原厂固件的版本问题），于是只好用**TFTP**的方式上传固件，这就是之前为什么要打开Windows中`TFTP`功能的原因。\n\n如果从原厂管理界面中直接上传固件成功，请直接进入下一节；若不认固件，请执行以下步骤：\n\n+ 关闭路由器电源，用笔尖捅住“Restore Factory Settings”~~菊花~~键不放。\n\n+ 打开路由器电源，这时电源黄灯开始闪烁，这时依然**不要松开**RESET键，直到电源灯变为绿色长亮（或闪烁？）才可松手（可能有的路由器的表现不一样，达到类似效果即可），这时路由器已经进入了tftp模式。\n\n+ 将电脑的IP设为`192.168.1.2`，子网掩码设为`255.255.255.0`，将电脑与路由器的**1号LAN口**用网线相连。\n\n+ 从终端进入到要刷的固件所在目录中，假设固件名叫`openwrt.img`，如果在*Windows*下则使用命令：\n\n\t\ttftp -i 192.168.1.1 PUT \"openwrt.img\"\n  \n  如果在*OS X*或*Linux*下则在终端里键入`tftp`，之后使用以下命令：\n  \n\t\tconnect 192.168.1.1\n\t\tbinary\n\t\trexmt 1\n\t\ttimeout 60\n\t\tput \"openwrt.img\"\n  \n  稍等片刻，路由器的灯会出现各种变化，直到电源灯又恢复长绿状态（不同路由器或许不同），说明上传完成了。\n\n+ 重启路由器，不出意外之后应该可以通过网页访问[192.168.1.1](192.168.1.1)的`LuCI`管理界面了。\n\n## 开启无线\n较新的OpenWrt应该已经自带`LuCI`图形化界面了，因此直接浏览器打开[192.168.1.1](192.168.1.1)就可以看到类似如下界面：\n\n![LuCI](/img/opfirst.png)\n\n当然咯，第一次登入肯定是要先设密码的，毕竟也算是一个Linux系统：\n\n![更改密码](/img/oppasswd.png)\n\nOpenWrt默认是关闭无线网络的，所以到`Network`-`Wifi`下面启用即可：\n\n![启用Wifi](/img/opwifi.png)\n\n之后设置SSID和密码就可以通过无线方式连接了。\n\n# 基本设置\n\n既然要装上软件，自然要从互联网获取，那么路由器当然要联网咯。先到`Network`-`Interfaces`设置WAN口的上网方式，这点和普通路由器没有什么差别，这里不再赘述。\n\n如果觉得英文LuCI使用不便，也可以到`System`-`Software`下找到一个叫`luci-i18n-base-zh-cn`的包装上就行了，当然首先要`Update lists`一下，之后到`System`-`System`下切换成`普通话`再刷新一下就变成中文界面了。\n\n![设置中文](/img/oplucicn.png)\n\n当然，以后要装的部分软件也可以通过上面这种方式安装，但由于有的包官方源里没有，我们在下面使用一种更通用的方法——从命令行安装。\n\nOpenWrt归根结底还是一个**Linux发行版**，所以Linux命令在这里依然适用。\n\n我们还是通过SSH登录：\n\n\tssh root@192.168.1.1\n\t\n输入之前设置的密码后，就会看到OpenWrt特有的终端界面：\n\n\tBusyBox v1.23.2 (2015-07-25 15:09:46 CEST) built-in shell (ash)\n\n\t  _______                     ________        __\n\t |       |.-----.-----.-----.|  |  |  |.----.|  |_\n\t |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|\n\t |_______||   __|_____|__|__||________||__|  |____|\n\t          |__| W I R E L E S S   F R E E D O M\n\t -----------------------------------------------------\n\t CHAOS CALMER (15.05, r46767)\n\t -----------------------------------------------------\n\t  * 1 1/2 oz Gin            Shake with a glassful\n\t  * 1/4 oz Triple Sec       of broken ice and pour\n\t  * 3/4 oz Lime Juice       unstrained into a goblet.\n\t  * 1 1/2 oz Orange Juice\n\t  * 1 tsp. Grenadine Syrup\n\t -----------------------------------------------------\n\troot@OpenWrt:~# \n\n先更新一下软件源（和LuCI中的软件包刷新列表是一样的）：\n\n\topkg update\n\topkg list-installed\n\topkg list\n\n然后就可以按照自己的需求安装要用的软件了。","source":"_posts/openwrt.md","raw":"title: 路由器刷入OpenWrt固件\ndate: 2015-12-12 12:12:12\ntags: [OpenWrt, 路由器, Linux, ssh]\ncategories: [奇技淫巧, 路由器]\nphotos:\n\t- https://wiki.openwrt.org/lib/tpl/openwrt/images/logo.png\n---\n\n暑假剁手了一台rMBP但没有以太网接口，为了省钱就需要一个无线路由器，之前曾了解到路由器可以刷**OpenWrt**后装上**ShadowSocks**实现自动科学上网，于是就在集训的时候从马云家买了一个二手的[TP-Link TL-WR703N](http://www.tp-link.com.cn/product_225.html)刷上OpenWrt在机房给笔记本供网。\n\n![TL-WR703N](/img/op703n.png)\n\n由于这货只有一个网口，当路由器自动获取IP地址后，就进不去[192.168.1.1](http://192.168.1.1/)的管理界面了，虽然能上网，但每次换网线接头的时候都要捅菊花抹掉原来的设置。因此只有使用静态IP时才能正常使用这种路由器。这学期开学后发现家里有一个[Netgear WNR2200](http://www.netgear.com/home/products/networking/wifi-routers/wnr2200.aspx)在吃灰，于是就把它拿到学校刷上了OpenWrt放宿舍给各种无线设备供网。\n\n![WNR2200](/img/op2200.png)\n\n# 刷入固件\n**OpenWrt**是一个适合于嵌入式设备的Linux发行版。它提供了一个可添加软件包的可写的文件系统，使用者可以自由的选择应用程序和配置，并且可以使用一些适合某方面的应用的软件包来定制设备。\n\n## 准备工作\n### 路由器\n首先你要拥有一台可以刷入OpenWrt的路由器，至于OpenWrt支持那些设备，请到[Supported Devices](https://wiki.openwrt.org/toh/start)页面查看。本文以WNR2200为例。\n### 固件\n前往[Download](https://downloads.openwrt.org/latest/)下载最新的对应设备的固件。注意固件列表里一半会有两种后缀：`squashfs-factory.img`和`squashfs-sysupgrade.img`，如果是从原厂固件刷到OpenWrt请用前者，如果是从OpenWrt升级请用后者。还有一种可能文件名以`NA`结尾~~，可能是代表`North America`~~，基本上与不带`NA`的没什么区别。\n### 环境\n还需要一台有以太网接口的电脑和一根网线，电脑操作系统不限，但是*Windows*需要提前开启`TFTP`（因为这个功能系统默认是关闭的），具体操作就是进入`控制面板`-`程序`-`程序和功能`，\n\n![开启TFTP](/img/optftp.png)\n\n打开`打开或关闭Windows功能`窗口，在里面把`TFTP`挑上钩，之后就可以开始了。\n\n## 刷入固件\n**刷机有风险，操作需谨慎！**\n**刷机有风险，操作需谨慎！**\n**刷机有风险，操作需谨慎！**\n~~重要的事说三遍~~\n\n首先要将路由器与电脑用网线相连（在后面的设置中网线是必要的），然后进入到路由器管理界面。\n\n有的原厂固件是可以直接升级成OpenWrt的，因此首先进入路由器管理界面，找到固件升级的选项，选择下好的OpenWrt固件上传就可以了，我之前刷TL-WR703N时是可以直接上传的，上传完成重启后就算是刷完了。但我后来刷WNR2200时遇到了不认固件的情况（可能是因为原厂固件的版本问题），于是只好用**TFTP**的方式上传固件，这就是之前为什么要打开Windows中`TFTP`功能的原因。\n\n如果从原厂管理界面中直接上传固件成功，请直接进入下一节；若不认固件，请执行以下步骤：\n\n+ 关闭路由器电源，用笔尖捅住“Restore Factory Settings”~~菊花~~键不放。\n\n+ 打开路由器电源，这时电源黄灯开始闪烁，这时依然**不要松开**RESET键，直到电源灯变为绿色长亮（或闪烁？）才可松手（可能有的路由器的表现不一样，达到类似效果即可），这时路由器已经进入了tftp模式。\n\n+ 将电脑的IP设为`192.168.1.2`，子网掩码设为`255.255.255.0`，将电脑与路由器的**1号LAN口**用网线相连。\n\n+ 从终端进入到要刷的固件所在目录中，假设固件名叫`openwrt.img`，如果在*Windows*下则使用命令：\n\n\t\ttftp -i 192.168.1.1 PUT \"openwrt.img\"\n  \n  如果在*OS X*或*Linux*下则在终端里键入`tftp`，之后使用以下命令：\n  \n\t\tconnect 192.168.1.1\n\t\tbinary\n\t\trexmt 1\n\t\ttimeout 60\n\t\tput \"openwrt.img\"\n  \n  稍等片刻，路由器的灯会出现各种变化，直到电源灯又恢复长绿状态（不同路由器或许不同），说明上传完成了。\n\n+ 重启路由器，不出意外之后应该可以通过网页访问[192.168.1.1](192.168.1.1)的`LuCI`管理界面了。\n\n## 开启无线\n较新的OpenWrt应该已经自带`LuCI`图形化界面了，因此直接浏览器打开[192.168.1.1](192.168.1.1)就可以看到类似如下界面：\n\n![LuCI](/img/opfirst.png)\n\n当然咯，第一次登入肯定是要先设密码的，毕竟也算是一个Linux系统：\n\n![更改密码](/img/oppasswd.png)\n\nOpenWrt默认是关闭无线网络的，所以到`Network`-`Wifi`下面启用即可：\n\n![启用Wifi](/img/opwifi.png)\n\n之后设置SSID和密码就可以通过无线方式连接了。\n\n# 基本设置\n\n既然要装上软件，自然要从互联网获取，那么路由器当然要联网咯。先到`Network`-`Interfaces`设置WAN口的上网方式，这点和普通路由器没有什么差别，这里不再赘述。\n\n如果觉得英文LuCI使用不便，也可以到`System`-`Software`下找到一个叫`luci-i18n-base-zh-cn`的包装上就行了，当然首先要`Update lists`一下，之后到`System`-`System`下切换成`普通话`再刷新一下就变成中文界面了。\n\n![设置中文](/img/oplucicn.png)\n\n当然，以后要装的部分软件也可以通过上面这种方式安装，但由于有的包官方源里没有，我们在下面使用一种更通用的方法——从命令行安装。\n\nOpenWrt归根结底还是一个**Linux发行版**，所以Linux命令在这里依然适用。\n\n我们还是通过SSH登录：\n\n\tssh root@192.168.1.1\n\t\n输入之前设置的密码后，就会看到OpenWrt特有的终端界面：\n\n\tBusyBox v1.23.2 (2015-07-25 15:09:46 CEST) built-in shell (ash)\n\n\t  _______                     ________        __\n\t |       |.-----.-----.-----.|  |  |  |.----.|  |_\n\t |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|\n\t |_______||   __|_____|__|__||________||__|  |____|\n\t          |__| W I R E L E S S   F R E E D O M\n\t -----------------------------------------------------\n\t CHAOS CALMER (15.05, r46767)\n\t -----------------------------------------------------\n\t  * 1 1/2 oz Gin            Shake with a glassful\n\t  * 1/4 oz Triple Sec       of broken ice and pour\n\t  * 3/4 oz Lime Juice       unstrained into a goblet.\n\t  * 1 1/2 oz Orange Juice\n\t  * 1 tsp. Grenadine Syrup\n\t -----------------------------------------------------\n\troot@OpenWrt:~# \n\n先更新一下软件源（和LuCI中的软件包刷新列表是一样的）：\n\n\topkg update\n\topkg list-installed\n\topkg list\n\n然后就可以按照自己的需求安装要用的软件了。","slug":"openwrt","published":1,"updated":"2017-02-26T12:07:46.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0u0001o8mpr9v1a1wn3","content":"<p>暑假剁手了一台rMBP但没有以太网接口，为了省钱就需要一个无线路由器，之前曾了解到路由器可以刷<strong>OpenWrt</strong>后装上<strong>ShadowSocks</strong>实现自动科学上网，于是就在集训的时候从马云家买了一个二手的<a href=\"http://www.tp-link.com.cn/product_225.html\" target=\"_blank\" rel=\"external\">TP-Link TL-WR703N</a>刷上OpenWrt在机房给笔记本供网。</p>\n<p><img src=\"/img/op703n.png\" alt=\"TL-WR703N\"></p>\n<p>由于这货只有一个网口，当路由器自动获取IP地址后，就进不去<a href=\"http://192.168.1.1/\" target=\"_blank\" rel=\"external\">192.168.1.1</a>的管理界面了，虽然能上网，但每次换网线接头的时候都要捅菊花抹掉原来的设置。因此只有使用静态IP时才能正常使用这种路由器。这学期开学后发现家里有一个<a href=\"http://www.netgear.com/home/products/networking/wifi-routers/wnr2200.aspx\" target=\"_blank\" rel=\"external\">Netgear WNR2200</a>在吃灰，于是就把它拿到学校刷上了OpenWrt放宿舍给各种无线设备供网。</p>\n<p><img src=\"/img/op2200.png\" alt=\"WNR2200\"></p>\n<h1 id=\"刷入固件\"><a href=\"#刷入固件\" class=\"headerlink\" title=\"刷入固件\"></a>刷入固件</h1><p><strong>OpenWrt</strong>是一个适合于嵌入式设备的Linux发行版。它提供了一个可添加软件包的可写的文件系统，使用者可以自由的选择应用程序和配置，并且可以使用一些适合某方面的应用的软件包来定制设备。</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><h3 id=\"路由器\"><a href=\"#路由器\" class=\"headerlink\" title=\"路由器\"></a>路由器</h3><p>首先你要拥有一台可以刷入OpenWrt的路由器，至于OpenWrt支持那些设备，请到<a href=\"https://wiki.openwrt.org/toh/start\" target=\"_blank\" rel=\"external\">Supported Devices</a>页面查看。本文以WNR2200为例。</p>\n<h3 id=\"固件\"><a href=\"#固件\" class=\"headerlink\" title=\"固件\"></a>固件</h3><p>前往<a href=\"https://downloads.openwrt.org/latest/\" target=\"_blank\" rel=\"external\">Download</a>下载最新的对应设备的固件。注意固件列表里一半会有两种后缀：<code>squashfs-factory.img</code>和<code>squashfs-sysupgrade.img</code>，如果是从原厂固件刷到OpenWrt请用前者，如果是从OpenWrt升级请用后者。还有一种可能文件名以<code>NA</code>结尾<del>，可能是代表<code>North America</code></del>，基本上与不带<code>NA</code>的没什么区别。</p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>还需要一台有以太网接口的电脑和一根网线，电脑操作系统不限，但是<em>Windows</em>需要提前开启<code>TFTP</code>（因为这个功能系统默认是关闭的），具体操作就是进入<code>控制面板</code>-<code>程序</code>-<code>程序和功能</code>，</p>\n<p><img src=\"/img/optftp.png\" alt=\"开启TFTP\"></p>\n<p>打开<code>打开或关闭Windows功能</code>窗口，在里面把<code>TFTP</code>挑上钩，之后就可以开始了。</p>\n<h2 id=\"刷入固件-1\"><a href=\"#刷入固件-1\" class=\"headerlink\" title=\"刷入固件\"></a>刷入固件</h2><p><strong>刷机有风险，操作需谨慎！</strong><br><strong>刷机有风险，操作需谨慎！</strong><br><strong>刷机有风险，操作需谨慎！</strong><br><del>重要的事说三遍</del></p>\n<p>首先要将路由器与电脑用网线相连（在后面的设置中网线是必要的），然后进入到路由器管理界面。</p>\n<p>有的原厂固件是可以直接升级成OpenWrt的，因此首先进入路由器管理界面，找到固件升级的选项，选择下好的OpenWrt固件上传就可以了，我之前刷TL-WR703N时是可以直接上传的，上传完成重启后就算是刷完了。但我后来刷WNR2200时遇到了不认固件的情况（可能是因为原厂固件的版本问题），于是只好用<strong>TFTP</strong>的方式上传固件，这就是之前为什么要打开Windows中<code>TFTP</code>功能的原因。</p>\n<p>如果从原厂管理界面中直接上传固件成功，请直接进入下一节；若不认固件，请执行以下步骤：</p>\n<ul>\n<li><p>关闭路由器电源，用笔尖捅住“Restore Factory Settings”<del>菊花</del>键不放。</p>\n</li>\n<li><p>打开路由器电源，这时电源黄灯开始闪烁，这时依然<strong>不要松开</strong>RESET键，直到电源灯变为绿色长亮（或闪烁？）才可松手（可能有的路由器的表现不一样，达到类似效果即可），这时路由器已经进入了tftp模式。</p>\n</li>\n<li><p>将电脑的IP设为<code>192.168.1.2</code>，子网掩码设为<code>255.255.255.0</code>，将电脑与路由器的<strong>1号LAN口</strong>用网线相连。</p>\n</li>\n<li><p>从终端进入到要刷的固件所在目录中，假设固件名叫<code>openwrt.img</code>，如果在<em>Windows</em>下则使用命令：</p>\n<pre><code>tftp -i 192.168.1.1 PUT &quot;openwrt.img&quot;\n</code></pre><p>如果在<em>OS X</em>或<em>Linux</em>下则在终端里键入<code>tftp</code>，之后使用以下命令：</p>\n<pre><code>connect 192.168.1.1\nbinary\nrexmt 1\ntimeout 60\nput &quot;openwrt.img&quot;\n</code></pre><p>稍等片刻，路由器的灯会出现各种变化，直到电源灯又恢复长绿状态（不同路由器或许不同），说明上传完成了。</p>\n</li>\n<li><p>重启路由器，不出意外之后应该可以通过网页访问<a href=\"192.168.1.1\">192.168.1.1</a>的<code>LuCI</code>管理界面了。</p>\n</li>\n</ul>\n<h2 id=\"开启无线\"><a href=\"#开启无线\" class=\"headerlink\" title=\"开启无线\"></a>开启无线</h2><p>较新的OpenWrt应该已经自带<code>LuCI</code>图形化界面了，因此直接浏览器打开<a href=\"192.168.1.1\">192.168.1.1</a>就可以看到类似如下界面：</p>\n<p><img src=\"/img/opfirst.png\" alt=\"LuCI\"></p>\n<p>当然咯，第一次登入肯定是要先设密码的，毕竟也算是一个Linux系统：</p>\n<p><img src=\"/img/oppasswd.png\" alt=\"更改密码\"></p>\n<p>OpenWrt默认是关闭无线网络的，所以到<code>Network</code>-<code>Wifi</code>下面启用即可：</p>\n<p><img src=\"/img/opwifi.png\" alt=\"启用Wifi\"></p>\n<p>之后设置SSID和密码就可以通过无线方式连接了。</p>\n<h1 id=\"基本设置\"><a href=\"#基本设置\" class=\"headerlink\" title=\"基本设置\"></a>基本设置</h1><p>既然要装上软件，自然要从互联网获取，那么路由器当然要联网咯。先到<code>Network</code>-<code>Interfaces</code>设置WAN口的上网方式，这点和普通路由器没有什么差别，这里不再赘述。</p>\n<p>如果觉得英文LuCI使用不便，也可以到<code>System</code>-<code>Software</code>下找到一个叫<code>luci-i18n-base-zh-cn</code>的包装上就行了，当然首先要<code>Update lists</code>一下，之后到<code>System</code>-<code>System</code>下切换成<code>普通话</code>再刷新一下就变成中文界面了。</p>\n<p><img src=\"/img/oplucicn.png\" alt=\"设置中文\"></p>\n<p>当然，以后要装的部分软件也可以通过上面这种方式安装，但由于有的包官方源里没有，我们在下面使用一种更通用的方法——从命令行安装。</p>\n<p>OpenWrt归根结底还是一个<strong>Linux发行版</strong>，所以Linux命令在这里依然适用。</p>\n<p>我们还是通过SSH登录：</p>\n<pre><code>ssh root@192.168.1.1\n</code></pre><p>输入之前设置的密码后，就会看到OpenWrt特有的终端界面：</p>\n<pre><code>BusyBox v1.23.2 (2015-07-25 15:09:46 CEST) built-in shell (ash)\n\n  _______                     ________        __\n |       |.-----.-----.-----.|  |  |  |.----.|  |_\n |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|\n |_______||   __|_____|__|__||________||__|  |____|\n          |__| W I R E L E S S   F R E E D O M\n -----------------------------------------------------\n CHAOS CALMER (15.05, r46767)\n -----------------------------------------------------\n  * 1 1/2 oz Gin            Shake with a glassful\n  * 1/4 oz Triple Sec       of broken ice and pour\n  * 3/4 oz Lime Juice       unstrained into a goblet.\n  * 1 1/2 oz Orange Juice\n  * 1 tsp. Grenadine Syrup\n -----------------------------------------------------\nroot@OpenWrt:~# \n</code></pre><p>先更新一下软件源（和LuCI中的软件包刷新列表是一样的）：</p>\n<pre><code>opkg update\nopkg list-installed\nopkg list\n</code></pre><p>然后就可以按照自己的需求安装要用的软件了。</p>\n","excerpt":"","more":"<p>暑假剁手了一台rMBP但没有以太网接口，为了省钱就需要一个无线路由器，之前曾了解到路由器可以刷<strong>OpenWrt</strong>后装上<strong>ShadowSocks</strong>实现自动科学上网，于是就在集训的时候从马云家买了一个二手的<a href=\"http://www.tp-link.com.cn/product_225.html\">TP-Link TL-WR703N</a>刷上OpenWrt在机房给笔记本供网。</p>\n<p><img src=\"/img/op703n.png\" alt=\"TL-WR703N\"></p>\n<p>由于这货只有一个网口，当路由器自动获取IP地址后，就进不去<a href=\"http://192.168.1.1/\">192.168.1.1</a>的管理界面了，虽然能上网，但每次换网线接头的时候都要捅菊花抹掉原来的设置。因此只有使用静态IP时才能正常使用这种路由器。这学期开学后发现家里有一个<a href=\"http://www.netgear.com/home/products/networking/wifi-routers/wnr2200.aspx\">Netgear WNR2200</a>在吃灰，于是就把它拿到学校刷上了OpenWrt放宿舍给各种无线设备供网。</p>\n<p><img src=\"/img/op2200.png\" alt=\"WNR2200\"></p>\n<h1 id=\"刷入固件\"><a href=\"#刷入固件\" class=\"headerlink\" title=\"刷入固件\"></a>刷入固件</h1><p><strong>OpenWrt</strong>是一个适合于嵌入式设备的Linux发行版。它提供了一个可添加软件包的可写的文件系统，使用者可以自由的选择应用程序和配置，并且可以使用一些适合某方面的应用的软件包来定制设备。</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><h3 id=\"路由器\"><a href=\"#路由器\" class=\"headerlink\" title=\"路由器\"></a>路由器</h3><p>首先你要拥有一台可以刷入OpenWrt的路由器，至于OpenWrt支持那些设备，请到<a href=\"https://wiki.openwrt.org/toh/start\">Supported Devices</a>页面查看。本文以WNR2200为例。</p>\n<h3 id=\"固件\"><a href=\"#固件\" class=\"headerlink\" title=\"固件\"></a>固件</h3><p>前往<a href=\"https://downloads.openwrt.org/latest/\">Download</a>下载最新的对应设备的固件。注意固件列表里一半会有两种后缀：<code>squashfs-factory.img</code>和<code>squashfs-sysupgrade.img</code>，如果是从原厂固件刷到OpenWrt请用前者，如果是从OpenWrt升级请用后者。还有一种可能文件名以<code>NA</code>结尾<del>，可能是代表<code>North America</code></del>，基本上与不带<code>NA</code>的没什么区别。</p>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>还需要一台有以太网接口的电脑和一根网线，电脑操作系统不限，但是<em>Windows</em>需要提前开启<code>TFTP</code>（因为这个功能系统默认是关闭的），具体操作就是进入<code>控制面板</code>-<code>程序</code>-<code>程序和功能</code>，</p>\n<p><img src=\"/img/optftp.png\" alt=\"开启TFTP\"></p>\n<p>打开<code>打开或关闭Windows功能</code>窗口，在里面把<code>TFTP</code>挑上钩，之后就可以开始了。</p>\n<h2 id=\"刷入固件-1\"><a href=\"#刷入固件-1\" class=\"headerlink\" title=\"刷入固件\"></a>刷入固件</h2><p><strong>刷机有风险，操作需谨慎！</strong><br><strong>刷机有风险，操作需谨慎！</strong><br><strong>刷机有风险，操作需谨慎！</strong><br><del>重要的事说三遍</del></p>\n<p>首先要将路由器与电脑用网线相连（在后面的设置中网线是必要的），然后进入到路由器管理界面。</p>\n<p>有的原厂固件是可以直接升级成OpenWrt的，因此首先进入路由器管理界面，找到固件升级的选项，选择下好的OpenWrt固件上传就可以了，我之前刷TL-WR703N时是可以直接上传的，上传完成重启后就算是刷完了。但我后来刷WNR2200时遇到了不认固件的情况（可能是因为原厂固件的版本问题），于是只好用<strong>TFTP</strong>的方式上传固件，这就是之前为什么要打开Windows中<code>TFTP</code>功能的原因。</p>\n<p>如果从原厂管理界面中直接上传固件成功，请直接进入下一节；若不认固件，请执行以下步骤：</p>\n<ul>\n<li><p>关闭路由器电源，用笔尖捅住“Restore Factory Settings”<del>菊花</del>键不放。</p>\n</li>\n<li><p>打开路由器电源，这时电源黄灯开始闪烁，这时依然<strong>不要松开</strong>RESET键，直到电源灯变为绿色长亮（或闪烁？）才可松手（可能有的路由器的表现不一样，达到类似效果即可），这时路由器已经进入了tftp模式。</p>\n</li>\n<li><p>将电脑的IP设为<code>192.168.1.2</code>，子网掩码设为<code>255.255.255.0</code>，将电脑与路由器的<strong>1号LAN口</strong>用网线相连。</p>\n</li>\n<li><p>从终端进入到要刷的固件所在目录中，假设固件名叫<code>openwrt.img</code>，如果在<em>Windows</em>下则使用命令：</p>\n<pre><code>tftp -i 192.168.1.1 PUT &quot;openwrt.img&quot;\n</code></pre><p>如果在<em>OS X</em>或<em>Linux</em>下则在终端里键入<code>tftp</code>，之后使用以下命令：</p>\n<pre><code>connect 192.168.1.1\nbinary\nrexmt 1\ntimeout 60\nput &quot;openwrt.img&quot;\n</code></pre><p>稍等片刻，路由器的灯会出现各种变化，直到电源灯又恢复长绿状态（不同路由器或许不同），说明上传完成了。</p>\n</li>\n<li><p>重启路由器，不出意外之后应该可以通过网页访问<a href=\"192.168.1.1\">192.168.1.1</a>的<code>LuCI</code>管理界面了。</p>\n</li>\n</ul>\n<h2 id=\"开启无线\"><a href=\"#开启无线\" class=\"headerlink\" title=\"开启无线\"></a>开启无线</h2><p>较新的OpenWrt应该已经自带<code>LuCI</code>图形化界面了，因此直接浏览器打开<a href=\"192.168.1.1\">192.168.1.1</a>就可以看到类似如下界面：</p>\n<p><img src=\"/img/opfirst.png\" alt=\"LuCI\"></p>\n<p>当然咯，第一次登入肯定是要先设密码的，毕竟也算是一个Linux系统：</p>\n<p><img src=\"/img/oppasswd.png\" alt=\"更改密码\"></p>\n<p>OpenWrt默认是关闭无线网络的，所以到<code>Network</code>-<code>Wifi</code>下面启用即可：</p>\n<p><img src=\"/img/opwifi.png\" alt=\"启用Wifi\"></p>\n<p>之后设置SSID和密码就可以通过无线方式连接了。</p>\n<h1 id=\"基本设置\"><a href=\"#基本设置\" class=\"headerlink\" title=\"基本设置\"></a>基本设置</h1><p>既然要装上软件，自然要从互联网获取，那么路由器当然要联网咯。先到<code>Network</code>-<code>Interfaces</code>设置WAN口的上网方式，这点和普通路由器没有什么差别，这里不再赘述。</p>\n<p>如果觉得英文LuCI使用不便，也可以到<code>System</code>-<code>Software</code>下找到一个叫<code>luci-i18n-base-zh-cn</code>的包装上就行了，当然首先要<code>Update lists</code>一下，之后到<code>System</code>-<code>System</code>下切换成<code>普通话</code>再刷新一下就变成中文界面了。</p>\n<p><img src=\"/img/oplucicn.png\" alt=\"设置中文\"></p>\n<p>当然，以后要装的部分软件也可以通过上面这种方式安装，但由于有的包官方源里没有，我们在下面使用一种更通用的方法——从命令行安装。</p>\n<p>OpenWrt归根结底还是一个<strong>Linux发行版</strong>，所以Linux命令在这里依然适用。</p>\n<p>我们还是通过SSH登录：</p>\n<pre><code>ssh root@192.168.1.1\n</code></pre><p>输入之前设置的密码后，就会看到OpenWrt特有的终端界面：</p>\n<pre><code>BusyBox v1.23.2 (2015-07-25 15:09:46 CEST) built-in shell (ash)\n\n  _______                     ________        __\n |       |.-----.-----.-----.|  |  |  |.----.|  |_\n |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|\n |_______||   __|_____|__|__||________||__|  |____|\n          |__| W I R E L E S S   F R E E D O M\n -----------------------------------------------------\n CHAOS CALMER (15.05, r46767)\n -----------------------------------------------------\n  * 1 1/2 oz Gin            Shake with a glassful\n  * 1/4 oz Triple Sec       of broken ice and pour\n  * 3/4 oz Lime Juice       unstrained into a goblet.\n  * 1 1/2 oz Orange Juice\n  * 1 tsp. Grenadine Syrup\n -----------------------------------------------------\nroot@OpenWrt:~# \n</code></pre><p>先更新一下软件源（和LuCI中的软件包刷新列表是一样的）：</p>\n<pre><code>opkg update\nopkg list-installed\nopkg list\n</code></pre><p>然后就可以按照自己的需求安装要用的软件了。</p>\n"},{"title":"VPS搭建ShadowSocks服务","date":"2015-11-11T15:33:33.000Z","photos":["/img/ssbanner.png"],"_content":"由于校园网的资费坑得一逼，况且有流量限制，这种感觉甚是让人不爽。之前曾看到郑老湿和陈老湿在VPS搭上VPN免流量上网，后来又在开源课上受到[杜老师](http://www.pufengdu.org/)的启发，决定通过ShadowSocks代理后的IPv6教育网实现**免流量上网**。\n\nShadowSocks是一个安全的socks5代理，它通过客户端以指定的密码、加密方式和端口连接服务器，成功连接到服务器后，客户端在用户的电脑上构建一个本地socks5代理。使用时将流量分到本地socks5代理，客户端将自动加密并转发流量到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。\n\n# 服务器端\n## 搭建服务\nSSH登录到VPS服务器后要使用pip安装ShadowSocks，所以先装`pip`。\n\n如果服务器是基于Red Hat的系统（CentOS等等），使用命令：\n\n\tyum install python-setuptools && easy_install pip\n\t\n如果是基于Debian的系统（Ubuntu等等），使用命令：\n\n\tapt-get install python-pip\n\n之后通过pip安装ShadowSocks：\n\t\n\tpip install shadowsocks\n\n安装完成后，在`/etc/`下新建一个叫`shadowsocks.json`的配置文件，内容如下：\n\n```json\n{\n\t\"server\" : \"::\",\n\t\"server_port\" : 8388,\n\t\"local_address\" : \"127.0.0.1\",\n\t\"local_port\" : 1080,\n\t\"password\" : \"PASSWORD\",\n\t\"timeout\" : 300,\n\t\"method\" : \"rc4-md5\"\n}\n```\n其中`\"server\"`一栏之所以填`\"::\"`是为了同时监听IPv4/v6两个端口，因为本文的需求中我们需要双栈连接，如果VPS没有IPv6功能或仅是为了搭梯子用，这里面填写一个IPv4的地址就可以了。`\"password\"`栏填写自己要设置的密码。至于`\"method\"`加密方式一栏，主流的有`rc4-md5`和`aes-256-cfb`等等，据说前者速度快，后者更安全，可以根据个人喜好自行权衡。\n\n如果有多个用户需要使用而不想都使用一套端口和密码，可以如下写成多端口配置文件：\n\n```json\n{\n\t\"server\" : \"::\",\n\t\"local_address\" : \"127.0.0.1\",\n\t\"local_port\" : 1080,\n\t\"port_password\":\n\t{\n\t\t\"8388\":\"PASSWORD0\",\n\t\t\"8389\":\"PASSWORD1\",\n\t\t\"8340\":\"PASSWORD2\"\n\t},\n   \t\"timeout\" : 300,\n\t\"method\" : \"rc4-md5\"\n}\n```\n## 启动服务\n保存配置文件后就可以通过以下命令启动和停止ShadowSocks服务了：\n\n\tssserver -c /etc/shadowsocks.json --fast-open -d start\n\tssserver -d stop\n\t\n如果发现开启服务后连接不上，可以**停用防火墙**试一下。\n\t\n要是觉得以上命令太长难于记忆，可以在`~/.bashrc`里加入alias：\n\n```bash\nalias ssstart='ssserver -c /etc/shadowsocks.json --fast-open -d start'\nalias ssstop='ssserver -d stop'\n```\n\n保存后记得使用`source ~/.bashrc`命令应用配置，这样就可以每次通过`ssstart`和`ssstop`命令启动或停止服务了。\n\n在CentOS7以后可以用**systemd**的方式启动Shadowsocks，先新建启动脚本`/etc/systemd/system/shadowsocks.service`：\n\n```ini\n[Unit]\nDescription=Shadowsocks\n\n[Service]\nTimeoutStartSec=0\nExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json\nExecStop=/usr/bin/ssserver -d stop\n\n[Install]\nWantedBy=multi-user.target\n```\n\n然后就可以通过`systemctl start shadowsocks`启动了，并通过`systemctl enable shadowsocks`设置开机自启。\n\n# 性能优化\n现在我们要祭出TCP加速神器——**锐速**了。\n\n~~锐速是一款免费的TCP底层加速软件~~，可以便捷地完成服务器网络的优化，配合ShadowSocks效果甚好。\n\n首先要去[锐速官网](http://www.serverspeeder.com/)注册。然后在服务器上通过以下命令下载安装：\n\n\twget http://my.serverspeeder.com/d/ls/serverSpeederInstaller.tar.gz\n\ttar xzvf serverSpeederInstaller.tar.gz\n\tbash serverSpeederInstaller.sh\n\t\n安装过程中需要填写刚注册的账号密码等，一路回车安装结束。\n\n之后还要编辑配置文件`/serverspeeder/etc/config`，修改以下参数:\n\n```ini\nadvinacc=\"1\"\nmaxmode=\"1\"\nrsc=\"1\"\ngso=\"1\"\n```\n\n保存后重启服务就可以了：\n\n\tservice serverSpeeder restart\n\t\n目前锐速不再开放使用，想用的同学可以到[91云](https://www.91yun.org/en/serverspeeder91yun)寻找新大陆。\n\n# 本地客户端\n首先确定你可以获取到IPv6地址，最简便的方法就是打开[六维空间](http://bt.neu.edu.cn/)测试一下，如果可以打开就说明没问题。\n\n## Windows\n> [Shadowsocks for Windows](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\n## macOS\n> [ShadowsocksX](https://github.com/shadowsocks/shadowsocks-iOS/releases)\n\n## Linux\n> [Shadowsocks-Qt5](https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97#linux)\n\n> 也可以按照类似服务端的命令行方式进行启动，将`ssserver`改成`sslocal`即可。\n\n## Android\n> [Shadowsocks for Android](https://github.com/shadowsocks/shadowsocks-android/releases)\n\n> 如果能上Google Play也可以从[应用商店](https://play.google.com/store/apps/details?id=com.github.shadowsocks)直接安装。\n\n## OpenWrt\n> [shadowsocks-libev](https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/)\n\n各种平台上的服务器配置按照之前服务器端的设置填写即可，但是server地址记得**填写IPv6的**，然后设成全局代理。\n\n这时Google一下自己的[IP](https://www.google.com/#newwindow=1&safe=active&q=ip)，如果地址确实是VPS的地址，就可以开始愉快的上网了。\n","source":"_posts/shadowsocks.md","raw":"title: VPS搭建ShadowSocks服务\ndate: 2015-11-11 23:33:33\ntags: [ShadowSocks, VPS, 科学上网, 服务器, 代理, Linux]\ncategories: [网络, 科学上网]\nphotos:\n\t- /img/ssbanner.png\n---\n由于校园网的资费坑得一逼，况且有流量限制，这种感觉甚是让人不爽。之前曾看到郑老湿和陈老湿在VPS搭上VPN免流量上网，后来又在开源课上受到[杜老师](http://www.pufengdu.org/)的启发，决定通过ShadowSocks代理后的IPv6教育网实现**免流量上网**。\n\nShadowSocks是一个安全的socks5代理，它通过客户端以指定的密码、加密方式和端口连接服务器，成功连接到服务器后，客户端在用户的电脑上构建一个本地socks5代理。使用时将流量分到本地socks5代理，客户端将自动加密并转发流量到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。\n\n# 服务器端\n## 搭建服务\nSSH登录到VPS服务器后要使用pip安装ShadowSocks，所以先装`pip`。\n\n如果服务器是基于Red Hat的系统（CentOS等等），使用命令：\n\n\tyum install python-setuptools && easy_install pip\n\t\n如果是基于Debian的系统（Ubuntu等等），使用命令：\n\n\tapt-get install python-pip\n\n之后通过pip安装ShadowSocks：\n\t\n\tpip install shadowsocks\n\n安装完成后，在`/etc/`下新建一个叫`shadowsocks.json`的配置文件，内容如下：\n\n```json\n{\n\t\"server\" : \"::\",\n\t\"server_port\" : 8388,\n\t\"local_address\" : \"127.0.0.1\",\n\t\"local_port\" : 1080,\n\t\"password\" : \"PASSWORD\",\n\t\"timeout\" : 300,\n\t\"method\" : \"rc4-md5\"\n}\n```\n其中`\"server\"`一栏之所以填`\"::\"`是为了同时监听IPv4/v6两个端口，因为本文的需求中我们需要双栈连接，如果VPS没有IPv6功能或仅是为了搭梯子用，这里面填写一个IPv4的地址就可以了。`\"password\"`栏填写自己要设置的密码。至于`\"method\"`加密方式一栏，主流的有`rc4-md5`和`aes-256-cfb`等等，据说前者速度快，后者更安全，可以根据个人喜好自行权衡。\n\n如果有多个用户需要使用而不想都使用一套端口和密码，可以如下写成多端口配置文件：\n\n```json\n{\n\t\"server\" : \"::\",\n\t\"local_address\" : \"127.0.0.1\",\n\t\"local_port\" : 1080,\n\t\"port_password\":\n\t{\n\t\t\"8388\":\"PASSWORD0\",\n\t\t\"8389\":\"PASSWORD1\",\n\t\t\"8340\":\"PASSWORD2\"\n\t},\n   \t\"timeout\" : 300,\n\t\"method\" : \"rc4-md5\"\n}\n```\n## 启动服务\n保存配置文件后就可以通过以下命令启动和停止ShadowSocks服务了：\n\n\tssserver -c /etc/shadowsocks.json --fast-open -d start\n\tssserver -d stop\n\t\n如果发现开启服务后连接不上，可以**停用防火墙**试一下。\n\t\n要是觉得以上命令太长难于记忆，可以在`~/.bashrc`里加入alias：\n\n```bash\nalias ssstart='ssserver -c /etc/shadowsocks.json --fast-open -d start'\nalias ssstop='ssserver -d stop'\n```\n\n保存后记得使用`source ~/.bashrc`命令应用配置，这样就可以每次通过`ssstart`和`ssstop`命令启动或停止服务了。\n\n在CentOS7以后可以用**systemd**的方式启动Shadowsocks，先新建启动脚本`/etc/systemd/system/shadowsocks.service`：\n\n```ini\n[Unit]\nDescription=Shadowsocks\n\n[Service]\nTimeoutStartSec=0\nExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json\nExecStop=/usr/bin/ssserver -d stop\n\n[Install]\nWantedBy=multi-user.target\n```\n\n然后就可以通过`systemctl start shadowsocks`启动了，并通过`systemctl enable shadowsocks`设置开机自启。\n\n# 性能优化\n现在我们要祭出TCP加速神器——**锐速**了。\n\n~~锐速是一款免费的TCP底层加速软件~~，可以便捷地完成服务器网络的优化，配合ShadowSocks效果甚好。\n\n首先要去[锐速官网](http://www.serverspeeder.com/)注册。然后在服务器上通过以下命令下载安装：\n\n\twget http://my.serverspeeder.com/d/ls/serverSpeederInstaller.tar.gz\n\ttar xzvf serverSpeederInstaller.tar.gz\n\tbash serverSpeederInstaller.sh\n\t\n安装过程中需要填写刚注册的账号密码等，一路回车安装结束。\n\n之后还要编辑配置文件`/serverspeeder/etc/config`，修改以下参数:\n\n```ini\nadvinacc=\"1\"\nmaxmode=\"1\"\nrsc=\"1\"\ngso=\"1\"\n```\n\n保存后重启服务就可以了：\n\n\tservice serverSpeeder restart\n\t\n目前锐速不再开放使用，想用的同学可以到[91云](https://www.91yun.org/en/serverspeeder91yun)寻找新大陆。\n\n# 本地客户端\n首先确定你可以获取到IPv6地址，最简便的方法就是打开[六维空间](http://bt.neu.edu.cn/)测试一下，如果可以打开就说明没问题。\n\n## Windows\n> [Shadowsocks for Windows](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\n## macOS\n> [ShadowsocksX](https://github.com/shadowsocks/shadowsocks-iOS/releases)\n\n## Linux\n> [Shadowsocks-Qt5](https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97#linux)\n\n> 也可以按照类似服务端的命令行方式进行启动，将`ssserver`改成`sslocal`即可。\n\n## Android\n> [Shadowsocks for Android](https://github.com/shadowsocks/shadowsocks-android/releases)\n\n> 如果能上Google Play也可以从[应用商店](https://play.google.com/store/apps/details?id=com.github.shadowsocks)直接安装。\n\n## OpenWrt\n> [shadowsocks-libev](https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/)\n\n各种平台上的服务器配置按照之前服务器端的设置填写即可，但是server地址记得**填写IPv6的**，然后设成全局代理。\n\n这时Google一下自己的[IP](https://www.google.com/#newwindow=1&safe=active&q=ip)，如果地址确实是VPS的地址，就可以开始愉快的上网了。\n","slug":"shadowsocks","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0u1001s8mpr9qhtdz9x","content":"<p>由于校园网的资费坑得一逼，况且有流量限制，这种感觉甚是让人不爽。之前曾看到郑老湿和陈老湿在VPS搭上VPN免流量上网，后来又在开源课上受到<a href=\"http://www.pufengdu.org/\" target=\"_blank\" rel=\"external\">杜老师</a>的启发，决定通过ShadowSocks代理后的IPv6教育网实现<strong>免流量上网</strong>。</p>\n<p>ShadowSocks是一个安全的socks5代理，它通过客户端以指定的密码、加密方式和端口连接服务器，成功连接到服务器后，客户端在用户的电脑上构建一个本地socks5代理。使用时将流量分到本地socks5代理，客户端将自动加密并转发流量到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。</p>\n<h1 id=\"服务器端\"><a href=\"#服务器端\" class=\"headerlink\" title=\"服务器端\"></a>服务器端</h1><h2 id=\"搭建服务\"><a href=\"#搭建服务\" class=\"headerlink\" title=\"搭建服务\"></a>搭建服务</h2><p>SSH登录到VPS服务器后要使用pip安装ShadowSocks，所以先装<code>pip</code>。</p>\n<p>如果服务器是基于Red Hat的系统（CentOS等等），使用命令：</p>\n<pre><code>yum install python-setuptools &amp;&amp; easy_install pip\n</code></pre><p>如果是基于Debian的系统（Ubuntu等等），使用命令：</p>\n<pre><code>apt-get install python-pip\n</code></pre><p>之后通过pip安装ShadowSocks：</p>\n<pre><code>pip install shadowsocks\n</code></pre><p>安装完成后，在<code>/etc/</code>下新建一个叫<code>shadowsocks.json</code>的配置文件，内容如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"server\"</span> : <span class=\"string\">\"::\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"server_port\"</span> : <span class=\"number\">8388</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_address\"</span> : <span class=\"string\">\"127.0.0.1\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_port\"</span> : <span class=\"number\">1080</span>,</div><div class=\"line\">\t<span class=\"attr\">\"password\"</span> : <span class=\"string\">\"PASSWORD\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"timeout\"</span> : <span class=\"number\">300</span>,</div><div class=\"line\">\t<span class=\"attr\">\"method\"</span> : <span class=\"string\">\"rc4-md5\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其中<code>&quot;server&quot;</code>一栏之所以填<code>&quot;::&quot;</code>是为了同时监听IPv4/v6两个端口，因为本文的需求中我们需要双栈连接，如果VPS没有IPv6功能或仅是为了搭梯子用，这里面填写一个IPv4的地址就可以了。<code>&quot;password&quot;</code>栏填写自己要设置的密码。至于<code>&quot;method&quot;</code>加密方式一栏，主流的有<code>rc4-md5</code>和<code>aes-256-cfb</code>等等，据说前者速度快，后者更安全，可以根据个人喜好自行权衡。</p>\n<p>如果有多个用户需要使用而不想都使用一套端口和密码，可以如下写成多端口配置文件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"server\"</span> : <span class=\"string\">\"::\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_address\"</span> : <span class=\"string\">\"127.0.0.1\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_port\"</span> : <span class=\"number\">1080</span>,</div><div class=\"line\">\t<span class=\"attr\">\"port_password\"</span>:</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"attr\">\"8388\"</span>:<span class=\"string\">\"PASSWORD0\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"8389\"</span>:<span class=\"string\">\"PASSWORD1\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"8340\"</span>:<span class=\"string\">\"PASSWORD2\"</span></div><div class=\"line\">\t&#125;,</div><div class=\"line\">   \t<span class=\"attr\">\"timeout\"</span> : <span class=\"number\">300</span>,</div><div class=\"line\">\t<span class=\"attr\">\"method\"</span> : <span class=\"string\">\"rc4-md5\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><p>保存配置文件后就可以通过以下命令启动和停止ShadowSocks服务了：</p>\n<pre><code>ssserver -c /etc/shadowsocks.json --fast-open -d start\nssserver -d stop\n</code></pre><p>如果发现开启服务后连接不上，可以<strong>停用防火墙</strong>试一下。</p>\n<p>要是觉得以上命令太长难于记忆，可以在<code>~/.bashrc</code>里加入alias：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> ssstart=<span class=\"string\">'ssserver -c /etc/shadowsocks.json --fast-open -d start'</span></div><div class=\"line\"><span class=\"built_in\">alias</span> ssstop=<span class=\"string\">'ssserver -d stop'</span></div></pre></td></tr></table></figure>\n<p>保存后记得使用<code>source ~/.bashrc</code>命令应用配置，这样就可以每次通过<code>ssstart</code>和<code>ssstop</code>命令启动或停止服务了。</p>\n<p>在CentOS7以后可以用<strong>systemd</strong>的方式启动Shadowsocks，先新建启动脚本<code>/etc/systemd/system/shadowsocks.service</code>：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">[Unit]</span></div><div class=\"line\"><span class=\"attr\">Description</span>=Shadowsocks</div><div class=\"line\"><span class=\"section\"></span></div><div class=\"line\">[Service]</div><div class=\"line\"><span class=\"attr\">TimeoutStartSec</span>=<span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">ExecStart</span>=/usr/bin/ssserver -c /etc/shadowsocks.json</div><div class=\"line\"><span class=\"attr\">ExecStop</span>=/usr/bin/ssserver -d stop</div><div class=\"line\"><span class=\"section\"></span></div><div class=\"line\">[Install]</div><div class=\"line\"><span class=\"attr\">WantedBy</span>=multi-user.target</div></pre></td></tr></table></figure>\n<p>然后就可以通过<code>systemctl start shadowsocks</code>启动了，并通过<code>systemctl enable shadowsocks</code>设置开机自启。</p>\n<h1 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h1><p>现在我们要祭出TCP加速神器——<strong>锐速</strong>了。</p>\n<p><del>锐速是一款免费的TCP底层加速软件</del>，可以便捷地完成服务器网络的优化，配合ShadowSocks效果甚好。</p>\n<p>首先要去<a href=\"http://www.serverspeeder.com/\" target=\"_blank\" rel=\"external\">锐速官网</a>注册。然后在服务器上通过以下命令下载安装：</p>\n<pre><code>wget http://my.serverspeeder.com/d/ls/serverSpeederInstaller.tar.gz\ntar xzvf serverSpeederInstaller.tar.gz\nbash serverSpeederInstaller.sh\n</code></pre><p>安装过程中需要填写刚注册的账号密码等，一路回车安装结束。</p>\n<p>之后还要编辑配置文件<code>/serverspeeder/etc/config</code>，修改以下参数:</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">advinacc</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\"><span class=\"attr\">maxmode</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\"><span class=\"attr\">rsc</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\"><span class=\"attr\">gso</span>=<span class=\"string\">\"1\"</span></div></pre></td></tr></table></figure>\n<p>保存后重启服务就可以了：</p>\n<pre><code>service serverSpeeder restart\n</code></pre><p>目前锐速不再开放使用，想用的同学可以到<a href=\"https://www.91yun.org/en/serverspeeder91yun\" target=\"_blank\" rel=\"external\">91云</a>寻找新大陆。</p>\n<h1 id=\"本地客户端\"><a href=\"#本地客户端\" class=\"headerlink\" title=\"本地客户端\"></a>本地客户端</h1><p>首先确定你可以获取到IPv6地址，最简便的方法就是打开<a href=\"http://bt.neu.edu.cn/\" target=\"_blank\" rel=\"external\">六维空间</a>测试一下，如果可以打开就说明没问题。</p>\n<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><blockquote>\n<p><a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\" target=\"_blank\" rel=\"external\">Shadowsocks for Windows</a></p>\n</blockquote>\n<h2 id=\"macOS\"><a href=\"#macOS\" class=\"headerlink\" title=\"macOS\"></a>macOS</h2><blockquote>\n<p><a href=\"https://github.com/shadowsocks/shadowsocks-iOS/releases\" target=\"_blank\" rel=\"external\">ShadowsocksX</a></p>\n</blockquote>\n<h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><blockquote>\n<p><a href=\"https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97#linux\" target=\"_blank\" rel=\"external\">Shadowsocks-Qt5</a></p>\n<p>也可以按照类似服务端的命令行方式进行启动，将<code>ssserver</code>改成<code>sslocal</code>即可。</p>\n</blockquote>\n<h2 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h2><blockquote>\n<p><a href=\"https://github.com/shadowsocks/shadowsocks-android/releases\" target=\"_blank\" rel=\"external\">Shadowsocks for Android</a></p>\n<p>如果能上Google Play也可以从<a href=\"https://play.google.com/store/apps/details?id=com.github.shadowsocks\" target=\"_blank\" rel=\"external\">应用商店</a>直接安装。</p>\n</blockquote>\n<h2 id=\"OpenWrt\"><a href=\"#OpenWrt\" class=\"headerlink\" title=\"OpenWrt\"></a>OpenWrt</h2><blockquote>\n<p><a href=\"https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/\" target=\"_blank\" rel=\"external\">shadowsocks-libev</a></p>\n</blockquote>\n<p>各种平台上的服务器配置按照之前服务器端的设置填写即可，但是server地址记得<strong>填写IPv6的</strong>，然后设成全局代理。</p>\n<p>这时Google一下自己的<a href=\"https://www.google.com/#newwindow=1&amp;safe=active&amp;q=ip\" target=\"_blank\" rel=\"external\">IP</a>，如果地址确实是VPS的地址，就可以开始愉快的上网了。</p>\n","excerpt":"","more":"<p>由于校园网的资费坑得一逼，况且有流量限制，这种感觉甚是让人不爽。之前曾看到郑老湿和陈老湿在VPS搭上VPN免流量上网，后来又在开源课上受到<a href=\"http://www.pufengdu.org/\">杜老师</a>的启发，决定通过ShadowSocks代理后的IPv6教育网实现<strong>免流量上网</strong>。</p>\n<p>ShadowSocks是一个安全的socks5代理，它通过客户端以指定的密码、加密方式和端口连接服务器，成功连接到服务器后，客户端在用户的电脑上构建一个本地socks5代理。使用时将流量分到本地socks5代理，客户端将自动加密并转发流量到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。</p>\n<h1 id=\"服务器端\"><a href=\"#服务器端\" class=\"headerlink\" title=\"服务器端\"></a>服务器端</h1><h2 id=\"搭建服务\"><a href=\"#搭建服务\" class=\"headerlink\" title=\"搭建服务\"></a>搭建服务</h2><p>SSH登录到VPS服务器后要使用pip安装ShadowSocks，所以先装<code>pip</code>。</p>\n<p>如果服务器是基于Red Hat的系统（CentOS等等），使用命令：</p>\n<pre><code>yum install python-setuptools &amp;&amp; easy_install pip\n</code></pre><p>如果是基于Debian的系统（Ubuntu等等），使用命令：</p>\n<pre><code>apt-get install python-pip\n</code></pre><p>之后通过pip安装ShadowSocks：</p>\n<pre><code>pip install shadowsocks\n</code></pre><p>安装完成后，在<code>/etc/</code>下新建一个叫<code>shadowsocks.json</code>的配置文件，内容如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"server\"</span> : <span class=\"string\">\"::\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"server_port\"</span> : <span class=\"number\">8388</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_address\"</span> : <span class=\"string\">\"127.0.0.1\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_port\"</span> : <span class=\"number\">1080</span>,</div><div class=\"line\">\t<span class=\"attr\">\"password\"</span> : <span class=\"string\">\"PASSWORD\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"timeout\"</span> : <span class=\"number\">300</span>,</div><div class=\"line\">\t<span class=\"attr\">\"method\"</span> : <span class=\"string\">\"rc4-md5\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其中<code>&quot;server&quot;</code>一栏之所以填<code>&quot;::&quot;</code>是为了同时监听IPv4/v6两个端口，因为本文的需求中我们需要双栈连接，如果VPS没有IPv6功能或仅是为了搭梯子用，这里面填写一个IPv4的地址就可以了。<code>&quot;password&quot;</code>栏填写自己要设置的密码。至于<code>&quot;method&quot;</code>加密方式一栏，主流的有<code>rc4-md5</code>和<code>aes-256-cfb</code>等等，据说前者速度快，后者更安全，可以根据个人喜好自行权衡。</p>\n<p>如果有多个用户需要使用而不想都使用一套端口和密码，可以如下写成多端口配置文件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"server\"</span> : <span class=\"string\">\"::\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_address\"</span> : <span class=\"string\">\"127.0.0.1\"</span>,</div><div class=\"line\">\t<span class=\"attr\">\"local_port\"</span> : <span class=\"number\">1080</span>,</div><div class=\"line\">\t<span class=\"attr\">\"port_password\"</span>:</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"attr\">\"8388\"</span>:<span class=\"string\">\"PASSWORD0\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"8389\"</span>:<span class=\"string\">\"PASSWORD1\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"8340\"</span>:<span class=\"string\">\"PASSWORD2\"</span></div><div class=\"line\">\t&#125;,</div><div class=\"line\">   \t<span class=\"attr\">\"timeout\"</span> : <span class=\"number\">300</span>,</div><div class=\"line\">\t<span class=\"attr\">\"method\"</span> : <span class=\"string\">\"rc4-md5\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><p>保存配置文件后就可以通过以下命令启动和停止ShadowSocks服务了：</p>\n<pre><code>ssserver -c /etc/shadowsocks.json --fast-open -d start\nssserver -d stop\n</code></pre><p>如果发现开启服务后连接不上，可以<strong>停用防火墙</strong>试一下。</p>\n<p>要是觉得以上命令太长难于记忆，可以在<code>~/.bashrc</code>里加入alias：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> ssstart=<span class=\"string\">'ssserver -c /etc/shadowsocks.json --fast-open -d start'</span></div><div class=\"line\"><span class=\"built_in\">alias</span> ssstop=<span class=\"string\">'ssserver -d stop'</span></div></pre></td></tr></table></figure>\n<p>保存后记得使用<code>source ~/.bashrc</code>命令应用配置，这样就可以每次通过<code>ssstart</code>和<code>ssstop</code>命令启动或停止服务了。</p>\n<p>在CentOS7以后可以用<strong>systemd</strong>的方式启动Shadowsocks，先新建启动脚本<code>/etc/systemd/system/shadowsocks.service</code>：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">[Unit]</span></div><div class=\"line\"><span class=\"attr\">Description</span>=Shadowsocks</div><div class=\"line\"><span class=\"section\"></div><div class=\"line\">[Service]</span></div><div class=\"line\"><span class=\"attr\">TimeoutStartSec</span>=<span class=\"number\">0</span></div><div class=\"line\"><span class=\"attr\">ExecStart</span>=/usr/bin/ssserver -c /etc/shadowsocks.json</div><div class=\"line\"><span class=\"attr\">ExecStop</span>=/usr/bin/ssserver -d stop</div><div class=\"line\"><span class=\"section\"></div><div class=\"line\">[Install]</span></div><div class=\"line\"><span class=\"attr\">WantedBy</span>=multi-user.target</div></pre></td></tr></table></figure>\n<p>然后就可以通过<code>systemctl start shadowsocks</code>启动了，并通过<code>systemctl enable shadowsocks</code>设置开机自启。</p>\n<h1 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h1><p>现在我们要祭出TCP加速神器——<strong>锐速</strong>了。</p>\n<p><del>锐速是一款免费的TCP底层加速软件</del>，可以便捷地完成服务器网络的优化，配合ShadowSocks效果甚好。</p>\n<p>首先要去<a href=\"http://www.serverspeeder.com/\">锐速官网</a>注册。然后在服务器上通过以下命令下载安装：</p>\n<pre><code>wget http://my.serverspeeder.com/d/ls/serverSpeederInstaller.tar.gz\ntar xzvf serverSpeederInstaller.tar.gz\nbash serverSpeederInstaller.sh\n</code></pre><p>安装过程中需要填写刚注册的账号密码等，一路回车安装结束。</p>\n<p>之后还要编辑配置文件<code>/serverspeeder/etc/config</code>，修改以下参数:</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">advinacc</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\"><span class=\"attr\">maxmode</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\"><span class=\"attr\">rsc</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\"><span class=\"attr\">gso</span>=<span class=\"string\">\"1\"</span></div></pre></td></tr></table></figure>\n<p>保存后重启服务就可以了：</p>\n<pre><code>service serverSpeeder restart\n</code></pre><p>目前锐速不再开放使用，想用的同学可以到<a href=\"https://www.91yun.org/en/serverspeeder91yun\">91云</a>寻找新大陆。</p>\n<h1 id=\"本地客户端\"><a href=\"#本地客户端\" class=\"headerlink\" title=\"本地客户端\"></a>本地客户端</h1><p>首先确定你可以获取到IPv6地址，最简便的方法就是打开<a href=\"http://bt.neu.edu.cn/\">六维空间</a>测试一下，如果可以打开就说明没问题。</p>\n<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><blockquote>\n<p><a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\">Shadowsocks for Windows</a></p>\n</blockquote>\n<h2 id=\"macOS\"><a href=\"#macOS\" class=\"headerlink\" title=\"macOS\"></a>macOS</h2><blockquote>\n<p><a href=\"https://github.com/shadowsocks/shadowsocks-iOS/releases\">ShadowsocksX</a></p>\n</blockquote>\n<h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><blockquote>\n<p><a href=\"https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97#linux\">Shadowsocks-Qt5</a></p>\n<p>也可以按照类似服务端的命令行方式进行启动，将<code>ssserver</code>改成<code>sslocal</code>即可。</p>\n</blockquote>\n<h2 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h2><blockquote>\n<p><a href=\"https://github.com/shadowsocks/shadowsocks-android/releases\">Shadowsocks for Android</a></p>\n<p>如果能上Google Play也可以从<a href=\"https://play.google.com/store/apps/details?id=com.github.shadowsocks\">应用商店</a>直接安装。</p>\n</blockquote>\n<h2 id=\"OpenWrt\"><a href=\"#OpenWrt\" class=\"headerlink\" title=\"OpenWrt\"></a>OpenWrt</h2><blockquote>\n<p><a href=\"https://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/\">shadowsocks-libev</a></p>\n</blockquote>\n<p>各种平台上的服务器配置按照之前服务器端的设置填写即可，但是server地址记得<strong>填写IPv6的</strong>，然后设成全局代理。</p>\n<p>这时Google一下自己的<a href=\"https://www.google.com/#newwindow=1&amp;safe=active&amp;q=ip\">IP</a>，如果地址确实是VPS的地址，就可以开始愉快的上网了。</p>\n"},{"title":"shell脚本内的并发执行","date":"2016-10-10T14:22:22.000Z","photos":["/img/shbanner.png"],"_content":"之前有一个每周数据统计的工作，需要每周的某一天定时从多台服务器上拉取日志进行汇总生成报表。\n\n# 顺序执行\n最初的思路是先做一个循环，遍历每台机器并在上面执行相应的数据处理脚本，然后将处理好的数据拉取到汇总的机器上，这样逐台进行，最后进行汇总处理，写出来的脚本是类似这样的：\n\n```sh\narray=( \\\n\t\"10.144.1.1\" \\\n\t\"10.144.1.2\" \\\n\t\"10.144.1.3\" \\\n\t\"10.144.1.4\" \\\n)\n\nfor i in ${array[@]}\ndo  \n\tssh $i \"sh $log_dir/run.sh\"\n\tscp $i:$log_dir/log $work_dir/$i/\ndone\n\ncat $work_dir/*/log | sort | uniq > $work_dir/log\n```\n这样写的执行时间大约是**每台机器时间\\*台数+汇总时间**，虽然不算快，但是凌晨一般也能执行完成。\n\n# 并发执行\n后来到了国庆假期期间，服务流量骤增，再加上业务改版等一系列原因，导致数据量突然增大，执行时间翻了几倍，任务大概要到下午才能完成，这样一来就会耽误白天的工作。\n\n因为机器数量不少，分机器统计也是主要的时间消耗，因此想到既然几台机器各自的统计互不影响，可以让它们同时进行汇总工作。于是上网找了一下改进方法，改完了大致是这样的：\n\n```sh\narray=( \\\n\t\"10.144.1.1\" \\\n\t\"10.144.1.2\" \\\n\t\"10.144.1.3\" \\\n\t\"10.144.1.4\" \\\n)\n\nfor i in ${array[@]}\ndo {\n\tssh $i \"sh $log_dir/run.sh\"\n\tscp $i:$log_dir/log $work_dir/$i/\n}&\ndone\nwait\n\ncat $work_dir/*/log | sort | uniq > $work_dir/log\n```\n\n可以发现主要的改动就在for循环的内容用`{}`括起来并在末尾加个`&`，这样就可以实现多次循环一起执行了；另外在`done`后面加个`wait`是为了等待所有的循环都执行完成后再做后面的汇总工作，否则一旦有一个循环执行完成就会往下执行了。\n\n这样的执行时间大约是**每台机器时间+汇总时间**，可以看出比最初快了很多。","source":"_posts/shell-parallel.md","raw":"title: shell脚本内的并发执行\ndate: 2016-10-10 22:22:22\ntags: [shell, Linux]\ncategories: [手帐, 实习]\nphotos: \n\t- /img/shbanner.png\n---\n之前有一个每周数据统计的工作，需要每周的某一天定时从多台服务器上拉取日志进行汇总生成报表。\n\n# 顺序执行\n最初的思路是先做一个循环，遍历每台机器并在上面执行相应的数据处理脚本，然后将处理好的数据拉取到汇总的机器上，这样逐台进行，最后进行汇总处理，写出来的脚本是类似这样的：\n\n```sh\narray=( \\\n\t\"10.144.1.1\" \\\n\t\"10.144.1.2\" \\\n\t\"10.144.1.3\" \\\n\t\"10.144.1.4\" \\\n)\n\nfor i in ${array[@]}\ndo  \n\tssh $i \"sh $log_dir/run.sh\"\n\tscp $i:$log_dir/log $work_dir/$i/\ndone\n\ncat $work_dir/*/log | sort | uniq > $work_dir/log\n```\n这样写的执行时间大约是**每台机器时间\\*台数+汇总时间**，虽然不算快，但是凌晨一般也能执行完成。\n\n# 并发执行\n后来到了国庆假期期间，服务流量骤增，再加上业务改版等一系列原因，导致数据量突然增大，执行时间翻了几倍，任务大概要到下午才能完成，这样一来就会耽误白天的工作。\n\n因为机器数量不少，分机器统计也是主要的时间消耗，因此想到既然几台机器各自的统计互不影响，可以让它们同时进行汇总工作。于是上网找了一下改进方法，改完了大致是这样的：\n\n```sh\narray=( \\\n\t\"10.144.1.1\" \\\n\t\"10.144.1.2\" \\\n\t\"10.144.1.3\" \\\n\t\"10.144.1.4\" \\\n)\n\nfor i in ${array[@]}\ndo {\n\tssh $i \"sh $log_dir/run.sh\"\n\tscp $i:$log_dir/log $work_dir/$i/\n}&\ndone\nwait\n\ncat $work_dir/*/log | sort | uniq > $work_dir/log\n```\n\n可以发现主要的改动就在for循环的内容用`{}`括起来并在末尾加个`&`，这样就可以实现多次循环一起执行了；另外在`done`后面加个`wait`是为了等待所有的循环都执行完成后再做后面的汇总工作，否则一旦有一个循环执行完成就会往下执行了。\n\n这样的执行时间大约是**每台机器时间+汇总时间**，可以看出比最初快了很多。","slug":"shell-parallel","published":1,"updated":"2016-12-18T03:26:01.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0u4001w8mprj0xswx11","content":"<p>之前有一个每周数据统计的工作，需要每周的某一天定时从多台服务器上拉取日志进行汇总生成报表。</p>\n<h1 id=\"顺序执行\"><a href=\"#顺序执行\" class=\"headerlink\" title=\"顺序执行\"></a>顺序执行</h1><p>最初的思路是先做一个循环，遍历每台机器并在上面执行相应的数据处理脚本，然后将处理好的数据拉取到汇总的机器上，这样逐台进行，最后进行汇总处理，写出来的脚本是类似这样的：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">array=( \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.1\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.2\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.3\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.4\"</span> \\</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;array[@]&#125;</span></div><div class=\"line\"><span class=\"keyword\">do</span>  </div><div class=\"line\">\tssh <span class=\"variable\">$i</span> <span class=\"string\">\"sh <span class=\"variable\">$log_dir</span>/run.sh\"</span></div><div class=\"line\">\tscp <span class=\"variable\">$i</span>:<span class=\"variable\">$log_dir</span>/<span class=\"built_in\">log</span> <span class=\"variable\">$work_dir</span>/<span class=\"variable\">$i</span>/</div><div class=\"line\"><span class=\"keyword\">done</span></div><div class=\"line\"></div><div class=\"line\">cat <span class=\"variable\">$work_dir</span>/*/<span class=\"built_in\">log</span> | sort | uniq &gt; <span class=\"variable\">$work_dir</span>/<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<p>这样写的执行时间大约是<strong>每台机器时间*台数+汇总时间</strong>，虽然不算快，但是凌晨一般也能执行完成。</p>\n<h1 id=\"并发执行\"><a href=\"#并发执行\" class=\"headerlink\" title=\"并发执行\"></a>并发执行</h1><p>后来到了国庆假期期间，服务流量骤增，再加上业务改版等一系列原因，导致数据量突然增大，执行时间翻了几倍，任务大概要到下午才能完成，这样一来就会耽误白天的工作。</p>\n<p>因为机器数量不少，分机器统计也是主要的时间消耗，因此想到既然几台机器各自的统计互不影响，可以让它们同时进行汇总工作。于是上网找了一下改进方法，改完了大致是这样的：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">array=( \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.1\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.2\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.3\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.4\"</span> \\</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;array[@]&#125;</span></div><div class=\"line\"><span class=\"keyword\">do</span> &#123;</div><div class=\"line\">\tssh <span class=\"variable\">$i</span> <span class=\"string\">\"sh <span class=\"variable\">$log_dir</span>/run.sh\"</span></div><div class=\"line\">\tscp <span class=\"variable\">$i</span>:<span class=\"variable\">$log_dir</span>/<span class=\"built_in\">log</span> <span class=\"variable\">$work_dir</span>/<span class=\"variable\">$i</span>/</div><div class=\"line\">&#125;&amp;</div><div class=\"line\"><span class=\"keyword\">done</span></div><div class=\"line\"><span class=\"built_in\">wait</span></div><div class=\"line\"></div><div class=\"line\">cat <span class=\"variable\">$work_dir</span>/*/<span class=\"built_in\">log</span> | sort | uniq &gt; <span class=\"variable\">$work_dir</span>/<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<p>可以发现主要的改动就在for循环的内容用<code>{}</code>括起来并在末尾加个<code>&amp;</code>，这样就可以实现多次循环一起执行了；另外在<code>done</code>后面加个<code>wait</code>是为了等待所有的循环都执行完成后再做后面的汇总工作，否则一旦有一个循环执行完成就会往下执行了。</p>\n<p>这样的执行时间大约是<strong>每台机器时间+汇总时间</strong>，可以看出比最初快了很多。</p>\n","excerpt":"","more":"<p>之前有一个每周数据统计的工作，需要每周的某一天定时从多台服务器上拉取日志进行汇总生成报表。</p>\n<h1 id=\"顺序执行\"><a href=\"#顺序执行\" class=\"headerlink\" title=\"顺序执行\"></a>顺序执行</h1><p>最初的思路是先做一个循环，遍历每台机器并在上面执行相应的数据处理脚本，然后将处理好的数据拉取到汇总的机器上，这样逐台进行，最后进行汇总处理，写出来的脚本是类似这样的：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">array=( \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.1\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.2\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.3\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.4\"</span> \\</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;array[@]&#125;</span></div><div class=\"line\"><span class=\"keyword\">do</span>  </div><div class=\"line\">\tssh <span class=\"variable\">$i</span> <span class=\"string\">\"sh <span class=\"variable\">$log_dir</span>/run.sh\"</span></div><div class=\"line\">\tscp <span class=\"variable\">$i</span>:<span class=\"variable\">$log_dir</span>/<span class=\"built_in\">log</span> <span class=\"variable\">$work_dir</span>/<span class=\"variable\">$i</span>/</div><div class=\"line\"><span class=\"keyword\">done</span></div><div class=\"line\"></div><div class=\"line\">cat <span class=\"variable\">$work_dir</span>/*/<span class=\"built_in\">log</span> | sort | uniq &gt; <span class=\"variable\">$work_dir</span>/<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<p>这样写的执行时间大约是<strong>每台机器时间*台数+汇总时间</strong>，虽然不算快，但是凌晨一般也能执行完成。</p>\n<h1 id=\"并发执行\"><a href=\"#并发执行\" class=\"headerlink\" title=\"并发执行\"></a>并发执行</h1><p>后来到了国庆假期期间，服务流量骤增，再加上业务改版等一系列原因，导致数据量突然增大，执行时间翻了几倍，任务大概要到下午才能完成，这样一来就会耽误白天的工作。</p>\n<p>因为机器数量不少，分机器统计也是主要的时间消耗，因此想到既然几台机器各自的统计互不影响，可以让它们同时进行汇总工作。于是上网找了一下改进方法，改完了大致是这样的：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">array=( \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.1\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.2\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.3\"</span> \\</div><div class=\"line\">\t<span class=\"string\">\"10.144.1.4\"</span> \\</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;array[@]&#125;</span></div><div class=\"line\"><span class=\"keyword\">do</span> &#123;</div><div class=\"line\">\tssh <span class=\"variable\">$i</span> <span class=\"string\">\"sh <span class=\"variable\">$log_dir</span>/run.sh\"</span></div><div class=\"line\">\tscp <span class=\"variable\">$i</span>:<span class=\"variable\">$log_dir</span>/<span class=\"built_in\">log</span> <span class=\"variable\">$work_dir</span>/<span class=\"variable\">$i</span>/</div><div class=\"line\">&#125;&amp;</div><div class=\"line\"><span class=\"keyword\">done</span></div><div class=\"line\"><span class=\"built_in\">wait</span></div><div class=\"line\"></div><div class=\"line\">cat <span class=\"variable\">$work_dir</span>/*/<span class=\"built_in\">log</span> | sort | uniq &gt; <span class=\"variable\">$work_dir</span>/<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<p>可以发现主要的改动就在for循环的内容用<code>{}</code>括起来并在末尾加个<code>&amp;</code>，这样就可以实现多次循环一起执行了；另外在<code>done</code>后面加个<code>wait</code>是为了等待所有的循环都执行完成后再做后面的汇总工作，否则一旦有一个循环执行完成就会往下执行了。</p>\n<p>这样的执行时间大约是<strong>每台机器时间+汇总时间</strong>，可以看出比最初快了很多。</p>\n"},{"title":"ssh保持继续连接","date":"2016-09-21T14:22:22.000Z","photos":["/img/sshconfbanner.png"],"toc":false,"_content":"公司开发登录堡垒机时需要使用**PIN+token**的方式进行认证，而且动态密码只能一次使用，因此一次要打开多个终端都要多次等待动态密码的变化才能登录。\n\n所以听从公司同（xué）事（zhǎng）的建议，配置了一下`~/.ssh/config`：\n\n```sh\nHost *\nControlMaster auto\nControlPath ~/.ssh/%h-%p-%r\nControlPersist yes\n```\n\n如果没有这个文件可以新建。其中`Host`项是指目标地址；`ControlMaster`一项会使一旦有一个连接以后，再次从其他终端连接同一个host也不必再输密码；`ControlPersist`一项可以一段时间不再输密码也可以登录。这样配置以后就能实现输一次密码后对于同一host不再输密码即可连接了。","source":"_posts/ssh-conf.md","raw":"title: ssh保持继续连接\ndate: 2016-09-21 22:22:22\ntags: [ssh, Linux]\ncategories: [奇技淫巧, ＊nix]\nphotos: \n\t- /img/sshconfbanner.png\ntoc: false\n---\n公司开发登录堡垒机时需要使用**PIN+token**的方式进行认证，而且动态密码只能一次使用，因此一次要打开多个终端都要多次等待动态密码的变化才能登录。\n\n所以听从公司同（xué）事（zhǎng）的建议，配置了一下`~/.ssh/config`：\n\n```sh\nHost *\nControlMaster auto\nControlPath ~/.ssh/%h-%p-%r\nControlPersist yes\n```\n\n如果没有这个文件可以新建。其中`Host`项是指目标地址；`ControlMaster`一项会使一旦有一个连接以后，再次从其他终端连接同一个host也不必再输密码；`ControlPersist`一项可以一段时间不再输密码也可以登录。这样配置以后就能实现输一次密码后对于同一host不再输密码即可连接了。","slug":"ssh-conf","published":1,"updated":"2017-01-09T04:17:16.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0u900208mpr59q9boxx","content":"<p>公司开发登录堡垒机时需要使用<strong>PIN+token</strong>的方式进行认证，而且动态密码只能一次使用，因此一次要打开多个终端都要多次等待动态密码的变化才能登录。</p>\n<p>所以听从公司同（xué）事（zhǎng）的建议，配置了一下<code>~/.ssh/config</code>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host *</div><div class=\"line\">ControlMaster auto</div><div class=\"line\">ControlPath ~/.ssh/%h-%p-%r</div><div class=\"line\">ControlPersist yes</div></pre></td></tr></table></figure>\n<p>如果没有这个文件可以新建。其中<code>Host</code>项是指目标地址；<code>ControlMaster</code>一项会使一旦有一个连接以后，再次从其他终端连接同一个host也不必再输密码；<code>ControlPersist</code>一项可以一段时间不再输密码也可以登录。这样配置以后就能实现输一次密码后对于同一host不再输密码即可连接了。</p>\n","excerpt":"","more":"<p>公司开发登录堡垒机时需要使用<strong>PIN+token</strong>的方式进行认证，而且动态密码只能一次使用，因此一次要打开多个终端都要多次等待动态密码的变化才能登录。</p>\n<p>所以听从公司同（xué）事（zhǎng）的建议，配置了一下<code>~/.ssh/config</code>：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host *</div><div class=\"line\">ControlMaster auto</div><div class=\"line\">ControlPath ~/.ssh/%h-%p-%r</div><div class=\"line\">ControlPersist yes</div></pre></td></tr></table></figure>\n<p>如果没有这个文件可以新建。其中<code>Host</code>项是指目标地址；<code>ControlMaster</code>一项会使一旦有一个连接以后，再次从其他终端连接同一个host也不必再输密码；<code>ControlPersist</code>一项可以一段时间不再输密码也可以登录。这样配置以后就能实现输一次密码后对于同一host不再输密码即可连接了。</p>\n"},{"title":"SSL证书的申请与配置","date":"2015-12-30T15:33:33.000Z","photos":["/img/sslbanner.png"],"_content":"超文本传输安全协议（HTTPS）是一种网络安全传输协议。在计算机网络上，HTTPS经由超文本传输协议进行通讯，但利用SSL/TLS来对数据包进行加密。HTTPS开发的主要目的，是提供对网络服务器的身份认证，保护交换数据的隐私与完整性。\n\n如今越来越多的个人网站使用HTTPS协议，所以感觉自己的网站不装这么一个逼就落伍了。看着自己的主页地址栏前面有一个绿色的`https`也感觉安全了许多~~虽然并没有什么卵用~~。\n\n# 申请证书\n要使用HTTPS协议首先要有一个值得信任的证书颁发机构给你的网站颁发的证书。目前免费的SSL证书颁发机构有很多，本文以从**沃通**上申请证书为例。\n\n## 填写信息\n首先到[沃通官网](https://buy.wosign.com/free/)注册账号并登录。\n\n然后会出现以下界面：\n\n![填写信息](/img/ssl1.png)\n\n单次申请支持1个证书5个域名2年期限，证书可选中英文，提交就好了。\n\n## 验证域名\n签发机构需要验证域名的所有者，可以通过域名邮箱验证，也可以将指定信息放到网站上让其扫描以验证：\n\n![验证域名](/img/ssl2.png)\n\n如果没有域名邮箱，将指定的html文件下载下来上传到服务器上网站的根目录下然后点下面的验证就可以了。\n\n## 生成签名\n到订单里选择签名生成方式，可以选择第一种方式系统自动生成，设置密码：\n\n![生成签名](/img/ssl3.png)\n\n这个密码是最后解压证书用的，所以要记好。\n\n## 下载证书\n之后会弹出证书的下载链接，如果没有可以稍等片刻去订单里Get Cert，或者等待邮箱收到链接，输入刚才设置的密码就可下载压缩包了：\n\n![下载证书](/img/ssl4.png)\n\n# 部署证书\n通过之前设置的密码解压压缩包，里面有各种服务器的证书，解压自己所用的服务器对应的证书即可。本文以`Nginx`服务器为例。\n\n## 上传证书\n解压后里面有一个`.crt`文件和一个`.key`文件，将它们上传到服务器上：\n\n\tscp 1_your_domain_bundle.crt remote_username@remote_host:/usr/share/nginx/\n\tscp 2_your_domain.key remote_username@remote_host:/usr/share/nginx/\n\t\n## 监听端口\n一般HTTPS使用443端口，因此要编辑`/etc/nginx/conf.d`下的`ssl.conf`文件：\n\n```nginx\nserver {\n    listen       443;\n    server_name  your_domain;\n\n    ssl                  on;\n    ssl_certificate      /usr/share/nginx/1_your_domain_bundle.crt;\n    ssl_certificate_key  /usr/share/nginx/2_your_domain.key;\n\n    ssl_session_timeout  5m;\n\n    ssl_protocols  SSLv2 SSLv3 TLSv1;\n    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n    ssl_prefer_server_ciphers   on;\n\n    location / {\n        root   /usr/share/nginx/www;\n        index  index.html index.htm;\n    }\n}\n```\n\n解开注释并将证书文件路径写进去保存，然后运行`nginx -s reload`重新加载配置文件即可。\n\n## 强制跳转\n经过之前的配置必须在地址里写上`https`才会跳转到HTTPS域名，不然还是会跳转到HTTP的。\n\n所以还要编辑`/etc/nginx/conf.d`下的`default.conf`文件：\n\n```nginx\nserver {\n    listen       80 default_server;\n    server_name  your_domain;\n    return 301 https://$server_name$request_uri;        \n\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        root   /usr/share/nginx/www;\n        index  index.html index.htm;\n    }\n}\n```\n\n在`server_name`下面加一个301跳转就能强制跳转到`https`了。\n\n保存后运行`nginx -s reload`重新加载配置文件就搞定了。","source":"_posts/ssl.md","raw":"title: SSL证书的申请与配置\ndate: 2015-12-30 23:33:33\ntags: [服务器, SSL, VPS, Nginx]\ncategories: [网络, 网站部署]\nphotos:\n\t- /img/sslbanner.png\n---\n超文本传输安全协议（HTTPS）是一种网络安全传输协议。在计算机网络上，HTTPS经由超文本传输协议进行通讯，但利用SSL/TLS来对数据包进行加密。HTTPS开发的主要目的，是提供对网络服务器的身份认证，保护交换数据的隐私与完整性。\n\n如今越来越多的个人网站使用HTTPS协议，所以感觉自己的网站不装这么一个逼就落伍了。看着自己的主页地址栏前面有一个绿色的`https`也感觉安全了许多~~虽然并没有什么卵用~~。\n\n# 申请证书\n要使用HTTPS协议首先要有一个值得信任的证书颁发机构给你的网站颁发的证书。目前免费的SSL证书颁发机构有很多，本文以从**沃通**上申请证书为例。\n\n## 填写信息\n首先到[沃通官网](https://buy.wosign.com/free/)注册账号并登录。\n\n然后会出现以下界面：\n\n![填写信息](/img/ssl1.png)\n\n单次申请支持1个证书5个域名2年期限，证书可选中英文，提交就好了。\n\n## 验证域名\n签发机构需要验证域名的所有者，可以通过域名邮箱验证，也可以将指定信息放到网站上让其扫描以验证：\n\n![验证域名](/img/ssl2.png)\n\n如果没有域名邮箱，将指定的html文件下载下来上传到服务器上网站的根目录下然后点下面的验证就可以了。\n\n## 生成签名\n到订单里选择签名生成方式，可以选择第一种方式系统自动生成，设置密码：\n\n![生成签名](/img/ssl3.png)\n\n这个密码是最后解压证书用的，所以要记好。\n\n## 下载证书\n之后会弹出证书的下载链接，如果没有可以稍等片刻去订单里Get Cert，或者等待邮箱收到链接，输入刚才设置的密码就可下载压缩包了：\n\n![下载证书](/img/ssl4.png)\n\n# 部署证书\n通过之前设置的密码解压压缩包，里面有各种服务器的证书，解压自己所用的服务器对应的证书即可。本文以`Nginx`服务器为例。\n\n## 上传证书\n解压后里面有一个`.crt`文件和一个`.key`文件，将它们上传到服务器上：\n\n\tscp 1_your_domain_bundle.crt remote_username@remote_host:/usr/share/nginx/\n\tscp 2_your_domain.key remote_username@remote_host:/usr/share/nginx/\n\t\n## 监听端口\n一般HTTPS使用443端口，因此要编辑`/etc/nginx/conf.d`下的`ssl.conf`文件：\n\n```nginx\nserver {\n    listen       443;\n    server_name  your_domain;\n\n    ssl                  on;\n    ssl_certificate      /usr/share/nginx/1_your_domain_bundle.crt;\n    ssl_certificate_key  /usr/share/nginx/2_your_domain.key;\n\n    ssl_session_timeout  5m;\n\n    ssl_protocols  SSLv2 SSLv3 TLSv1;\n    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n    ssl_prefer_server_ciphers   on;\n\n    location / {\n        root   /usr/share/nginx/www;\n        index  index.html index.htm;\n    }\n}\n```\n\n解开注释并将证书文件路径写进去保存，然后运行`nginx -s reload`重新加载配置文件即可。\n\n## 强制跳转\n经过之前的配置必须在地址里写上`https`才会跳转到HTTPS域名，不然还是会跳转到HTTP的。\n\n所以还要编辑`/etc/nginx/conf.d`下的`default.conf`文件：\n\n```nginx\nserver {\n    listen       80 default_server;\n    server_name  your_domain;\n    return 301 https://$server_name$request_uri;        \n\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        root   /usr/share/nginx/www;\n        index  index.html index.htm;\n    }\n}\n```\n\n在`server_name`下面加一个301跳转就能强制跳转到`https`了。\n\n保存后运行`nginx -s reload`重新加载配置文件就搞定了。","slug":"ssl","published":1,"updated":"2017-02-18T11:39:57.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0ua00248mpr9et0wyuu","content":"<p>超文本传输安全协议（HTTPS）是一种网络安全传输协议。在计算机网络上，HTTPS经由超文本传输协议进行通讯，但利用SSL/TLS来对数据包进行加密。HTTPS开发的主要目的，是提供对网络服务器的身份认证，保护交换数据的隐私与完整性。</p>\n<p>如今越来越多的个人网站使用HTTPS协议，所以感觉自己的网站不装这么一个逼就落伍了。看着自己的主页地址栏前面有一个绿色的<code>https</code>也感觉安全了许多<del>虽然并没有什么卵用</del>。</p>\n<h1 id=\"申请证书\"><a href=\"#申请证书\" class=\"headerlink\" title=\"申请证书\"></a>申请证书</h1><p>要使用HTTPS协议首先要有一个值得信任的证书颁发机构给你的网站颁发的证书。目前免费的SSL证书颁发机构有很多，本文以从<strong>沃通</strong>上申请证书为例。</p>\n<h2 id=\"填写信息\"><a href=\"#填写信息\" class=\"headerlink\" title=\"填写信息\"></a>填写信息</h2><p>首先到<a href=\"https://buy.wosign.com/free/\" target=\"_blank\" rel=\"external\">沃通官网</a>注册账号并登录。</p>\n<p>然后会出现以下界面：</p>\n<p><img src=\"/img/ssl1.png\" alt=\"填写信息\"></p>\n<p>单次申请支持1个证书5个域名2年期限，证书可选中英文，提交就好了。</p>\n<h2 id=\"验证域名\"><a href=\"#验证域名\" class=\"headerlink\" title=\"验证域名\"></a>验证域名</h2><p>签发机构需要验证域名的所有者，可以通过域名邮箱验证，也可以将指定信息放到网站上让其扫描以验证：</p>\n<p><img src=\"/img/ssl2.png\" alt=\"验证域名\"></p>\n<p>如果没有域名邮箱，将指定的html文件下载下来上传到服务器上网站的根目录下然后点下面的验证就可以了。</p>\n<h2 id=\"生成签名\"><a href=\"#生成签名\" class=\"headerlink\" title=\"生成签名\"></a>生成签名</h2><p>到订单里选择签名生成方式，可以选择第一种方式系统自动生成，设置密码：</p>\n<p><img src=\"/img/ssl3.png\" alt=\"生成签名\"></p>\n<p>这个密码是最后解压证书用的，所以要记好。</p>\n<h2 id=\"下载证书\"><a href=\"#下载证书\" class=\"headerlink\" title=\"下载证书\"></a>下载证书</h2><p>之后会弹出证书的下载链接，如果没有可以稍等片刻去订单里Get Cert，或者等待邮箱收到链接，输入刚才设置的密码就可下载压缩包了：</p>\n<p><img src=\"/img/ssl4.png\" alt=\"下载证书\"></p>\n<h1 id=\"部署证书\"><a href=\"#部署证书\" class=\"headerlink\" title=\"部署证书\"></a>部署证书</h1><p>通过之前设置的密码解压压缩包，里面有各种服务器的证书，解压自己所用的服务器对应的证书即可。本文以<code>Nginx</code>服务器为例。</p>\n<h2 id=\"上传证书\"><a href=\"#上传证书\" class=\"headerlink\" title=\"上传证书\"></a>上传证书</h2><p>解压后里面有一个<code>.crt</code>文件和一个<code>.key</code>文件，将它们上传到服务器上：</p>\n<pre><code>scp 1_your_domain_bundle.crt remote_username@remote_host:/usr/share/nginx/\nscp 2_your_domain.key remote_username@remote_host:/usr/share/nginx/\n</code></pre><h2 id=\"监听端口\"><a href=\"#监听端口\" class=\"headerlink\" title=\"监听端口\"></a>监听端口</h2><p>一般HTTPS使用443端口，因此要编辑<code>/etc/nginx/conf.d</code>下的<code>ssl.conf</code>文件：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">443</span>;</div><div class=\"line\">    <span class=\"attribute\">server_name</span>  your_domain;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">ssl</span>                  <span class=\"literal\">on</span>;</div><div class=\"line\">    <span class=\"attribute\">ssl_certificate</span>      /usr/share/nginx/1_your_domain_bundle.crt;</div><div class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span>  /usr/share/nginx/2_your_domain.key;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span>  <span class=\"number\">5m</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">ssl_protocols</span>  SSLv2 SSLv3 TLSv1;</div><div class=\"line\">    <span class=\"attribute\">ssl_ciphers</span>  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</div><div class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span>   <span class=\"literal\">on</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/www;</div><div class=\"line\">        <span class=\"attribute\">index</span>  index.html index.htm;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>解开注释并将证书文件路径写进去保存，然后运行<code>nginx -s reload</code>重新加载配置文件即可。</p>\n<h2 id=\"强制跳转\"><a href=\"#强制跳转\" class=\"headerlink\" title=\"强制跳转\"></a>强制跳转</h2><p>经过之前的配置必须在地址里写上<code>https</code>才会跳转到HTTPS域名，不然还是会跳转到HTTP的。</p>\n<p>所以还要编辑<code>/etc/nginx/conf.d</code>下的<code>default.conf</code>文件：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">80</span> default_server;</div><div class=\"line\">    <span class=\"attribute\">server_name</span>  your_domain;</div><div class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">301</span> https://<span class=\"variable\">$server_name</span><span class=\"variable\">$request_uri</span>;        </div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/default.d/<span class=\"regexp\">*.conf</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/www;</div><div class=\"line\">        <span class=\"attribute\">index</span>  index.html index.htm;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在<code>server_name</code>下面加一个301跳转就能强制跳转到<code>https</code>了。</p>\n<p>保存后运行<code>nginx -s reload</code>重新加载配置文件就搞定了。</p>\n","excerpt":"","more":"<p>超文本传输安全协议（HTTPS）是一种网络安全传输协议。在计算机网络上，HTTPS经由超文本传输协议进行通讯，但利用SSL/TLS来对数据包进行加密。HTTPS开发的主要目的，是提供对网络服务器的身份认证，保护交换数据的隐私与完整性。</p>\n<p>如今越来越多的个人网站使用HTTPS协议，所以感觉自己的网站不装这么一个逼就落伍了。看着自己的主页地址栏前面有一个绿色的<code>https</code>也感觉安全了许多<del>虽然并没有什么卵用</del>。</p>\n<h1 id=\"申请证书\"><a href=\"#申请证书\" class=\"headerlink\" title=\"申请证书\"></a>申请证书</h1><p>要使用HTTPS协议首先要有一个值得信任的证书颁发机构给你的网站颁发的证书。目前免费的SSL证书颁发机构有很多，本文以从<strong>沃通</strong>上申请证书为例。</p>\n<h2 id=\"填写信息\"><a href=\"#填写信息\" class=\"headerlink\" title=\"填写信息\"></a>填写信息</h2><p>首先到<a href=\"https://buy.wosign.com/free/\">沃通官网</a>注册账号并登录。</p>\n<p>然后会出现以下界面：</p>\n<p><img src=\"/img/ssl1.png\" alt=\"填写信息\"></p>\n<p>单次申请支持1个证书5个域名2年期限，证书可选中英文，提交就好了。</p>\n<h2 id=\"验证域名\"><a href=\"#验证域名\" class=\"headerlink\" title=\"验证域名\"></a>验证域名</h2><p>签发机构需要验证域名的所有者，可以通过域名邮箱验证，也可以将指定信息放到网站上让其扫描以验证：</p>\n<p><img src=\"/img/ssl2.png\" alt=\"验证域名\"></p>\n<p>如果没有域名邮箱，将指定的html文件下载下来上传到服务器上网站的根目录下然后点下面的验证就可以了。</p>\n<h2 id=\"生成签名\"><a href=\"#生成签名\" class=\"headerlink\" title=\"生成签名\"></a>生成签名</h2><p>到订单里选择签名生成方式，可以选择第一种方式系统自动生成，设置密码：</p>\n<p><img src=\"/img/ssl3.png\" alt=\"生成签名\"></p>\n<p>这个密码是最后解压证书用的，所以要记好。</p>\n<h2 id=\"下载证书\"><a href=\"#下载证书\" class=\"headerlink\" title=\"下载证书\"></a>下载证书</h2><p>之后会弹出证书的下载链接，如果没有可以稍等片刻去订单里Get Cert，或者等待邮箱收到链接，输入刚才设置的密码就可下载压缩包了：</p>\n<p><img src=\"/img/ssl4.png\" alt=\"下载证书\"></p>\n<h1 id=\"部署证书\"><a href=\"#部署证书\" class=\"headerlink\" title=\"部署证书\"></a>部署证书</h1><p>通过之前设置的密码解压压缩包，里面有各种服务器的证书，解压自己所用的服务器对应的证书即可。本文以<code>Nginx</code>服务器为例。</p>\n<h2 id=\"上传证书\"><a href=\"#上传证书\" class=\"headerlink\" title=\"上传证书\"></a>上传证书</h2><p>解压后里面有一个<code>.crt</code>文件和一个<code>.key</code>文件，将它们上传到服务器上：</p>\n<pre><code>scp 1_your_domain_bundle.crt remote_username@remote_host:/usr/share/nginx/\nscp 2_your_domain.key remote_username@remote_host:/usr/share/nginx/\n</code></pre><h2 id=\"监听端口\"><a href=\"#监听端口\" class=\"headerlink\" title=\"监听端口\"></a>监听端口</h2><p>一般HTTPS使用443端口，因此要编辑<code>/etc/nginx/conf.d</code>下的<code>ssl.conf</code>文件：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">443</span>;</div><div class=\"line\">    <span class=\"attribute\">server_name</span>  your_domain;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">ssl</span>                  <span class=\"literal\">on</span>;</div><div class=\"line\">    <span class=\"attribute\">ssl_certificate</span>      /usr/share/nginx/1_your_domain_bundle.crt;</div><div class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span>  /usr/share/nginx/2_your_domain.key;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span>  <span class=\"number\">5m</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">ssl_protocols</span>  SSLv2 SSLv3 TLSv1;</div><div class=\"line\">    <span class=\"attribute\">ssl_ciphers</span>  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</div><div class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span>   <span class=\"literal\">on</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/www;</div><div class=\"line\">        <span class=\"attribute\">index</span>  index.html index.htm;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>解开注释并将证书文件路径写进去保存，然后运行<code>nginx -s reload</code>重新加载配置文件即可。</p>\n<h2 id=\"强制跳转\"><a href=\"#强制跳转\" class=\"headerlink\" title=\"强制跳转\"></a>强制跳转</h2><p>经过之前的配置必须在地址里写上<code>https</code>才会跳转到HTTPS域名，不然还是会跳转到HTTP的。</p>\n<p>所以还要编辑<code>/etc/nginx/conf.d</code>下的<code>default.conf</code>文件：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">server</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">80</span> default_server;</div><div class=\"line\">    <span class=\"attribute\">server_name</span>  your_domain;</div><div class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">301</span> https://<span class=\"variable\">$server_name</span><span class=\"variable\">$request_uri</span>;        </div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/default.d/<span class=\"regexp\">*.conf</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"attribute\">location</span> / &#123;</div><div class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/www;</div><div class=\"line\">        <span class=\"attribute\">index</span>  index.html index.htm;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在<code>server_name</code>下面加一个301跳转就能强制跳转到<code>https</code>了。</p>\n<p>保存后运行<code>nginx -s reload</code>重新加载配置文件就搞定了。</p>\n"},{"title":"SoftEther VPN的搭建与连接","date":"2016-01-24T15:33:33.000Z","photos":["/img/vpnbanner.png"],"_content":"虚拟专用网（**VPN**），是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。虚拟私人网络的讯息透过公用的网络架构来传送内联网的网络讯息。它利用已加密的通道协议来达到保密、发送端认证、消息准确性等私人消息安全效果。这种技术可以用不安全的网络来发送可靠、安全的消息。可以用通俗的例子来解释这件事情：\n\n> FFF国的小张和小王是*异地双性恋*，他们之间经常互通情书。但是FFF国有一个规定，就是异性青少年不能互通信件，否则就要被双双烧死。于是这对情侣就拜托他们的父亲老张和~~隔壁~~老王代为收发信件：小张和小王写完信后各自放在信封中封好，信封上分别写上`小王亲启`和`小张亲启`，然后分别交给他们的父亲，老张和老王把信封又装进一个大信封中，上面分别写上`老王收`和`老张收`再寄出。自然之后老张和老王会收到信件，拆开大信封后发现不是给自己的就转交给自己的孩子，这对情侣就这样达到了通信目的。\n\n看了VPN的原理，我们很容易想到可以用这种方式来科学上网。我们虽然不能直接和被墙的网站通讯，但我们可以通过VPN的方式躲过GFW的追杀。\n\n[SoftEther VPN](https://www.softether.org/)是由日本筑波大学的[登 大遊](http://dnobori.cs.tsukuba.ac.jp/en/)在硕士论文中提出的开源、跨平台、多重协议的虚拟专用网方案，是专门为穿过防火墙而设计的。我们可以用它在自己的VPS上搭建一个简单的VPN来使用。\n\n# 服务器端\n## 下载解压\n首先要在服务器上下载并解压安装文件，一定注意是32位还是64位（可通过`uname -a`命令查看）。\n32位系统：\n\t\n\twget http://jp.softether-download.com/files/softether/v4.20-9608-rtm-2016.04.17-tree/Linux/SoftEther_VPN_Server/32bit_-_Intel_x86/softether-vpnserver-v4.20-9608-rtm-2016.04.17-linux-x86-32bit.tar.gz\n\t\n64位系统：\n\n\twget http://jp.softether-download.com/files/softether/v4.20-9608-rtm-2016.04.17-tree/Linux/SoftEther_VPN_Server/64bit_-_Intel_x64_or_AMD64/softether-vpnserver-v4.20-9608-rtm-2016.04.17-linux-x64-64bit.tar.gz\n\t\n以上为截止发布本文时的最新版本，建议从[SoftEther官方网站](http://www.softether-download.com/en.aspx?product=softether)获取最新版本。\n\n## 安装启动\n先解压（建议装到`/usr/local`下）：\n\t\n\ttar -zxvf softether-vpnserver-*.tar.gz\n\n`cd vpnserver`进入到解压目录下并启动安装脚本`./.install.sh`：\n\n> --------------------------------------------------------------------\n\n> SoftEther VPN Server (Ver 4.20, Build 9608, Intel x64 / AMD64) for Linux Install Utility\n> Copyright (c) SoftEther Project at University of Tsukuba, Japan. All Rights Reserved.\n\n> --------------------------------------------------------------------\n\n\n> Do you want to read the License Agreement for this software ?\n\n>  1. Yes\n>  2. No\n\n> Please choose one of above number:\n\t\n认识不认识字至少读一读，之后会出现一堆License，然后问你看懂了没：\n\n> Did you read and understand the License Agreement ?\n> (If you couldn't read above text, Please read 'ReadMeFirst_License.txt' file with any text editor.)\n\n>  1. Yes\n>  2. No\n\n> Please choose one of above number:\n\n当然没看懂也要说看懂了，然后又问你同不同意：\n\n> Did you agree the License Agreement ?\n\n>  1. Agree\n>  2. Do Not Agree\n\n> Please choose one of above number:\n\n不同意就不要用了。如果提示不识别某些命令比如`gcc`，另行安装即可。如果没有异常则说明安装成功，执行`./vpnserver start`启动服务。同理`./vpnserver stop`停止服务。\n\n在CentOS7以后可以用systemd启动vpnserver，先新建启动脚本`/etc/systemd/system/vpnserver.service`：\n\n```ini\n[Unit]\nDescription=SoftEther VPN Server\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=/usr/local/vpnserver/vpnserver start\nExecStop=/usr/local/vpnserver/vpnserver stop\n\n[Install]\nWantedBy=multi-user.target\n```\n\n然后就可以通过`systemctl start vpnserver`启动了，并通过`systemctl enable vpnserver`设置开机自启。\n\n## 设置密码\n启动成功后我们需要设置远程登录密码以便本地管理服务。运行`./vpncmd`进入VPN的命令行：\n\t\n> vpncmd command - SoftEther VPN Command Line Management Utility\n> SoftEther VPN Command Line Management Utility (vpncmd command)\n> Version 4.20 Build 9608   (English)\n> Compiled 2016/04/17 21:59:35 by yagi at pc30\n> Copyright (c) SoftEther VPN Project. All Rights Reserved.\n\n> By using vpncmd program, the following can be achieved.\n\n> 1. Management of VPN Server or VPN Bridge\n> 2. Management of VPN Client\n> 3. Use of VPN Tools (certificate creation and Network Traffic Speed Test Tool)\n\n> Select 1, 2 or 3:\n\n这里我们选择1，然后出现：\n\n> Specify the host name or IP address of the computer that the destination VPN Server or VPN Bridge is operating on.\n> By specifying according to the format 'host name:port number', you can also specify the port number.\n> (When the port number is unspecified, 443 is used.)\n> If nothing is input and the Enter key is pressed, the connection will be made to the port number 8888 of localhost (this computer).\n> Hostname of IP Address of Destination:\n\t\n这里需要选择地址和端口。由于这台VPS我搭了一个网站，用了SSL占用了443端口，所以默认的443端口是用不了了，所以一定要改。我改用了5555端口，所以在这里输入`localhost:5555`，然后出现：\n\n> If connecting to the server by Virtual Hub Admin Mode, please input the Virtual Hub name.\n> If connecting by server admin mode, please press Enter without inputting anything.\n> Specify Virtual Hub Name:\n\t\n这里就是指定一个虚拟HUB名字，用默认的直接回车就行。\n\n> Connection has been established with VPN Server \"localhost\" (port 5555).\n\n> You have administrator privileges for the entire VPN Server.\n\n> VPN Server>\n\t\n这时我们需要输入`ServerPasswordSet`命令设置远程管理密码，确认密码后就可以通过Windows版的`SoftEther VPN Server Manager`远程管理了。\n\n# VPN管理\n首先下载并安装[SoftEther VPN Server Manager](http://softether-download.com/en.aspx)（居然最近移植了Mac版），其实只用到了管理工具：\n\n![Setup Wizard](/img/vpnsetup.png)\n\n安装之后运行它：\n\n![Server Manager](/img/vpnnew.png)\n\n在这里点`新建`：\n\n![New Connection Setting](/img/vpnset.png)\n\n`Host Name`填服务器的地址或域名，端口如果之前改过了在这也记得改过来，右下角的密码填之前设置过的密码。新建完成后`Connect`就会弹出`Easy Setup`窗口（如果提示连不上请检查一下服务器的防火墙设置）：\n\n![Easy Setup](/img/vpneasy.png)\n\n这里在第一个`远程连接`挑钩然后下一步即可，虚拟HUB名像之前一样默认就好。\n\n然后会弹出一个`动态DNS功能`的窗口，由于不能确定它给的域名是不是被墙了，我们就不去用它，把这个窗口关了就行了。\n\n之后会有一个协议设置的窗口：\n\n![IPsec/L2TP/EtherIP/L2TPv3 Server Settings](/img/vpnl2tp.png)\n\n这里把`启用L2TP`挑上钩，下面设置一个`IPsec预共享密钥`就行了。\n\n之后又会弹出一个`VPN Azure Cloud`服务的窗口，感觉没什么用，禁用了就行了。即使有用以后也可以再启用。\n\n接下来要新建用户：\n\n![Create New User](/img/vpnuser.png)\n\n其中用户名是必填的，验证类型选密码验证就行，然后在右侧设置用户密码。\n\n![Server Manager](/img/vpnmanager.png)\n\n之后回到管理界面，点`管理虚拟HUB`：\n\n![Virtual Hub](/img/vpnhub.png)\n\n这里也可以继续添加新用户。点`虚拟NAT和虚拟DHCP服务器`，弹出窗口：\n\n![Virtual NAT & Virtual DHCP](/img/vpnvirtual.png)\n\n在里面`启用SecureNAT`并点`SecureNAT配置`：\n\n![SecureNAT Configration](/img/vpnnat.png)\n\n注意DNS要改为`8.8.8.8`和`8.8.4.4`。这里就算配置完毕。然后顺便生成一下**OpenVPN**的配置文件，点`OpenVPN / MS-SSTP Setting`：\n\n![Server Manager](/img/vpnopen.png)\n\n然后点击新窗口中部的按钮生成配置文件：\n\n![OpenVPN / MS-SSTP Setting](/img/vpnovpn.png)\n\n打开导出的压缩包会看到里面有两个`.ovpn`文件，一般我们要用到`*_openvpn_remote_access_l3.ovpn`这个文件，因为我们是通过IPv4地址管理的VPN，所以这个配置文件里的`remote`一项会是IPv4地址，如果需要使用IPv6的VPN就将其替换为相应的IPv6地址即可。\n\n# 本地连接\n## IPv4\n这里只说电脑设备，移动的设备的话配置方法类似。\n\n### Windows\n首先到`网络和共享中心`里新建一个网络连接：\n\n![Set Up a Connection or Network](/img/vpnwin1.png)\n\n选择`连接到工作区`\t。\n\n![Connect to a Workplace](/img/vpnwin2.png)\n\n这里当然要选VPN咯。\n\n![Connect to a Workplace](/img/vpnwin3.png)\n\n然后在地址栏里填上服务器地址或域名。配置完成后打开`更改适配器设置`：\n\n![Network Connections](/img/vpnwin4.png)\n\n打开VPN连接的属性：\n\n![Properties](/img/vpnwin5.png)\n\n在`安全`选项卡里将`VPN类型`改为`L2TP`，然后点高级设置：\n\n![Advanced Properties](/img/vpnwin6.png)\n\n在里面选上使用预共享密钥并把之前设置的密钥填进去。\n\n![Sign in](/img/vpnwin7.png)\n\n之后在VPN连接里把用户名和密码填进去就可以连上了。\n\n### Mac OS X\n在网络配置里新建网络连接：\n\n![Network Preferences](/img/vpnmac1.png)\n\n接口选`VPN`，VPN类型选`L2TP over IPSec`，创建即可。\n\n![Network Preferences](/img/vpnmac2.png)\n\n然后在地址栏填服务器地址或域名，下面的账户名称填之前新建的用户名，然后点下面的`认证设置`：\n\n![Network Preferences](/img/vpnmac3.png)\n\n密码中填上面用户的密码，共享密钥填之前设置的预共享密钥，保存并连接即可。\n\n## IPv6\n因为有使用教育网通过IPv6的需求，这里也说一下IPv6的连接方法。\n\n### 移动设备\niOS的应用商店里有OpenVPN的客户端，但由于软件的特殊性，中国应用商店里已经下架了，所以通过什么渠道安装请自己想办法。\n\n如果你的Android设备支持IPv6网络的话，Play Store里也有OpenVPN的客户端下载，也可以搜一个apk自己装。\n\n![OpenVPN](/img/vpnopenvpn.png)\n\n上述设备安装好客户端以后，将之前生成的`.ovpn`文件传到设备中，用OpenVPN打开即可，之后还会需要输入之前设置的用户名密码之类的，这里不再赘述。\n\n### macOS\n因为没有找到Mac上的OpenVPN客户端，所以使用了一个叫做**Tunnelblick**的App，功能类似。\n\n![Tunnelblick](/img/vpntunnel.png)\n\n到[Tunnelblick官网](https://tunnelblick.net/downloads.html)下载后，同样将`.ovpn`文件用它打开就可以了，输入用户名密码后就连上了。\n\n### Windows\n从理论上讲IPv6的VPN用Windows自带的VPN连接就可以（同IPv4），把地址变一下就可以了。如果遇到不能连接的情况也可以试一下OpenVPN的Windows版，去[OpenVPN官网](https://openvpn.net/index.php/open-source/downloads.html)下载即可。","source":"_posts/softether.md","raw":"title: SoftEther VPN的搭建与连接\ndate: 2016-01-24 23:33:33\ntags: [SoftEther, VPN, 科学上网, 服务器, 代理, Linux, VPS]\ncategories: [网络, 科学上网]\nphotos:\n\t- /img/vpnbanner.png\n---\n虚拟专用网（**VPN**），是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。虚拟私人网络的讯息透过公用的网络架构来传送内联网的网络讯息。它利用已加密的通道协议来达到保密、发送端认证、消息准确性等私人消息安全效果。这种技术可以用不安全的网络来发送可靠、安全的消息。可以用通俗的例子来解释这件事情：\n\n> FFF国的小张和小王是*异地双性恋*，他们之间经常互通情书。但是FFF国有一个规定，就是异性青少年不能互通信件，否则就要被双双烧死。于是这对情侣就拜托他们的父亲老张和~~隔壁~~老王代为收发信件：小张和小王写完信后各自放在信封中封好，信封上分别写上`小王亲启`和`小张亲启`，然后分别交给他们的父亲，老张和老王把信封又装进一个大信封中，上面分别写上`老王收`和`老张收`再寄出。自然之后老张和老王会收到信件，拆开大信封后发现不是给自己的就转交给自己的孩子，这对情侣就这样达到了通信目的。\n\n看了VPN的原理，我们很容易想到可以用这种方式来科学上网。我们虽然不能直接和被墙的网站通讯，但我们可以通过VPN的方式躲过GFW的追杀。\n\n[SoftEther VPN](https://www.softether.org/)是由日本筑波大学的[登 大遊](http://dnobori.cs.tsukuba.ac.jp/en/)在硕士论文中提出的开源、跨平台、多重协议的虚拟专用网方案，是专门为穿过防火墙而设计的。我们可以用它在自己的VPS上搭建一个简单的VPN来使用。\n\n# 服务器端\n## 下载解压\n首先要在服务器上下载并解压安装文件，一定注意是32位还是64位（可通过`uname -a`命令查看）。\n32位系统：\n\t\n\twget http://jp.softether-download.com/files/softether/v4.20-9608-rtm-2016.04.17-tree/Linux/SoftEther_VPN_Server/32bit_-_Intel_x86/softether-vpnserver-v4.20-9608-rtm-2016.04.17-linux-x86-32bit.tar.gz\n\t\n64位系统：\n\n\twget http://jp.softether-download.com/files/softether/v4.20-9608-rtm-2016.04.17-tree/Linux/SoftEther_VPN_Server/64bit_-_Intel_x64_or_AMD64/softether-vpnserver-v4.20-9608-rtm-2016.04.17-linux-x64-64bit.tar.gz\n\t\n以上为截止发布本文时的最新版本，建议从[SoftEther官方网站](http://www.softether-download.com/en.aspx?product=softether)获取最新版本。\n\n## 安装启动\n先解压（建议装到`/usr/local`下）：\n\t\n\ttar -zxvf softether-vpnserver-*.tar.gz\n\n`cd vpnserver`进入到解压目录下并启动安装脚本`./.install.sh`：\n\n> --------------------------------------------------------------------\n\n> SoftEther VPN Server (Ver 4.20, Build 9608, Intel x64 / AMD64) for Linux Install Utility\n> Copyright (c) SoftEther Project at University of Tsukuba, Japan. All Rights Reserved.\n\n> --------------------------------------------------------------------\n\n\n> Do you want to read the License Agreement for this software ?\n\n>  1. Yes\n>  2. No\n\n> Please choose one of above number:\n\t\n认识不认识字至少读一读，之后会出现一堆License，然后问你看懂了没：\n\n> Did you read and understand the License Agreement ?\n> (If you couldn't read above text, Please read 'ReadMeFirst_License.txt' file with any text editor.)\n\n>  1. Yes\n>  2. No\n\n> Please choose one of above number:\n\n当然没看懂也要说看懂了，然后又问你同不同意：\n\n> Did you agree the License Agreement ?\n\n>  1. Agree\n>  2. Do Not Agree\n\n> Please choose one of above number:\n\n不同意就不要用了。如果提示不识别某些命令比如`gcc`，另行安装即可。如果没有异常则说明安装成功，执行`./vpnserver start`启动服务。同理`./vpnserver stop`停止服务。\n\n在CentOS7以后可以用systemd启动vpnserver，先新建启动脚本`/etc/systemd/system/vpnserver.service`：\n\n```ini\n[Unit]\nDescription=SoftEther VPN Server\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=/usr/local/vpnserver/vpnserver start\nExecStop=/usr/local/vpnserver/vpnserver stop\n\n[Install]\nWantedBy=multi-user.target\n```\n\n然后就可以通过`systemctl start vpnserver`启动了，并通过`systemctl enable vpnserver`设置开机自启。\n\n## 设置密码\n启动成功后我们需要设置远程登录密码以便本地管理服务。运行`./vpncmd`进入VPN的命令行：\n\t\n> vpncmd command - SoftEther VPN Command Line Management Utility\n> SoftEther VPN Command Line Management Utility (vpncmd command)\n> Version 4.20 Build 9608   (English)\n> Compiled 2016/04/17 21:59:35 by yagi at pc30\n> Copyright (c) SoftEther VPN Project. All Rights Reserved.\n\n> By using vpncmd program, the following can be achieved.\n\n> 1. Management of VPN Server or VPN Bridge\n> 2. Management of VPN Client\n> 3. Use of VPN Tools (certificate creation and Network Traffic Speed Test Tool)\n\n> Select 1, 2 or 3:\n\n这里我们选择1，然后出现：\n\n> Specify the host name or IP address of the computer that the destination VPN Server or VPN Bridge is operating on.\n> By specifying according to the format 'host name:port number', you can also specify the port number.\n> (When the port number is unspecified, 443 is used.)\n> If nothing is input and the Enter key is pressed, the connection will be made to the port number 8888 of localhost (this computer).\n> Hostname of IP Address of Destination:\n\t\n这里需要选择地址和端口。由于这台VPS我搭了一个网站，用了SSL占用了443端口，所以默认的443端口是用不了了，所以一定要改。我改用了5555端口，所以在这里输入`localhost:5555`，然后出现：\n\n> If connecting to the server by Virtual Hub Admin Mode, please input the Virtual Hub name.\n> If connecting by server admin mode, please press Enter without inputting anything.\n> Specify Virtual Hub Name:\n\t\n这里就是指定一个虚拟HUB名字，用默认的直接回车就行。\n\n> Connection has been established with VPN Server \"localhost\" (port 5555).\n\n> You have administrator privileges for the entire VPN Server.\n\n> VPN Server>\n\t\n这时我们需要输入`ServerPasswordSet`命令设置远程管理密码，确认密码后就可以通过Windows版的`SoftEther VPN Server Manager`远程管理了。\n\n# VPN管理\n首先下载并安装[SoftEther VPN Server Manager](http://softether-download.com/en.aspx)（居然最近移植了Mac版），其实只用到了管理工具：\n\n![Setup Wizard](/img/vpnsetup.png)\n\n安装之后运行它：\n\n![Server Manager](/img/vpnnew.png)\n\n在这里点`新建`：\n\n![New Connection Setting](/img/vpnset.png)\n\n`Host Name`填服务器的地址或域名，端口如果之前改过了在这也记得改过来，右下角的密码填之前设置过的密码。新建完成后`Connect`就会弹出`Easy Setup`窗口（如果提示连不上请检查一下服务器的防火墙设置）：\n\n![Easy Setup](/img/vpneasy.png)\n\n这里在第一个`远程连接`挑钩然后下一步即可，虚拟HUB名像之前一样默认就好。\n\n然后会弹出一个`动态DNS功能`的窗口，由于不能确定它给的域名是不是被墙了，我们就不去用它，把这个窗口关了就行了。\n\n之后会有一个协议设置的窗口：\n\n![IPsec/L2TP/EtherIP/L2TPv3 Server Settings](/img/vpnl2tp.png)\n\n这里把`启用L2TP`挑上钩，下面设置一个`IPsec预共享密钥`就行了。\n\n之后又会弹出一个`VPN Azure Cloud`服务的窗口，感觉没什么用，禁用了就行了。即使有用以后也可以再启用。\n\n接下来要新建用户：\n\n![Create New User](/img/vpnuser.png)\n\n其中用户名是必填的，验证类型选密码验证就行，然后在右侧设置用户密码。\n\n![Server Manager](/img/vpnmanager.png)\n\n之后回到管理界面，点`管理虚拟HUB`：\n\n![Virtual Hub](/img/vpnhub.png)\n\n这里也可以继续添加新用户。点`虚拟NAT和虚拟DHCP服务器`，弹出窗口：\n\n![Virtual NAT & Virtual DHCP](/img/vpnvirtual.png)\n\n在里面`启用SecureNAT`并点`SecureNAT配置`：\n\n![SecureNAT Configration](/img/vpnnat.png)\n\n注意DNS要改为`8.8.8.8`和`8.8.4.4`。这里就算配置完毕。然后顺便生成一下**OpenVPN**的配置文件，点`OpenVPN / MS-SSTP Setting`：\n\n![Server Manager](/img/vpnopen.png)\n\n然后点击新窗口中部的按钮生成配置文件：\n\n![OpenVPN / MS-SSTP Setting](/img/vpnovpn.png)\n\n打开导出的压缩包会看到里面有两个`.ovpn`文件，一般我们要用到`*_openvpn_remote_access_l3.ovpn`这个文件，因为我们是通过IPv4地址管理的VPN，所以这个配置文件里的`remote`一项会是IPv4地址，如果需要使用IPv6的VPN就将其替换为相应的IPv6地址即可。\n\n# 本地连接\n## IPv4\n这里只说电脑设备，移动的设备的话配置方法类似。\n\n### Windows\n首先到`网络和共享中心`里新建一个网络连接：\n\n![Set Up a Connection or Network](/img/vpnwin1.png)\n\n选择`连接到工作区`\t。\n\n![Connect to a Workplace](/img/vpnwin2.png)\n\n这里当然要选VPN咯。\n\n![Connect to a Workplace](/img/vpnwin3.png)\n\n然后在地址栏里填上服务器地址或域名。配置完成后打开`更改适配器设置`：\n\n![Network Connections](/img/vpnwin4.png)\n\n打开VPN连接的属性：\n\n![Properties](/img/vpnwin5.png)\n\n在`安全`选项卡里将`VPN类型`改为`L2TP`，然后点高级设置：\n\n![Advanced Properties](/img/vpnwin6.png)\n\n在里面选上使用预共享密钥并把之前设置的密钥填进去。\n\n![Sign in](/img/vpnwin7.png)\n\n之后在VPN连接里把用户名和密码填进去就可以连上了。\n\n### Mac OS X\n在网络配置里新建网络连接：\n\n![Network Preferences](/img/vpnmac1.png)\n\n接口选`VPN`，VPN类型选`L2TP over IPSec`，创建即可。\n\n![Network Preferences](/img/vpnmac2.png)\n\n然后在地址栏填服务器地址或域名，下面的账户名称填之前新建的用户名，然后点下面的`认证设置`：\n\n![Network Preferences](/img/vpnmac3.png)\n\n密码中填上面用户的密码，共享密钥填之前设置的预共享密钥，保存并连接即可。\n\n## IPv6\n因为有使用教育网通过IPv6的需求，这里也说一下IPv6的连接方法。\n\n### 移动设备\niOS的应用商店里有OpenVPN的客户端，但由于软件的特殊性，中国应用商店里已经下架了，所以通过什么渠道安装请自己想办法。\n\n如果你的Android设备支持IPv6网络的话，Play Store里也有OpenVPN的客户端下载，也可以搜一个apk自己装。\n\n![OpenVPN](/img/vpnopenvpn.png)\n\n上述设备安装好客户端以后，将之前生成的`.ovpn`文件传到设备中，用OpenVPN打开即可，之后还会需要输入之前设置的用户名密码之类的，这里不再赘述。\n\n### macOS\n因为没有找到Mac上的OpenVPN客户端，所以使用了一个叫做**Tunnelblick**的App，功能类似。\n\n![Tunnelblick](/img/vpntunnel.png)\n\n到[Tunnelblick官网](https://tunnelblick.net/downloads.html)下载后，同样将`.ovpn`文件用它打开就可以了，输入用户名密码后就连上了。\n\n### Windows\n从理论上讲IPv6的VPN用Windows自带的VPN连接就可以（同IPv4），把地址变一下就可以了。如果遇到不能连接的情况也可以试一下OpenVPN的Windows版，去[OpenVPN官网](https://openvpn.net/index.php/open-source/downloads.html)下载即可。","slug":"softether","published":1,"updated":"2017-02-17T06:29:09.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0uf00288mpr7g1zgbl5","content":"<p>虚拟专用网（<strong>VPN</strong>），是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。虚拟私人网络的讯息透过公用的网络架构来传送内联网的网络讯息。它利用已加密的通道协议来达到保密、发送端认证、消息准确性等私人消息安全效果。这种技术可以用不安全的网络来发送可靠、安全的消息。可以用通俗的例子来解释这件事情：</p>\n<blockquote>\n<p>FFF国的小张和小王是<em>异地双性恋</em>，他们之间经常互通情书。但是FFF国有一个规定，就是异性青少年不能互通信件，否则就要被双双烧死。于是这对情侣就拜托他们的父亲老张和<del>隔壁</del>老王代为收发信件：小张和小王写完信后各自放在信封中封好，信封上分别写上<code>小王亲启</code>和<code>小张亲启</code>，然后分别交给他们的父亲，老张和老王把信封又装进一个大信封中，上面分别写上<code>老王收</code>和<code>老张收</code>再寄出。自然之后老张和老王会收到信件，拆开大信封后发现不是给自己的就转交给自己的孩子，这对情侣就这样达到了通信目的。</p>\n</blockquote>\n<p>看了VPN的原理，我们很容易想到可以用这种方式来科学上网。我们虽然不能直接和被墙的网站通讯，但我们可以通过VPN的方式躲过GFW的追杀。</p>\n<p><a href=\"https://www.softether.org/\" target=\"_blank\" rel=\"external\">SoftEther VPN</a>是由日本筑波大学的<a href=\"http://dnobori.cs.tsukuba.ac.jp/en/\" target=\"_blank\" rel=\"external\">登 大遊</a>在硕士论文中提出的开源、跨平台、多重协议的虚拟专用网方案，是专门为穿过防火墙而设计的。我们可以用它在自己的VPS上搭建一个简单的VPN来使用。</p>\n<h1 id=\"服务器端\"><a href=\"#服务器端\" class=\"headerlink\" title=\"服务器端\"></a>服务器端</h1><h2 id=\"下载解压\"><a href=\"#下载解压\" class=\"headerlink\" title=\"下载解压\"></a>下载解压</h2><p>首先要在服务器上下载并解压安装文件，一定注意是32位还是64位（可通过<code>uname -a</code>命令查看）。<br>32位系统：</p>\n<pre><code>wget http://jp.softether-download.com/files/softether/v4.20-9608-rtm-2016.04.17-tree/Linux/SoftEther_VPN_Server/32bit_-_Intel_x86/softether-vpnserver-v4.20-9608-rtm-2016.04.17-linux-x86-32bit.tar.gz\n</code></pre><p>64位系统：</p>\n<pre><code>wget http://jp.softether-download.com/files/softether/v4.20-9608-rtm-2016.04.17-tree/Linux/SoftEther_VPN_Server/64bit_-_Intel_x64_or_AMD64/softether-vpnserver-v4.20-9608-rtm-2016.04.17-linux-x64-64bit.tar.gz\n</code></pre><p>以上为截止发布本文时的最新版本，建议从<a href=\"http://www.softether-download.com/en.aspx?product=softether\" target=\"_blank\" rel=\"external\">SoftEther官方网站</a>获取最新版本。</p>\n<h2 id=\"安装启动\"><a href=\"#安装启动\" class=\"headerlink\" title=\"安装启动\"></a>安装启动</h2><p>先解压（建议装到<code>/usr/local</code>下）：</p>\n<pre><code>tar -zxvf softether-vpnserver-*.tar.gz\n</code></pre><p><code>cd vpnserver</code>进入到解压目录下并启动安装脚本<code>./.install.sh</code>：</p>\n<blockquote>\n<hr>\n<p>SoftEther VPN Server (Ver 4.20, Build 9608, Intel x64 / AMD64) for Linux Install Utility<br>Copyright (c) SoftEther Project at University of Tsukuba, Japan. All Rights Reserved.</p>\n<hr>\n<p>Do you want to read the License Agreement for this software ?</p>\n<ol>\n<li>Yes</li>\n<li>No</li>\n</ol>\n<p>Please choose one of above number:</p>\n</blockquote>\n<p>认识不认识字至少读一读，之后会出现一堆License，然后问你看懂了没：</p>\n<blockquote>\n<p>Did you read and understand the License Agreement ?<br>(If you couldn’t read above text, Please read ‘ReadMeFirst_License.txt’ file with any text editor.)</p>\n<ol>\n<li>Yes</li>\n<li>No</li>\n</ol>\n<p>Please choose one of above number:</p>\n</blockquote>\n<p>当然没看懂也要说看懂了，然后又问你同不同意：</p>\n<blockquote>\n<p>Did you agree the License Agreement ?</p>\n<ol>\n<li>Agree</li>\n<li>Do Not Agree</li>\n</ol>\n<p>Please choose one of above number:</p>\n</blockquote>\n<p>不同意就不要用了。如果提示不识别某些命令比如<code>gcc</code>，另行安装即可。如果没有异常则说明安装成功，执行<code>./vpnserver start</code>启动服务。同理<code>./vpnserver stop</code>停止服务。</p>\n<p>在CentOS7以后可以用systemd启动vpnserver，先新建启动脚本<code>/etc/systemd/system/vpnserver.service</code>：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">[Unit]</span></div><div class=\"line\"><span class=\"attr\">Description</span>=SoftEther VPN Server</div><div class=\"line\"><span class=\"attr\">After</span>=network.target</div><div class=\"line\"><span class=\"section\"></span></div><div class=\"line\">[Service]</div><div class=\"line\"><span class=\"attr\">Type</span>=forking</div><div class=\"line\"><span class=\"attr\">ExecStart</span>=/usr/local/vpnserver/vpnserver start</div><div class=\"line\"><span class=\"attr\">ExecStop</span>=/usr/local/vpnserver/vpnserver stop</div><div class=\"line\"><span class=\"section\"></span></div><div class=\"line\">[Install]</div><div class=\"line\"><span class=\"attr\">WantedBy</span>=multi-user.target</div></pre></td></tr></table></figure>\n<p>然后就可以通过<code>systemctl start vpnserver</code>启动了，并通过<code>systemctl enable vpnserver</code>设置开机自启。</p>\n<h2 id=\"设置密码\"><a href=\"#设置密码\" class=\"headerlink\" title=\"设置密码\"></a>设置密码</h2><p>启动成功后我们需要设置远程登录密码以便本地管理服务。运行<code>./vpncmd</code>进入VPN的命令行：</p>\n<blockquote>\n<p>vpncmd command - SoftEther VPN Command Line Management Utility<br>SoftEther VPN Command Line Management Utility (vpncmd command)<br>Version 4.20 Build 9608   (English)<br>Compiled 2016/04/17 21:59:35 by yagi at pc30<br>Copyright (c) SoftEther VPN Project. All Rights Reserved.</p>\n<p>By using vpncmd program, the following can be achieved.</p>\n<ol>\n<li>Management of VPN Server or VPN Bridge</li>\n<li>Management of VPN Client</li>\n<li>Use of VPN Tools (certificate creation and Network Traffic Speed Test Tool)</li>\n</ol>\n<p>Select 1, 2 or 3:</p>\n</blockquote>\n<p>这里我们选择1，然后出现：</p>\n<blockquote>\n<p>Specify the host name or IP address of the computer that the destination VPN Server or VPN Bridge is operating on.<br>By specifying according to the format ‘host name:port number’, you can also specify the port number.<br>(When the port number is unspecified, 443 is used.)<br>If nothing is input and the Enter key is pressed, the connection will be made to the port number 8888 of localhost (this computer).<br>Hostname of IP Address of Destination:</p>\n</blockquote>\n<p>这里需要选择地址和端口。由于这台VPS我搭了一个网站，用了SSL占用了443端口，所以默认的443端口是用不了了，所以一定要改。我改用了5555端口，所以在这里输入<code>localhost:5555</code>，然后出现：</p>\n<blockquote>\n<p>If connecting to the server by Virtual Hub Admin Mode, please input the Virtual Hub name.<br>If connecting by server admin mode, please press Enter without inputting anything.<br>Specify Virtual Hub Name:</p>\n</blockquote>\n<p>这里就是指定一个虚拟HUB名字，用默认的直接回车就行。</p>\n<blockquote>\n<p>Connection has been established with VPN Server “localhost” (port 5555).</p>\n<p>You have administrator privileges for the entire VPN Server.</p>\n<p>VPN Server&gt;</p>\n</blockquote>\n<p>这时我们需要输入<code>ServerPasswordSet</code>命令设置远程管理密码，确认密码后就可以通过Windows版的<code>SoftEther VPN Server Manager</code>远程管理了。</p>\n<h1 id=\"VPN管理\"><a href=\"#VPN管理\" class=\"headerlink\" title=\"VPN管理\"></a>VPN管理</h1><p>首先下载并安装<a href=\"http://softether-download.com/en.aspx\" target=\"_blank\" rel=\"external\">SoftEther VPN Server Manager</a>（居然最近移植了Mac版），其实只用到了管理工具：</p>\n<p><img src=\"/img/vpnsetup.png\" alt=\"Setup Wizard\"></p>\n<p>安装之后运行它：</p>\n<p><img src=\"/img/vpnnew.png\" alt=\"Server Manager\"></p>\n<p>在这里点<code>新建</code>：</p>\n<p><img src=\"/img/vpnset.png\" alt=\"New Connection Setting\"></p>\n<p><code>Host Name</code>填服务器的地址或域名，端口如果之前改过了在这也记得改过来，右下角的密码填之前设置过的密码。新建完成后<code>Connect</code>就会弹出<code>Easy Setup</code>窗口（如果提示连不上请检查一下服务器的防火墙设置）：</p>\n<p><img src=\"/img/vpneasy.png\" alt=\"Easy Setup\"></p>\n<p>这里在第一个<code>远程连接</code>挑钩然后下一步即可，虚拟HUB名像之前一样默认就好。</p>\n<p>然后会弹出一个<code>动态DNS功能</code>的窗口，由于不能确定它给的域名是不是被墙了，我们就不去用它，把这个窗口关了就行了。</p>\n<p>之后会有一个协议设置的窗口：</p>\n<p><img src=\"/img/vpnl2tp.png\" alt=\"IPsec/L2TP/EtherIP/L2TPv3 Server Settings\"></p>\n<p>这里把<code>启用L2TP</code>挑上钩，下面设置一个<code>IPsec预共享密钥</code>就行了。</p>\n<p>之后又会弹出一个<code>VPN Azure Cloud</code>服务的窗口，感觉没什么用，禁用了就行了。即使有用以后也可以再启用。</p>\n<p>接下来要新建用户：</p>\n<p><img src=\"/img/vpnuser.png\" alt=\"Create New User\"></p>\n<p>其中用户名是必填的，验证类型选密码验证就行，然后在右侧设置用户密码。</p>\n<p><img src=\"/img/vpnmanager.png\" alt=\"Server Manager\"></p>\n<p>之后回到管理界面，点<code>管理虚拟HUB</code>：</p>\n<p><img src=\"/img/vpnhub.png\" alt=\"Virtual Hub\"></p>\n<p>这里也可以继续添加新用户。点<code>虚拟NAT和虚拟DHCP服务器</code>，弹出窗口：</p>\n<p><img src=\"/img/vpnvirtual.png\" alt=\"Virtual NAT &amp; Virtual DHCP\"></p>\n<p>在里面<code>启用SecureNAT</code>并点<code>SecureNAT配置</code>：</p>\n<p><img src=\"/img/vpnnat.png\" alt=\"SecureNAT Configration\"></p>\n<p>注意DNS要改为<code>8.8.8.8</code>和<code>8.8.4.4</code>。这里就算配置完毕。然后顺便生成一下<strong>OpenVPN</strong>的配置文件，点<code>OpenVPN / MS-SSTP Setting</code>：</p>\n<p><img src=\"/img/vpnopen.png\" alt=\"Server Manager\"></p>\n<p>然后点击新窗口中部的按钮生成配置文件：</p>\n<p><img src=\"/img/vpnovpn.png\" alt=\"OpenVPN / MS-SSTP Setting\"></p>\n<p>打开导出的压缩包会看到里面有两个<code>.ovpn</code>文件，一般我们要用到<code>*_openvpn_remote_access_l3.ovpn</code>这个文件，因为我们是通过IPv4地址管理的VPN，所以这个配置文件里的<code>remote</code>一项会是IPv4地址，如果需要使用IPv6的VPN就将其替换为相应的IPv6地址即可。</p>\n<h1 id=\"本地连接\"><a href=\"#本地连接\" class=\"headerlink\" title=\"本地连接\"></a>本地连接</h1><h2 id=\"IPv4\"><a href=\"#IPv4\" class=\"headerlink\" title=\"IPv4\"></a>IPv4</h2><p>这里只说电脑设备，移动的设备的话配置方法类似。</p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>首先到<code>网络和共享中心</code>里新建一个网络连接：</p>\n<p><img src=\"/img/vpnwin1.png\" alt=\"Set Up a Connection or Network\"></p>\n<p>选择<code>连接到工作区</code>    。</p>\n<p><img src=\"/img/vpnwin2.png\" alt=\"Connect to a Workplace\"></p>\n<p>这里当然要选VPN咯。</p>\n<p><img src=\"/img/vpnwin3.png\" alt=\"Connect to a Workplace\"></p>\n<p>然后在地址栏里填上服务器地址或域名。配置完成后打开<code>更改适配器设置</code>：</p>\n<p><img src=\"/img/vpnwin4.png\" alt=\"Network Connections\"></p>\n<p>打开VPN连接的属性：</p>\n<p><img src=\"/img/vpnwin5.png\" alt=\"Properties\"></p>\n<p>在<code>安全</code>选项卡里将<code>VPN类型</code>改为<code>L2TP</code>，然后点高级设置：</p>\n<p><img src=\"/img/vpnwin6.png\" alt=\"Advanced Properties\"></p>\n<p>在里面选上使用预共享密钥并把之前设置的密钥填进去。</p>\n<p><img src=\"/img/vpnwin7.png\" alt=\"Sign in\"></p>\n<p>之后在VPN连接里把用户名和密码填进去就可以连上了。</p>\n<h3 id=\"Mac-OS-X\"><a href=\"#Mac-OS-X\" class=\"headerlink\" title=\"Mac OS X\"></a>Mac OS X</h3><p>在网络配置里新建网络连接：</p>\n<p><img src=\"/img/vpnmac1.png\" alt=\"Network Preferences\"></p>\n<p>接口选<code>VPN</code>，VPN类型选<code>L2TP over IPSec</code>，创建即可。</p>\n<p><img src=\"/img/vpnmac2.png\" alt=\"Network Preferences\"></p>\n<p>然后在地址栏填服务器地址或域名，下面的账户名称填之前新建的用户名，然后点下面的<code>认证设置</code>：</p>\n<p><img src=\"/img/vpnmac3.png\" alt=\"Network Preferences\"></p>\n<p>密码中填上面用户的密码，共享密钥填之前设置的预共享密钥，保存并连接即可。</p>\n<h2 id=\"IPv6\"><a href=\"#IPv6\" class=\"headerlink\" title=\"IPv6\"></a>IPv6</h2><p>因为有使用教育网通过IPv6的需求，这里也说一下IPv6的连接方法。</p>\n<h3 id=\"移动设备\"><a href=\"#移动设备\" class=\"headerlink\" title=\"移动设备\"></a>移动设备</h3><p>iOS的应用商店里有OpenVPN的客户端，但由于软件的特殊性，中国应用商店里已经下架了，所以通过什么渠道安装请自己想办法。</p>\n<p>如果你的Android设备支持IPv6网络的话，Play Store里也有OpenVPN的客户端下载，也可以搜一个apk自己装。</p>\n<p><img src=\"/img/vpnopenvpn.png\" alt=\"OpenVPN\"></p>\n<p>上述设备安装好客户端以后，将之前生成的<code>.ovpn</code>文件传到设备中，用OpenVPN打开即可，之后还会需要输入之前设置的用户名密码之类的，这里不再赘述。</p>\n<h3 id=\"macOS\"><a href=\"#macOS\" class=\"headerlink\" title=\"macOS\"></a>macOS</h3><p>因为没有找到Mac上的OpenVPN客户端，所以使用了一个叫做<strong>Tunnelblick</strong>的App，功能类似。</p>\n<p><img src=\"/img/vpntunnel.png\" alt=\"Tunnelblick\"></p>\n<p>到<a href=\"https://tunnelblick.net/downloads.html\" target=\"_blank\" rel=\"external\">Tunnelblick官网</a>下载后，同样将<code>.ovpn</code>文件用它打开就可以了，输入用户名密码后就连上了。</p>\n<h3 id=\"Windows-1\"><a href=\"#Windows-1\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>从理论上讲IPv6的VPN用Windows自带的VPN连接就可以（同IPv4），把地址变一下就可以了。如果遇到不能连接的情况也可以试一下OpenVPN的Windows版，去<a href=\"https://openvpn.net/index.php/open-source/downloads.html\" target=\"_blank\" rel=\"external\">OpenVPN官网</a>下载即可。</p>\n","excerpt":"","more":"<p>虚拟专用网（<strong>VPN</strong>），是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。虚拟私人网络的讯息透过公用的网络架构来传送内联网的网络讯息。它利用已加密的通道协议来达到保密、发送端认证、消息准确性等私人消息安全效果。这种技术可以用不安全的网络来发送可靠、安全的消息。可以用通俗的例子来解释这件事情：</p>\n<blockquote>\n<p>FFF国的小张和小王是<em>异地双性恋</em>，他们之间经常互通情书。但是FFF国有一个规定，就是异性青少年不能互通信件，否则就要被双双烧死。于是这对情侣就拜托他们的父亲老张和<del>隔壁</del>老王代为收发信件：小张和小王写完信后各自放在信封中封好，信封上分别写上<code>小王亲启</code>和<code>小张亲启</code>，然后分别交给他们的父亲，老张和老王把信封又装进一个大信封中，上面分别写上<code>老王收</code>和<code>老张收</code>再寄出。自然之后老张和老王会收到信件，拆开大信封后发现不是给自己的就转交给自己的孩子，这对情侣就这样达到了通信目的。</p>\n</blockquote>\n<p>看了VPN的原理，我们很容易想到可以用这种方式来科学上网。我们虽然不能直接和被墙的网站通讯，但我们可以通过VPN的方式躲过GFW的追杀。</p>\n<p><a href=\"https://www.softether.org/\">SoftEther VPN</a>是由日本筑波大学的<a href=\"http://dnobori.cs.tsukuba.ac.jp/en/\">登 大遊</a>在硕士论文中提出的开源、跨平台、多重协议的虚拟专用网方案，是专门为穿过防火墙而设计的。我们可以用它在自己的VPS上搭建一个简单的VPN来使用。</p>\n<h1 id=\"服务器端\"><a href=\"#服务器端\" class=\"headerlink\" title=\"服务器端\"></a>服务器端</h1><h2 id=\"下载解压\"><a href=\"#下载解压\" class=\"headerlink\" title=\"下载解压\"></a>下载解压</h2><p>首先要在服务器上下载并解压安装文件，一定注意是32位还是64位（可通过<code>uname -a</code>命令查看）。<br>32位系统：</p>\n<pre><code>wget http://jp.softether-download.com/files/softether/v4.20-9608-rtm-2016.04.17-tree/Linux/SoftEther_VPN_Server/32bit_-_Intel_x86/softether-vpnserver-v4.20-9608-rtm-2016.04.17-linux-x86-32bit.tar.gz\n</code></pre><p>64位系统：</p>\n<pre><code>wget http://jp.softether-download.com/files/softether/v4.20-9608-rtm-2016.04.17-tree/Linux/SoftEther_VPN_Server/64bit_-_Intel_x64_or_AMD64/softether-vpnserver-v4.20-9608-rtm-2016.04.17-linux-x64-64bit.tar.gz\n</code></pre><p>以上为截止发布本文时的最新版本，建议从<a href=\"http://www.softether-download.com/en.aspx?product=softether\">SoftEther官方网站</a>获取最新版本。</p>\n<h2 id=\"安装启动\"><a href=\"#安装启动\" class=\"headerlink\" title=\"安装启动\"></a>安装启动</h2><p>先解压（建议装到<code>/usr/local</code>下）：</p>\n<pre><code>tar -zxvf softether-vpnserver-*.tar.gz\n</code></pre><p><code>cd vpnserver</code>进入到解压目录下并启动安装脚本<code>./.install.sh</code>：</p>\n<blockquote>\n<hr>\n<p>SoftEther VPN Server (Ver 4.20, Build 9608, Intel x64 / AMD64) for Linux Install Utility<br>Copyright (c) SoftEther Project at University of Tsukuba, Japan. All Rights Reserved.</p>\n<hr>\n<p>Do you want to read the License Agreement for this software ?</p>\n<ol>\n<li>Yes</li>\n<li>No</li>\n</ol>\n<p>Please choose one of above number:</p>\n</blockquote>\n<p>认识不认识字至少读一读，之后会出现一堆License，然后问你看懂了没：</p>\n<blockquote>\n<p>Did you read and understand the License Agreement ?<br>(If you couldn’t read above text, Please read ‘ReadMeFirst_License.txt’ file with any text editor.)</p>\n<ol>\n<li>Yes</li>\n<li>No</li>\n</ol>\n<p>Please choose one of above number:</p>\n</blockquote>\n<p>当然没看懂也要说看懂了，然后又问你同不同意：</p>\n<blockquote>\n<p>Did you agree the License Agreement ?</p>\n<ol>\n<li>Agree</li>\n<li>Do Not Agree</li>\n</ol>\n<p>Please choose one of above number:</p>\n</blockquote>\n<p>不同意就不要用了。如果提示不识别某些命令比如<code>gcc</code>，另行安装即可。如果没有异常则说明安装成功，执行<code>./vpnserver start</code>启动服务。同理<code>./vpnserver stop</code>停止服务。</p>\n<p>在CentOS7以后可以用systemd启动vpnserver，先新建启动脚本<code>/etc/systemd/system/vpnserver.service</code>：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"section\">[Unit]</span></div><div class=\"line\"><span class=\"attr\">Description</span>=SoftEther VPN Server</div><div class=\"line\"><span class=\"attr\">After</span>=network.target</div><div class=\"line\"><span class=\"section\"></div><div class=\"line\">[Service]</span></div><div class=\"line\"><span class=\"attr\">Type</span>=forking</div><div class=\"line\"><span class=\"attr\">ExecStart</span>=/usr/local/vpnserver/vpnserver start</div><div class=\"line\"><span class=\"attr\">ExecStop</span>=/usr/local/vpnserver/vpnserver stop</div><div class=\"line\"><span class=\"section\"></div><div class=\"line\">[Install]</span></div><div class=\"line\"><span class=\"attr\">WantedBy</span>=multi-user.target</div></pre></td></tr></table></figure>\n<p>然后就可以通过<code>systemctl start vpnserver</code>启动了，并通过<code>systemctl enable vpnserver</code>设置开机自启。</p>\n<h2 id=\"设置密码\"><a href=\"#设置密码\" class=\"headerlink\" title=\"设置密码\"></a>设置密码</h2><p>启动成功后我们需要设置远程登录密码以便本地管理服务。运行<code>./vpncmd</code>进入VPN的命令行：</p>\n<blockquote>\n<p>vpncmd command - SoftEther VPN Command Line Management Utility<br>SoftEther VPN Command Line Management Utility (vpncmd command)<br>Version 4.20 Build 9608   (English)<br>Compiled 2016/04/17 21:59:35 by yagi at pc30<br>Copyright (c) SoftEther VPN Project. All Rights Reserved.</p>\n<p>By using vpncmd program, the following can be achieved.</p>\n<ol>\n<li>Management of VPN Server or VPN Bridge</li>\n<li>Management of VPN Client</li>\n<li>Use of VPN Tools (certificate creation and Network Traffic Speed Test Tool)</li>\n</ol>\n<p>Select 1, 2 or 3:</p>\n</blockquote>\n<p>这里我们选择1，然后出现：</p>\n<blockquote>\n<p>Specify the host name or IP address of the computer that the destination VPN Server or VPN Bridge is operating on.<br>By specifying according to the format ‘host name:port number’, you can also specify the port number.<br>(When the port number is unspecified, 443 is used.)<br>If nothing is input and the Enter key is pressed, the connection will be made to the port number 8888 of localhost (this computer).<br>Hostname of IP Address of Destination:</p>\n</blockquote>\n<p>这里需要选择地址和端口。由于这台VPS我搭了一个网站，用了SSL占用了443端口，所以默认的443端口是用不了了，所以一定要改。我改用了5555端口，所以在这里输入<code>localhost:5555</code>，然后出现：</p>\n<blockquote>\n<p>If connecting to the server by Virtual Hub Admin Mode, please input the Virtual Hub name.<br>If connecting by server admin mode, please press Enter without inputting anything.<br>Specify Virtual Hub Name:</p>\n</blockquote>\n<p>这里就是指定一个虚拟HUB名字，用默认的直接回车就行。</p>\n<blockquote>\n<p>Connection has been established with VPN Server “localhost” (port 5555).</p>\n<p>You have administrator privileges for the entire VPN Server.</p>\n<p>VPN Server&gt;</p>\n</blockquote>\n<p>这时我们需要输入<code>ServerPasswordSet</code>命令设置远程管理密码，确认密码后就可以通过Windows版的<code>SoftEther VPN Server Manager</code>远程管理了。</p>\n<h1 id=\"VPN管理\"><a href=\"#VPN管理\" class=\"headerlink\" title=\"VPN管理\"></a>VPN管理</h1><p>首先下载并安装<a href=\"http://softether-download.com/en.aspx\">SoftEther VPN Server Manager</a>（居然最近移植了Mac版），其实只用到了管理工具：</p>\n<p><img src=\"/img/vpnsetup.png\" alt=\"Setup Wizard\"></p>\n<p>安装之后运行它：</p>\n<p><img src=\"/img/vpnnew.png\" alt=\"Server Manager\"></p>\n<p>在这里点<code>新建</code>：</p>\n<p><img src=\"/img/vpnset.png\" alt=\"New Connection Setting\"></p>\n<p><code>Host Name</code>填服务器的地址或域名，端口如果之前改过了在这也记得改过来，右下角的密码填之前设置过的密码。新建完成后<code>Connect</code>就会弹出<code>Easy Setup</code>窗口（如果提示连不上请检查一下服务器的防火墙设置）：</p>\n<p><img src=\"/img/vpneasy.png\" alt=\"Easy Setup\"></p>\n<p>这里在第一个<code>远程连接</code>挑钩然后下一步即可，虚拟HUB名像之前一样默认就好。</p>\n<p>然后会弹出一个<code>动态DNS功能</code>的窗口，由于不能确定它给的域名是不是被墙了，我们就不去用它，把这个窗口关了就行了。</p>\n<p>之后会有一个协议设置的窗口：</p>\n<p><img src=\"/img/vpnl2tp.png\" alt=\"IPsec/L2TP/EtherIP/L2TPv3 Server Settings\"></p>\n<p>这里把<code>启用L2TP</code>挑上钩，下面设置一个<code>IPsec预共享密钥</code>就行了。</p>\n<p>之后又会弹出一个<code>VPN Azure Cloud</code>服务的窗口，感觉没什么用，禁用了就行了。即使有用以后也可以再启用。</p>\n<p>接下来要新建用户：</p>\n<p><img src=\"/img/vpnuser.png\" alt=\"Create New User\"></p>\n<p>其中用户名是必填的，验证类型选密码验证就行，然后在右侧设置用户密码。</p>\n<p><img src=\"/img/vpnmanager.png\" alt=\"Server Manager\"></p>\n<p>之后回到管理界面，点<code>管理虚拟HUB</code>：</p>\n<p><img src=\"/img/vpnhub.png\" alt=\"Virtual Hub\"></p>\n<p>这里也可以继续添加新用户。点<code>虚拟NAT和虚拟DHCP服务器</code>，弹出窗口：</p>\n<p><img src=\"/img/vpnvirtual.png\" alt=\"Virtual NAT &amp; Virtual DHCP\"></p>\n<p>在里面<code>启用SecureNAT</code>并点<code>SecureNAT配置</code>：</p>\n<p><img src=\"/img/vpnnat.png\" alt=\"SecureNAT Configration\"></p>\n<p>注意DNS要改为<code>8.8.8.8</code>和<code>8.8.4.4</code>。这里就算配置完毕。然后顺便生成一下<strong>OpenVPN</strong>的配置文件，点<code>OpenVPN / MS-SSTP Setting</code>：</p>\n<p><img src=\"/img/vpnopen.png\" alt=\"Server Manager\"></p>\n<p>然后点击新窗口中部的按钮生成配置文件：</p>\n<p><img src=\"/img/vpnovpn.png\" alt=\"OpenVPN / MS-SSTP Setting\"></p>\n<p>打开导出的压缩包会看到里面有两个<code>.ovpn</code>文件，一般我们要用到<code>*_openvpn_remote_access_l3.ovpn</code>这个文件，因为我们是通过IPv4地址管理的VPN，所以这个配置文件里的<code>remote</code>一项会是IPv4地址，如果需要使用IPv6的VPN就将其替换为相应的IPv6地址即可。</p>\n<h1 id=\"本地连接\"><a href=\"#本地连接\" class=\"headerlink\" title=\"本地连接\"></a>本地连接</h1><h2 id=\"IPv4\"><a href=\"#IPv4\" class=\"headerlink\" title=\"IPv4\"></a>IPv4</h2><p>这里只说电脑设备，移动的设备的话配置方法类似。</p>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>首先到<code>网络和共享中心</code>里新建一个网络连接：</p>\n<p><img src=\"/img/vpnwin1.png\" alt=\"Set Up a Connection or Network\"></p>\n<p>选择<code>连接到工作区</code>    。</p>\n<p><img src=\"/img/vpnwin2.png\" alt=\"Connect to a Workplace\"></p>\n<p>这里当然要选VPN咯。</p>\n<p><img src=\"/img/vpnwin3.png\" alt=\"Connect to a Workplace\"></p>\n<p>然后在地址栏里填上服务器地址或域名。配置完成后打开<code>更改适配器设置</code>：</p>\n<p><img src=\"/img/vpnwin4.png\" alt=\"Network Connections\"></p>\n<p>打开VPN连接的属性：</p>\n<p><img src=\"/img/vpnwin5.png\" alt=\"Properties\"></p>\n<p>在<code>安全</code>选项卡里将<code>VPN类型</code>改为<code>L2TP</code>，然后点高级设置：</p>\n<p><img src=\"/img/vpnwin6.png\" alt=\"Advanced Properties\"></p>\n<p>在里面选上使用预共享密钥并把之前设置的密钥填进去。</p>\n<p><img src=\"/img/vpnwin7.png\" alt=\"Sign in\"></p>\n<p>之后在VPN连接里把用户名和密码填进去就可以连上了。</p>\n<h3 id=\"Mac-OS-X\"><a href=\"#Mac-OS-X\" class=\"headerlink\" title=\"Mac OS X\"></a>Mac OS X</h3><p>在网络配置里新建网络连接：</p>\n<p><img src=\"/img/vpnmac1.png\" alt=\"Network Preferences\"></p>\n<p>接口选<code>VPN</code>，VPN类型选<code>L2TP over IPSec</code>，创建即可。</p>\n<p><img src=\"/img/vpnmac2.png\" alt=\"Network Preferences\"></p>\n<p>然后在地址栏填服务器地址或域名，下面的账户名称填之前新建的用户名，然后点下面的<code>认证设置</code>：</p>\n<p><img src=\"/img/vpnmac3.png\" alt=\"Network Preferences\"></p>\n<p>密码中填上面用户的密码，共享密钥填之前设置的预共享密钥，保存并连接即可。</p>\n<h2 id=\"IPv6\"><a href=\"#IPv6\" class=\"headerlink\" title=\"IPv6\"></a>IPv6</h2><p>因为有使用教育网通过IPv6的需求，这里也说一下IPv6的连接方法。</p>\n<h3 id=\"移动设备\"><a href=\"#移动设备\" class=\"headerlink\" title=\"移动设备\"></a>移动设备</h3><p>iOS的应用商店里有OpenVPN的客户端，但由于软件的特殊性，中国应用商店里已经下架了，所以通过什么渠道安装请自己想办法。</p>\n<p>如果你的Android设备支持IPv6网络的话，Play Store里也有OpenVPN的客户端下载，也可以搜一个apk自己装。</p>\n<p><img src=\"/img/vpnopenvpn.png\" alt=\"OpenVPN\"></p>\n<p>上述设备安装好客户端以后，将之前生成的<code>.ovpn</code>文件传到设备中，用OpenVPN打开即可，之后还会需要输入之前设置的用户名密码之类的，这里不再赘述。</p>\n<h3 id=\"macOS\"><a href=\"#macOS\" class=\"headerlink\" title=\"macOS\"></a>macOS</h3><p>因为没有找到Mac上的OpenVPN客户端，所以使用了一个叫做<strong>Tunnelblick</strong>的App，功能类似。</p>\n<p><img src=\"/img/vpntunnel.png\" alt=\"Tunnelblick\"></p>\n<p>到<a href=\"https://tunnelblick.net/downloads.html\">Tunnelblick官网</a>下载后，同样将<code>.ovpn</code>文件用它打开就可以了，输入用户名密码后就连上了。</p>\n<h3 id=\"Windows-1\"><a href=\"#Windows-1\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>从理论上讲IPv6的VPN用Windows自带的VPN连接就可以（同IPv4），把地址变一下就可以了。如果遇到不能连接的情况也可以试一下OpenVPN的Windows版，去<a href=\"https://openvpn.net/index.php/open-source/downloads.html\">OpenVPN官网</a>下载即可。</p>\n"},{"title":"Mac上进行Verilog仿真","date":"2016-04-11T13:11:11.000Z","photos":["/img/vlbanner.png"],"_content":"这学期上VLSI系统设计这门课，同时顺带着把计算机设计与调试的课程设计做了。往FPGA上烧写之前要用Verilog进行仿真，在实验室直接用机房的ModelSim仿真了，但是课下在虚拟机上做有诸多的不便，于是就研究了一下在Mac下写Verilog的方法。\n\n# 配置Sublime代码高亮\nSublime Text默认是不支持Verilog代码高亮的，可以通过安装插件增加对其的支持。首先要安装Sublime包管理工具，按``control+` ``打开控制台，并运行以下代码（以Sublime Text 2为例）：\n\n```py\nimport urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')\n```\n\n安装完后重启，按`command+shift+P`唤出命令面板，打开`Install Package`包管理工具：\n\n![Install Package](/img/vlinstall.png)\n\n然后查找`Verilog`，将搜到的自动补全和代码高亮插件装上重启就可以了：\n\n![Verilog](/img/vlverilog.png)\n\n# 安装Icarus Verilog\nIcarus Verilog是Verilog硬件描述语言的实现工具之一。该软件以GNU通用公共许可协议发布，是一个自由软件。它支持Verilog对应的的IEEE 1995、IEEE 2001和IEEE 2005三个不同的版本，并对SystemVerilog的部分内容提供支持。\n\n首先保证已经安装了Homebrew，然后通过brew安装：\n\n\tbrew install icarus-verilog\n\t\n# 安装Scansion\nScansion是Mac平台下的一个VCD文件查看工具，可以去[http://www.logicpoet.com/downloads/](http://www.logicpoet.com/downloads/)下载其最新版本并安装。\n\n# 编译仿真\n随便新建一个测试文件叫test.v：\n\n```verilog\nmodule vaddsws( vra, vrb, vrt, sat );\n\ninput  [31 : 0] vra;\ninput  [31 : 0] vrb;\noutput [31 : 0] vrt;\noutput          sat;\n\nwire   [31 : 0] sum;\nwire   [31 : 0] vrt;\nwire            sat;\n\nassign {sat, sum}\t= vra + vrb;\nassign vrt = (vra[31]^vrb[31]) ? sum : (vra[31]&&vrb[31] ? (sum[31] ? sum : 32'h80000000) : (sum[31] ? 32'h7fffffff : sum));\n\nendmodule\n```\n\n再对其新建testbench文件test_tb.v：\n\n```verilog\n`timescale 1ns/100ps\n`include \"test.v\"\n\nmodule vaddsws_tb;\n\nreg\t[31: 0]\tvra;\nreg\t[31: 0]\tvrb;\nwire\t[31: 0]\tvrt;\nwire\tsat;\n\ninitial\nbegin\n\t$dumpfile(\"test.vcd\");\n\t$dumpvars(0, vaddsws_tb);\n\tassign vra=32'hffffffff;\n\tassign vrb=32'hffffffff;\n\t#100\n\tassign vra=32'h01234567;\n\tassign vrb=32'h76543210;\n\t#100\n\t$finish;\nend\n\nvaddsws add( .vra(vra), .vrb(vrb), .vrt(vrt), .sat(sat) );\n\nendmodule\n```\n\n注意testbench文件的第二行中`include`宏是为了引用前一个文件的模块定义，如果在Windows下用ModelSim时把它注释掉就可以了。第13行是为了生成波形文件以便在Scansion里查看。\n\n源码编辑好后执行以下命令编译执行：\n\n\tiverilog -o test.vvp test_tb.v\n\t./test.vvp\n\t\n生成vcd格式的波形文件用Scansion打开即可（也可以使用命令`open -a Scansion test.vcd`）：\n\n![输出波形](/img/vltest.png)","source":"_posts/verilog.md","raw":"title: Mac上进行Verilog仿真\ndate: 2016-04-11 21:11:11\ntags: [macOS, Verilog]\ncategories: [手帐, 课程]\nphotos: \n\t- /img/vlbanner.png\n---\n这学期上VLSI系统设计这门课，同时顺带着把计算机设计与调试的课程设计做了。往FPGA上烧写之前要用Verilog进行仿真，在实验室直接用机房的ModelSim仿真了，但是课下在虚拟机上做有诸多的不便，于是就研究了一下在Mac下写Verilog的方法。\n\n# 配置Sublime代码高亮\nSublime Text默认是不支持Verilog代码高亮的，可以通过安装插件增加对其的支持。首先要安装Sublime包管理工具，按``control+` ``打开控制台，并运行以下代码（以Sublime Text 2为例）：\n\n```py\nimport urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')\n```\n\n安装完后重启，按`command+shift+P`唤出命令面板，打开`Install Package`包管理工具：\n\n![Install Package](/img/vlinstall.png)\n\n然后查找`Verilog`，将搜到的自动补全和代码高亮插件装上重启就可以了：\n\n![Verilog](/img/vlverilog.png)\n\n# 安装Icarus Verilog\nIcarus Verilog是Verilog硬件描述语言的实现工具之一。该软件以GNU通用公共许可协议发布，是一个自由软件。它支持Verilog对应的的IEEE 1995、IEEE 2001和IEEE 2005三个不同的版本，并对SystemVerilog的部分内容提供支持。\n\n首先保证已经安装了Homebrew，然后通过brew安装：\n\n\tbrew install icarus-verilog\n\t\n# 安装Scansion\nScansion是Mac平台下的一个VCD文件查看工具，可以去[http://www.logicpoet.com/downloads/](http://www.logicpoet.com/downloads/)下载其最新版本并安装。\n\n# 编译仿真\n随便新建一个测试文件叫test.v：\n\n```verilog\nmodule vaddsws( vra, vrb, vrt, sat );\n\ninput  [31 : 0] vra;\ninput  [31 : 0] vrb;\noutput [31 : 0] vrt;\noutput          sat;\n\nwire   [31 : 0] sum;\nwire   [31 : 0] vrt;\nwire            sat;\n\nassign {sat, sum}\t= vra + vrb;\nassign vrt = (vra[31]^vrb[31]) ? sum : (vra[31]&&vrb[31] ? (sum[31] ? sum : 32'h80000000) : (sum[31] ? 32'h7fffffff : sum));\n\nendmodule\n```\n\n再对其新建testbench文件test_tb.v：\n\n```verilog\n`timescale 1ns/100ps\n`include \"test.v\"\n\nmodule vaddsws_tb;\n\nreg\t[31: 0]\tvra;\nreg\t[31: 0]\tvrb;\nwire\t[31: 0]\tvrt;\nwire\tsat;\n\ninitial\nbegin\n\t$dumpfile(\"test.vcd\");\n\t$dumpvars(0, vaddsws_tb);\n\tassign vra=32'hffffffff;\n\tassign vrb=32'hffffffff;\n\t#100\n\tassign vra=32'h01234567;\n\tassign vrb=32'h76543210;\n\t#100\n\t$finish;\nend\n\nvaddsws add( .vra(vra), .vrb(vrb), .vrt(vrt), .sat(sat) );\n\nendmodule\n```\n\n注意testbench文件的第二行中`include`宏是为了引用前一个文件的模块定义，如果在Windows下用ModelSim时把它注释掉就可以了。第13行是为了生成波形文件以便在Scansion里查看。\n\n源码编辑好后执行以下命令编译执行：\n\n\tiverilog -o test.vvp test_tb.v\n\t./test.vvp\n\t\n生成vcd格式的波形文件用Scansion打开即可（也可以使用命令`open -a Scansion test.vcd`）：\n\n![输出波形](/img/vltest.png)","slug":"verilog","published":1,"updated":"2016-11-24T17:06:40.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0ug002b8mprdivsxr9u","content":"<p>这学期上VLSI系统设计这门课，同时顺带着把计算机设计与调试的课程设计做了。往FPGA上烧写之前要用Verilog进行仿真，在实验室直接用机房的ModelSim仿真了，但是课下在虚拟机上做有诸多的不便，于是就研究了一下在Mac下写Verilog的方法。</p>\n<h1 id=\"配置Sublime代码高亮\"><a href=\"#配置Sublime代码高亮\" class=\"headerlink\" title=\"配置Sublime代码高亮\"></a>配置Sublime代码高亮</h1><p>Sublime Text默认是不支持Verilog代码高亮的，可以通过安装插件增加对其的支持。首先要安装Sublime包管理工具，按<code>control+` </code>打开控制台，并运行以下代码（以Sublime Text 2为例）：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib2,os,hashlib; h = <span class=\"string\">'2915d1851351e5ee549c20394736b442'</span> + <span class=\"string\">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(ipp) <span class=\"keyword\">else</span> <span class=\"keyword\">None</span>; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( <span class=\"string\">'http://packagecontrol.io/'</span> + pf.replace(<span class=\"string\">' '</span>, <span class=\"string\">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write(by) <span class=\"keyword\">if</span> dh == h <span class=\"keyword\">else</span> <span class=\"keyword\">None</span>; print(<span class=\"string\">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class=\"keyword\">if</span> dh != h <span class=\"keyword\">else</span> <span class=\"string\">'Please restart Sublime Text to finish installation'</span>)</div></pre></td></tr></table></figure>\n<p>安装完后重启，按<code>command+shift+P</code>唤出命令面板，打开<code>Install Package</code>包管理工具：</p>\n<p><img src=\"/img/vlinstall.png\" alt=\"Install Package\"></p>\n<p>然后查找<code>Verilog</code>，将搜到的自动补全和代码高亮插件装上重启就可以了：</p>\n<p><img src=\"/img/vlverilog.png\" alt=\"Verilog\"></p>\n<h1 id=\"安装Icarus-Verilog\"><a href=\"#安装Icarus-Verilog\" class=\"headerlink\" title=\"安装Icarus Verilog\"></a>安装Icarus Verilog</h1><p>Icarus Verilog是Verilog硬件描述语言的实现工具之一。该软件以GNU通用公共许可协议发布，是一个自由软件。它支持Verilog对应的的IEEE 1995、IEEE 2001和IEEE 2005三个不同的版本，并对SystemVerilog的部分内容提供支持。</p>\n<p>首先保证已经安装了Homebrew，然后通过brew安装：</p>\n<pre><code>brew install icarus-verilog\n</code></pre><h1 id=\"安装Scansion\"><a href=\"#安装Scansion\" class=\"headerlink\" title=\"安装Scansion\"></a>安装Scansion</h1><p>Scansion是Mac平台下的一个VCD文件查看工具，可以去<a href=\"http://www.logicpoet.com/downloads/\" target=\"_blank\" rel=\"external\">http://www.logicpoet.com/downloads/</a>下载其最新版本并安装。</p>\n<h1 id=\"编译仿真\"><a href=\"#编译仿真\" class=\"headerlink\" title=\"编译仿真\"></a>编译仿真</h1><p>随便新建一个测试文件叫test.v：</p>\n<figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">module</span> vaddsws( vra, vrb, vrt, sat );</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">input</span>  [<span class=\"number\">31</span> : <span class=\"number\">0</span>] vra;</div><div class=\"line\"><span class=\"keyword\">input</span>  [<span class=\"number\">31</span> : <span class=\"number\">0</span>] vrb;</div><div class=\"line\"><span class=\"keyword\">output</span> [<span class=\"number\">31</span> : <span class=\"number\">0</span>] vrt;</div><div class=\"line\"><span class=\"keyword\">output</span>          sat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">wire</span>   [<span class=\"number\">31</span> : <span class=\"number\">0</span>] sum;</div><div class=\"line\"><span class=\"keyword\">wire</span>   [<span class=\"number\">31</span> : <span class=\"number\">0</span>] vrt;</div><div class=\"line\"><span class=\"keyword\">wire</span>            sat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">assign</span> &#123;sat, sum&#125;\t= vra + vrb;</div><div class=\"line\"><span class=\"keyword\">assign</span> vrt = (vra[<span class=\"number\">31</span>]^vrb[<span class=\"number\">31</span>]) ? sum : (vra[<span class=\"number\">31</span>]&amp;&amp;vrb[<span class=\"number\">31</span>] ? (sum[<span class=\"number\">31</span>] ? sum : <span class=\"number\">32'h80000000</span>) : (sum[<span class=\"number\">31</span>] ? <span class=\"number\">32'h7fffffff</span> : sum));</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">endmodule</span></div></pre></td></tr></table></figure>\n<p>再对其新建testbench文件test_tb.v：</p>\n<figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">`<span class=\"meta-keyword\">timescale</span> 1ns/100ps</span></div><div class=\"line\"><span class=\"meta\">`<span class=\"meta-keyword\">include</span> \"test.v\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">module</span> vaddsws_tb;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">reg</span>\t[<span class=\"number\">31</span>: <span class=\"number\">0</span>]\tvra;</div><div class=\"line\"><span class=\"keyword\">reg</span>\t[<span class=\"number\">31</span>: <span class=\"number\">0</span>]\tvrb;</div><div class=\"line\"><span class=\"keyword\">wire</span>\t[<span class=\"number\">31</span>: <span class=\"number\">0</span>]\tvrt;</div><div class=\"line\"><span class=\"keyword\">wire</span>\tsat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">initial</span></div><div class=\"line\"><span class=\"keyword\">begin</span></div><div class=\"line\">\t<span class=\"built_in\">$dumpfile</span>(<span class=\"string\">\"test.vcd\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">$dumpvars</span>(<span class=\"number\">0</span>, vaddsws_tb);</div><div class=\"line\">\t<span class=\"keyword\">assign</span> vra=<span class=\"number\">32'hffffffff</span>;</div><div class=\"line\">\t<span class=\"keyword\">assign</span> vrb=<span class=\"number\">32'hffffffff</span>;</div><div class=\"line\">\t#<span class=\"number\">100</span></div><div class=\"line\">\t<span class=\"keyword\">assign</span> vra=<span class=\"number\">32'h01234567</span>;</div><div class=\"line\">\t<span class=\"keyword\">assign</span> vrb=<span class=\"number\">32'h76543210</span>;</div><div class=\"line\">\t#<span class=\"number\">100</span></div><div class=\"line\">\t<span class=\"built_in\">$finish</span>;</div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"></div><div class=\"line\">vaddsws add( <span class=\"variable\">.vra</span>(vra), <span class=\"variable\">.vrb</span>(vrb), <span class=\"variable\">.vrt</span>(vrt), <span class=\"variable\">.sat</span>(sat) );</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">endmodule</span></div></pre></td></tr></table></figure>\n<p>注意testbench文件的第二行中<code>include</code>宏是为了引用前一个文件的模块定义，如果在Windows下用ModelSim时把它注释掉就可以了。第13行是为了生成波形文件以便在Scansion里查看。</p>\n<p>源码编辑好后执行以下命令编译执行：</p>\n<pre><code>iverilog -o test.vvp test_tb.v\n./test.vvp\n</code></pre><p>生成vcd格式的波形文件用Scansion打开即可（也可以使用命令<code>open -a Scansion test.vcd</code>）：</p>\n<p><img src=\"/img/vltest.png\" alt=\"输出波形\"></p>\n","excerpt":"","more":"<p>这学期上VLSI系统设计这门课，同时顺带着把计算机设计与调试的课程设计做了。往FPGA上烧写之前要用Verilog进行仿真，在实验室直接用机房的ModelSim仿真了，但是课下在虚拟机上做有诸多的不便，于是就研究了一下在Mac下写Verilog的方法。</p>\n<h1 id=\"配置Sublime代码高亮\"><a href=\"#配置Sublime代码高亮\" class=\"headerlink\" title=\"配置Sublime代码高亮\"></a>配置Sublime代码高亮</h1><p>Sublime Text默认是不支持Verilog代码高亮的，可以通过安装插件增加对其的支持。首先要安装Sublime包管理工具，按<code>control+` </code>打开控制台，并运行以下代码（以Sublime Text 2为例）：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib2,os,hashlib; h = <span class=\"string\">'2915d1851351e5ee549c20394736b442'</span> + <span class=\"string\">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(ipp) <span class=\"keyword\">else</span> <span class=\"keyword\">None</span>; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( <span class=\"string\">'http://packagecontrol.io/'</span> + pf.replace(<span class=\"string\">' '</span>, <span class=\"string\">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write(by) <span class=\"keyword\">if</span> dh == h <span class=\"keyword\">else</span> <span class=\"keyword\">None</span>; print(<span class=\"string\">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class=\"keyword\">if</span> dh != h <span class=\"keyword\">else</span> <span class=\"string\">'Please restart Sublime Text to finish installation'</span>)</div></pre></td></tr></table></figure>\n<p>安装完后重启，按<code>command+shift+P</code>唤出命令面板，打开<code>Install Package</code>包管理工具：</p>\n<p><img src=\"/img/vlinstall.png\" alt=\"Install Package\"></p>\n<p>然后查找<code>Verilog</code>，将搜到的自动补全和代码高亮插件装上重启就可以了：</p>\n<p><img src=\"/img/vlverilog.png\" alt=\"Verilog\"></p>\n<h1 id=\"安装Icarus-Verilog\"><a href=\"#安装Icarus-Verilog\" class=\"headerlink\" title=\"安装Icarus Verilog\"></a>安装Icarus Verilog</h1><p>Icarus Verilog是Verilog硬件描述语言的实现工具之一。该软件以GNU通用公共许可协议发布，是一个自由软件。它支持Verilog对应的的IEEE 1995、IEEE 2001和IEEE 2005三个不同的版本，并对SystemVerilog的部分内容提供支持。</p>\n<p>首先保证已经安装了Homebrew，然后通过brew安装：</p>\n<pre><code>brew install icarus-verilog\n</code></pre><h1 id=\"安装Scansion\"><a href=\"#安装Scansion\" class=\"headerlink\" title=\"安装Scansion\"></a>安装Scansion</h1><p>Scansion是Mac平台下的一个VCD文件查看工具，可以去<a href=\"http://www.logicpoet.com/downloads/\">http://www.logicpoet.com/downloads/</a>下载其最新版本并安装。</p>\n<h1 id=\"编译仿真\"><a href=\"#编译仿真\" class=\"headerlink\" title=\"编译仿真\"></a>编译仿真</h1><p>随便新建一个测试文件叫test.v：</p>\n<figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">module</span> vaddsws( vra, vrb, vrt, sat );</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">input</span>  [<span class=\"number\">31</span> : <span class=\"number\">0</span>] vra;</div><div class=\"line\"><span class=\"keyword\">input</span>  [<span class=\"number\">31</span> : <span class=\"number\">0</span>] vrb;</div><div class=\"line\"><span class=\"keyword\">output</span> [<span class=\"number\">31</span> : <span class=\"number\">0</span>] vrt;</div><div class=\"line\"><span class=\"keyword\">output</span>          sat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">wire</span>   [<span class=\"number\">31</span> : <span class=\"number\">0</span>] sum;</div><div class=\"line\"><span class=\"keyword\">wire</span>   [<span class=\"number\">31</span> : <span class=\"number\">0</span>] vrt;</div><div class=\"line\"><span class=\"keyword\">wire</span>            sat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">assign</span> &#123;sat, sum&#125;\t= vra + vrb;</div><div class=\"line\"><span class=\"keyword\">assign</span> vrt = (vra[<span class=\"number\">31</span>]^vrb[<span class=\"number\">31</span>]) ? sum : (vra[<span class=\"number\">31</span>]&amp;&amp;vrb[<span class=\"number\">31</span>] ? (sum[<span class=\"number\">31</span>] ? sum : <span class=\"number\">32'h80000000</span>) : (sum[<span class=\"number\">31</span>] ? <span class=\"number\">32'h7fffffff</span> : sum));</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">endmodule</span></div></pre></td></tr></table></figure>\n<p>再对其新建testbench文件test_tb.v：</p>\n<figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">`<span class=\"meta-keyword\">timescale</span> 1ns/100ps</span></div><div class=\"line\"><span class=\"meta\">`<span class=\"meta-keyword\">include</span> \"test.v\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">module</span> vaddsws_tb;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">reg</span>\t[<span class=\"number\">31</span>: <span class=\"number\">0</span>]\tvra;</div><div class=\"line\"><span class=\"keyword\">reg</span>\t[<span class=\"number\">31</span>: <span class=\"number\">0</span>]\tvrb;</div><div class=\"line\"><span class=\"keyword\">wire</span>\t[<span class=\"number\">31</span>: <span class=\"number\">0</span>]\tvrt;</div><div class=\"line\"><span class=\"keyword\">wire</span>\tsat;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">initial</span></div><div class=\"line\"><span class=\"keyword\">begin</span></div><div class=\"line\">\t<span class=\"built_in\">$dumpfile</span>(<span class=\"string\">\"test.vcd\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">$dumpvars</span>(<span class=\"number\">0</span>, vaddsws_tb);</div><div class=\"line\">\t<span class=\"keyword\">assign</span> vra=<span class=\"number\">32'hffffffff</span>;</div><div class=\"line\">\t<span class=\"keyword\">assign</span> vrb=<span class=\"number\">32'hffffffff</span>;</div><div class=\"line\">\t#<span class=\"number\">100</span></div><div class=\"line\">\t<span class=\"keyword\">assign</span> vra=<span class=\"number\">32'h01234567</span>;</div><div class=\"line\">\t<span class=\"keyword\">assign</span> vrb=<span class=\"number\">32'h76543210</span>;</div><div class=\"line\">\t#<span class=\"number\">100</span></div><div class=\"line\">\t<span class=\"built_in\">$finish</span>;</div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"></div><div class=\"line\">vaddsws add( <span class=\"variable\">.vra</span>(vra), <span class=\"variable\">.vrb</span>(vrb), <span class=\"variable\">.vrt</span>(vrt), <span class=\"variable\">.sat</span>(sat) );</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">endmodule</span></div></pre></td></tr></table></figure>\n<p>注意testbench文件的第二行中<code>include</code>宏是为了引用前一个文件的模块定义，如果在Windows下用ModelSim时把它注释掉就可以了。第13行是为了生成波形文件以便在Scansion里查看。</p>\n<p>源码编辑好后执行以下命令编译执行：</p>\n<pre><code>iverilog -o test.vvp test_tb.v\n./test.vvp\n</code></pre><p>生成vcd格式的波形文件用Scansion打开即可（也可以使用命令<code>open -a Scansion test.vcd</code>）：</p>\n<p><img src=\"/img/vltest.png\" alt=\"输出波形\"></p>\n"},{"title":"终端开发终极配置","date":"2016-11-11T13:11:11.000Z","photos":["/img/terbanner.png"],"_content":"终端是每天要用到的工具，所以一定要配置成自己顺手的，才能发挥更高的效率。**iTerm2+zsh+vim**是我目前用过的感觉最强大的配置方案了。\n\n# iTerm2\n[iTerm2](https://www.iterm2.com/)是默认终端的终极替代方案，个性化、热键等方面表现非常出色，兼容性也非常好。\n\n![iTerm2](/img/teriterm.png)\n\n直接到其[官网](https://www.iterm2.com/downloads.html)下载安装即可。\n\n# zsh\n**zsh**在命令补全等很多方面上比bash智能很多，首先切换到zsh：\n\n\tchsh -s /bin/zsh\n\n[oh-my-zsh](http://ohmyz.sh/)是一个管理zsh配置的框架，包含各种插件和主题，可用以下脚本安装：\n\t\n\tsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\t\n![oh-my-zsh](/img/terzsh.png)\n\t\n安装完成后编辑`~/.zshrc`，可以编辑`ZSH_THEME`修改主题，或者编辑`plugins`增加插件，对应的文件分别在`~/.oh-my-zsh/themes`和`~/.oh-my-zsh/plugins`下。\n\n# vim\n[spf13-vim](http://vim.spf13.com/)是vim的终极配置之一，用以下脚本安装：\n\n\tcurl https://j.mp/spf13-vim3 -L > spf13-vim.sh && sh spf13-vim.sh\n\t\n![spf13-vim](/img/tervim.png)\n\n配色文件在`~/.vim/bundle/vim-colorschemes/colors`下，指定名称修改配色：\n\n\techo colorscheme $colorscheme_name  >> ~/.vimrc.local","source":"_posts/terminal.md","raw":"title: 终端开发终极配置\ndate: 2016-11-11 21:11:11\ntags: [macOS, Unix, Linux, shell]\ncategories: [奇技淫巧, ＊nix]\nphotos: \n\t- /img/terbanner.png\n---\n终端是每天要用到的工具，所以一定要配置成自己顺手的，才能发挥更高的效率。**iTerm2+zsh+vim**是我目前用过的感觉最强大的配置方案了。\n\n# iTerm2\n[iTerm2](https://www.iterm2.com/)是默认终端的终极替代方案，个性化、热键等方面表现非常出色，兼容性也非常好。\n\n![iTerm2](/img/teriterm.png)\n\n直接到其[官网](https://www.iterm2.com/downloads.html)下载安装即可。\n\n# zsh\n**zsh**在命令补全等很多方面上比bash智能很多，首先切换到zsh：\n\n\tchsh -s /bin/zsh\n\n[oh-my-zsh](http://ohmyz.sh/)是一个管理zsh配置的框架，包含各种插件和主题，可用以下脚本安装：\n\t\n\tsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\t\n![oh-my-zsh](/img/terzsh.png)\n\t\n安装完成后编辑`~/.zshrc`，可以编辑`ZSH_THEME`修改主题，或者编辑`plugins`增加插件，对应的文件分别在`~/.oh-my-zsh/themes`和`~/.oh-my-zsh/plugins`下。\n\n# vim\n[spf13-vim](http://vim.spf13.com/)是vim的终极配置之一，用以下脚本安装：\n\n\tcurl https://j.mp/spf13-vim3 -L > spf13-vim.sh && sh spf13-vim.sh\n\t\n![spf13-vim](/img/tervim.png)\n\n配色文件在`~/.vim/bundle/vim-colorschemes/colors`下，指定名称修改配色：\n\n\techo colorscheme $colorscheme_name  >> ~/.vimrc.local","slug":"terminal","published":1,"updated":"2017-01-09T07:46:56.000Z","comments":1,"layout":"post","link":"","_id":"cizmvz0ui002g8mprxuyooacd","content":"<p>终端是每天要用到的工具，所以一定要配置成自己顺手的，才能发挥更高的效率。<strong>iTerm2+zsh+vim</strong>是我目前用过的感觉最强大的配置方案了。</p>\n<h1 id=\"iTerm2\"><a href=\"#iTerm2\" class=\"headerlink\" title=\"iTerm2\"></a>iTerm2</h1><p><a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"external\">iTerm2</a>是默认终端的终极替代方案，个性化、热键等方面表现非常出色，兼容性也非常好。</p>\n<p><img src=\"/img/teriterm.png\" alt=\"iTerm2\"></p>\n<p>直接到其<a href=\"https://www.iterm2.com/downloads.html\" target=\"_blank\" rel=\"external\">官网</a>下载安装即可。</p>\n<h1 id=\"zsh\"><a href=\"#zsh\" class=\"headerlink\" title=\"zsh\"></a>zsh</h1><p><strong>zsh</strong>在命令补全等很多方面上比bash智能很多，首先切换到zsh：</p>\n<pre><code>chsh -s /bin/zsh\n</code></pre><p><a href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"external\">oh-my-zsh</a>是一个管理zsh配置的框架，包含各种插件和主题，可用以下脚本安装：</p>\n<pre><code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;\n</code></pre><p><img src=\"/img/terzsh.png\" alt=\"oh-my-zsh\"></p>\n<p>安装完成后编辑<code>~/.zshrc</code>，可以编辑<code>ZSH_THEME</code>修改主题，或者编辑<code>plugins</code>增加插件，对应的文件分别在<code>~/.oh-my-zsh/themes</code>和<code>~/.oh-my-zsh/plugins</code>下。</p>\n<h1 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h1><p><a href=\"http://vim.spf13.com/\" target=\"_blank\" rel=\"external\">spf13-vim</a>是vim的终极配置之一，用以下脚本安装：</p>\n<pre><code>curl https://j.mp/spf13-vim3 -L &gt; spf13-vim.sh &amp;&amp; sh spf13-vim.sh\n</code></pre><p><img src=\"/img/tervim.png\" alt=\"spf13-vim\"></p>\n<p>配色文件在<code>~/.vim/bundle/vim-colorschemes/colors</code>下，指定名称修改配色：</p>\n<pre><code>echo colorscheme $colorscheme_name  &gt;&gt; ~/.vimrc.local\n</code></pre>","excerpt":"","more":"<p>终端是每天要用到的工具，所以一定要配置成自己顺手的，才能发挥更高的效率。<strong>iTerm2+zsh+vim</strong>是我目前用过的感觉最强大的配置方案了。</p>\n<h1 id=\"iTerm2\"><a href=\"#iTerm2\" class=\"headerlink\" title=\"iTerm2\"></a>iTerm2</h1><p><a href=\"https://www.iterm2.com/\">iTerm2</a>是默认终端的终极替代方案，个性化、热键等方面表现非常出色，兼容性也非常好。</p>\n<p><img src=\"/img/teriterm.png\" alt=\"iTerm2\"></p>\n<p>直接到其<a href=\"https://www.iterm2.com/downloads.html\">官网</a>下载安装即可。</p>\n<h1 id=\"zsh\"><a href=\"#zsh\" class=\"headerlink\" title=\"zsh\"></a>zsh</h1><p><strong>zsh</strong>在命令补全等很多方面上比bash智能很多，首先切换到zsh：</p>\n<pre><code>chsh -s /bin/zsh\n</code></pre><p><a href=\"http://ohmyz.sh/\">oh-my-zsh</a>是一个管理zsh配置的框架，包含各种插件和主题，可用以下脚本安装：</p>\n<pre><code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;\n</code></pre><p><img src=\"/img/terzsh.png\" alt=\"oh-my-zsh\"></p>\n<p>安装完成后编辑<code>~/.zshrc</code>，可以编辑<code>ZSH_THEME</code>修改主题，或者编辑<code>plugins</code>增加插件，对应的文件分别在<code>~/.oh-my-zsh/themes</code>和<code>~/.oh-my-zsh/plugins</code>下。</p>\n<h1 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h1><p><a href=\"http://vim.spf13.com/\">spf13-vim</a>是vim的终极配置之一，用以下脚本安装：</p>\n<pre><code>curl https://j.mp/spf13-vim3 -L &gt; spf13-vim.sh &amp;&amp; sh spf13-vim.sh\n</code></pre><p><img src=\"/img/tervim.png\" alt=\"spf13-vim\"></p>\n<p>配色文件在<code>~/.vim/bundle/vim-colorschemes/colors</code>下，指定名称修改配色：</p>\n<pre><code>echo colorscheme $colorscheme_name  &gt;&gt; ~/.vimrc.local\n</code></pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"cizmvz0rb00028mprg04umxs0","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0tg000w8mpr7txjkr8e"},{"post_id":"cizmvz0rb00028mprg04umxs0","category_id":"cizmvz0t9000o8mprbdjpbti3","_id":"cizmvz0tk000z8mpromnktonb"},{"post_id":"cizmvz0tc000r8mpr7aqmi0d7","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0tm00138mprn8jaart5"},{"post_id":"cizmvz0tc000r8mpr7aqmi0d7","category_id":"cizmvz0t9000o8mprbdjpbti3","_id":"cizmvz0tq00178mprer8o7drf"},{"post_id":"cizmvz0tf000v8mprup1ltn2c","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0tt001b8mpr1o1golo8"},{"post_id":"cizmvz0tf000v8mprup1ltn2c","category_id":"cizmvz0t9000o8mprbdjpbti3","_id":"cizmvz0tx001f8mprczbv3cvd"},{"post_id":"cizmvz0sa000e8mpr27ifwxqk","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0ty001j8mprtvns3zo0"},{"post_id":"cizmvz0sa000e8mpr27ifwxqk","category_id":"cizmvz0tg000x8mprmukmxydu","_id":"cizmvz0tz001m8mprwv30ey8e"},{"post_id":"cizmvz0rh00048mprjnax9c14","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0u1001r8mpr76wi41fz"},{"post_id":"cizmvz0rh00048mprjnax9c14","category_id":"cizmvz0to00158mprvbhh7p37","_id":"cizmvz0u4001u8mpribj5tl29"},{"post_id":"cizmvz0se000f8mpro07x3ukj","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0u6001y8mprst0h4qzq"},{"post_id":"cizmvz0se000f8mpro07x3ukj","category_id":"cizmvz0tx001e8mprvc74vzwn","_id":"cizmvz0u900228mpr0lgaequ1"},{"post_id":"cizmvz0u0001o8mpr9v1a1wn3","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0ue00268mprga0gltea"},{"post_id":"cizmvz0u0001o8mpr9v1a1wn3","category_id":"cizmvz0tg000x8mprmukmxydu","_id":"cizmvz0ug002a8mprp360i76i"},{"post_id":"cizmvz0sk000i8mpr97ykadjr","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0uh002e8mpruy1slot4"},{"post_id":"cizmvz0sk000i8mpr97ykadjr","category_id":"cizmvz0t9000o8mprbdjpbti3","_id":"cizmvz0uj002i8mprprooep05"},{"post_id":"cizmvz0u1001s8mpr9qhtdz9x","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0uk002l8mpr71hixaqs"},{"post_id":"cizmvz0u1001s8mpr9qhtdz9x","category_id":"cizmvz0t9000o8mprbdjpbti3","_id":"cizmvz0ul002o8mpr2jfvrscl"},{"post_id":"cizmvz0rs00088mprsu20ra62","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0um002r8mprmvgv5ywn"},{"post_id":"cizmvz0rs00088mprsu20ra62","category_id":"cizmvz0u4001v8mprff071tvs","_id":"cizmvz0um002u8mpr0rtiqo2v"},{"post_id":"cizmvz0ua00248mpr9et0wyuu","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0uo002x8mpr4vlqhl0k"},{"post_id":"cizmvz0ua00248mpr9et0wyuu","category_id":"cizmvz0tx001e8mprvc74vzwn","_id":"cizmvz0uo002z8mprlwq8rzza"},{"post_id":"cizmvz0t3000j8mprt4lwmiqh","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0uq00328mprkwi65zz7"},{"post_id":"cizmvz0t3000j8mprt4lwmiqh","category_id":"cizmvz0ua00238mpr4e2af2zx","_id":"cizmvz0ur00358mprtdx8bf82"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0us00388mpr7jal9632"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","category_id":"cizmvz0t9000o8mprbdjpbti3","_id":"cizmvz0us003a8mpr93fcpn4u"},{"post_id":"cizmvz0t6000m8mprwp05xgsp","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0ut003b8mprbhlqn5a9"},{"post_id":"cizmvz0t6000m8mprwp05xgsp","category_id":"cizmvz0tx001e8mprvc74vzwn","_id":"cizmvz0ut003d8mprlxpnmw0d"},{"post_id":"cizmvz0ui002g8mprxuyooacd","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0uu003f8mprtujqe03h"},{"post_id":"cizmvz0ui002g8mprxuyooacd","category_id":"cizmvz0ua00238mpr4e2af2zx","_id":"cizmvz0uu003h8mprkd541bfb"},{"post_id":"cizmvz0s1000a8mprurstbq2w","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0uv003j8mprv7vr66gs"},{"post_id":"cizmvz0s1000a8mprurstbq2w","category_id":"cizmvz0ua00238mpr4e2af2zx","_id":"cizmvz0uw003l8mprqoas9r5l"},{"post_id":"cizmvz0t8000n8mprstl0znz3","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0ux003n8mpralowy0ne"},{"post_id":"cizmvz0t8000n8mprstl0znz3","category_id":"cizmvz0tx001e8mprvc74vzwn","_id":"cizmvz0uy003p8mprihlpu1da"},{"post_id":"cizmvz0ta000q8mprx8ksu9s0","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0uz003r8mprewonnyay"},{"post_id":"cizmvz0ta000q8mprx8ksu9s0","category_id":"cizmvz0ua00238mpr4e2af2zx","_id":"cizmvz0v0003t8mprauwrryb5"},{"post_id":"cizmvz0s5000b8mprfu6p6ode","category_id":"cizmvz0td000s8mpr3e8iveji","_id":"cizmvz0v0003u8mprnc7ahgaj"},{"post_id":"cizmvz0s5000b8mprfu6p6ode","category_id":"cizmvz0up00318mprlwvxx5fa","_id":"cizmvz0v1003y8mpr7ek5go6n"},{"post_id":"cizmvz0tl00118mprbhzhzztv","category_id":"cizmvz0td000s8mpr3e8iveji","_id":"cizmvz0v100408mprpxotrb8c"},{"post_id":"cizmvz0tl00118mprbhzhzztv","category_id":"cizmvz0up00318mprlwvxx5fa","_id":"cizmvz0v200448mprd4xubvgl"},{"post_id":"cizmvz0tv001c8mprxd00482l","category_id":"cizmvz0rn00068mpr5y3ta3s8","_id":"cizmvz0v200468mprac628m0a"},{"post_id":"cizmvz0tv001c8mprxd00482l","category_id":"cizmvz0tx001e8mprvc74vzwn","_id":"cizmvz0v3004a8mpr1962o9zo"},{"post_id":"cizmvz0tx001h8mprck4uig82","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0v4004c8mprl2bhh5vt"},{"post_id":"cizmvz0tx001h8mprck4uig82","category_id":"cizmvz0uz003s8mprle1jojjw","_id":"cizmvz0v4004g8mprrg14vevx"},{"post_id":"cizmvz0ty001k8mprhr4oeaaf","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0v5004i8mpr04x6k9gy"},{"post_id":"cizmvz0ty001k8mprhr4oeaaf","category_id":"cizmvz0v0003w8mpr6i6phjpp","_id":"cizmvz0v7004m8mprsda3zczf"},{"post_id":"cizmvz0u4001w8mprj0xswx11","category_id":"cizmvz0td000s8mpr3e8iveji","_id":"cizmvz0v7004o8mpr1f12oup5"},{"post_id":"cizmvz0u4001w8mprj0xswx11","category_id":"cizmvz0up00318mprlwvxx5fa","_id":"cizmvz0v8004r8mpr1k6ktdfg"},{"post_id":"cizmvz0u900208mpr59q9boxx","category_id":"cizmvz0s7000c8mpr2rhoqc0k","_id":"cizmvz0v9004u8mprdcwu9lkw"},{"post_id":"cizmvz0u900208mpr59q9boxx","category_id":"cizmvz0ua00238mpr4e2af2zx","_id":"cizmvz0vb004x8mprgfmbtp9e"},{"post_id":"cizmvz0ug002b8mprdivsxr9u","category_id":"cizmvz0td000s8mpr3e8iveji","_id":"cizmvz0vb00508mpro4qommh3"},{"post_id":"cizmvz0ug002b8mprdivsxr9u","category_id":"cizmvz0v4004e8mprnzhzm9bd","_id":"cizmvz0vd00538mpr7c31nrqc"},{"post_id":"cizmvz0tg000y8mpry2ekzu0h","category_id":"cizmvz0us00378mpr9ge7xskn","_id":"cizmvz0ve00558mprtokercvj"},{"post_id":"cizmvz0tg000y8mpry2ekzu0h","category_id":"cizmvz0v6004l8mpr7qhlh59b","_id":"cizmvz0vf00578mprttnmbopa"},{"post_id":"cizmvz0tm00148mpr83mg434a","category_id":"cizmvz0us00378mpr9ge7xskn","_id":"cizmvz0vf00588mproqu66cxg"},{"post_id":"cizmvz0tm00148mpr83mg434a","category_id":"cizmvz0v8004s8mprlckb0iu6","_id":"cizmvz0vg005a8mpr6jp051kv"},{"post_id":"cizmvz0tq00198mpr2d13919q","category_id":"cizmvz0us00378mpr9ge7xskn","_id":"cizmvz0vg005b8mprgxjz1h7a"},{"post_id":"cizmvz0tq00198mpr2d13919q","category_id":"cizmvz0v8004s8mprlckb0iu6","_id":"cizmvz0vh005d8mpr7zojdpam"}],"PostTag":[{"post_id":"cizmvz0rb00028mprg04umxs0","tag_id":"cizmvz0rr00078mprj1b6hmed","_id":"cizmvz0tm00128mprnlwvbn80"},{"post_id":"cizmvz0rb00028mprg04umxs0","tag_id":"cizmvz0s8000d8mpryt4s85hk","_id":"cizmvz0tp00168mpr6ks16tqv"},{"post_id":"cizmvz0rb00028mprg04umxs0","tag_id":"cizmvz0sh000h8mprttjn34ym","_id":"cizmvz0tt001a8mprpkvu156j"},{"post_id":"cizmvz0rb00028mprg04umxs0","tag_id":"cizmvz0t5000l8mprsav5tmuh","_id":"cizmvz0tx001d8mprzk5q2nud"},{"post_id":"cizmvz0rb00028mprg04umxs0","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0ty001i8mpru61sxefk"},{"post_id":"cizmvz0rb00028mprg04umxs0","tag_id":"cizmvz0tf000u8mpr65jteyra","_id":"cizmvz0tz001l8mpr8jjukp58"},{"post_id":"cizmvz0rh00048mprjnax9c14","tag_id":"cizmvz0tk00108mprawfdyufb","_id":"cizmvz0u0001q8mpruzxaz8v0"},{"post_id":"cizmvz0rh00048mprjnax9c14","tag_id":"cizmvz0tq00188mpr4cn3d5te","_id":"cizmvz0u3001t8mprh3rhq73e"},{"post_id":"cizmvz0u0001o8mpr9v1a1wn3","tag_id":"cizmvz0s8000d8mpryt4s85hk","_id":"cizmvz0u5001x8mpruajn49ft"},{"post_id":"cizmvz0u0001o8mpr9v1a1wn3","tag_id":"cizmvz0t5000l8mprsav5tmuh","_id":"cizmvz0u900218mprzrwexdgl"},{"post_id":"cizmvz0u0001o8mpr9v1a1wn3","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0ud00258mprxslfg67b"},{"post_id":"cizmvz0u0001o8mpr9v1a1wn3","tag_id":"cizmvz0tf000u8mpr65jteyra","_id":"cizmvz0uf00298mprix7sitso"},{"post_id":"cizmvz0rs00088mprsu20ra62","tag_id":"cizmvz0tx001g8mprsnw968fc","_id":"cizmvz0uh002d8mpr2y3tuhzh"},{"post_id":"cizmvz0rs00088mprsu20ra62","tag_id":"cizmvz0u0001p8mprwfh4nlfw","_id":"cizmvz0uj002h8mprneip3ktn"},{"post_id":"cizmvz0u900208mpr59q9boxx","tag_id":"cizmvz0tf000u8mpr65jteyra","_id":"cizmvz0uj002k8mpr63joxh3j"},{"post_id":"cizmvz0u900208mpr59q9boxx","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0ul002n8mprjt2mggn7"},{"post_id":"cizmvz0s1000a8mprurstbq2w","tag_id":"cizmvz0u7001z8mprjgyakfcw","_id":"cizmvz0um002q8mpro8yc3hql"},{"post_id":"cizmvz0s1000a8mprurstbq2w","tag_id":"cizmvz0ue00278mprl58zxbwc","_id":"cizmvz0um002t8mprd1gx407e"},{"post_id":"cizmvz0s1000a8mprurstbq2w","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0un002w8mprgahe1iy5"},{"post_id":"cizmvz0sa000e8mpr27ifwxqk","tag_id":"cizmvz0s8000d8mpryt4s85hk","_id":"cizmvz0uo00308mpru5a1wlj2"},{"post_id":"cizmvz0sa000e8mpr27ifwxqk","tag_id":"cizmvz0t5000l8mprsav5tmuh","_id":"cizmvz0uq00338mpr9b6i4s1m"},{"post_id":"cizmvz0sa000e8mpr27ifwxqk","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0ur00368mprp5ubqhfx"},{"post_id":"cizmvz0se000f8mpro07x3ukj","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0v1003x8mprgqvdicgb"},{"post_id":"cizmvz0se000f8mpro07x3ukj","tag_id":"cizmvz0uq00348mprds6tat4s","_id":"cizmvz0v1003z8mpre7wjk8l9"},{"post_id":"cizmvz0se000f8mpro07x3ukj","tag_id":"cizmvz0us00398mpr7n0tc1s8","_id":"cizmvz0v200438mprhioujq2c"},{"post_id":"cizmvz0se000f8mpro07x3ukj","tag_id":"cizmvz0ut003e8mprhgk3u9l5","_id":"cizmvz0v200458mpr9dmgwe4r"},{"post_id":"cizmvz0se000f8mpro07x3ukj","tag_id":"cizmvz0uu003i8mpr7l2h4ovi","_id":"cizmvz0v300498mprho73vvci"},{"post_id":"cizmvz0se000f8mpro07x3ukj","tag_id":"cizmvz0uw003m8mprcctq9qig","_id":"cizmvz0v3004b8mprdunyr8jn"},{"post_id":"cizmvz0se000f8mpro07x3ukj","tag_id":"cizmvz0uz003q8mprmsht0zxg","_id":"cizmvz0v4004f8mpryok26e8k"},{"post_id":"cizmvz0sk000i8mpr97ykadjr","tag_id":"cizmvz0v0003v8mpr2xd0hzws","_id":"cizmvz0v5004h8mprinlhg7lo"},{"post_id":"cizmvz0sk000i8mpr97ykadjr","tag_id":"cizmvz0rr00078mprj1b6hmed","_id":"cizmvz0v6004k8mprpgwgya31"},{"post_id":"cizmvz0sk000i8mpr97ykadjr","tag_id":"cizmvz0s8000d8mpryt4s85hk","_id":"cizmvz0v7004n8mprhsuesf7d"},{"post_id":"cizmvz0sk000i8mpr97ykadjr","tag_id":"cizmvz0sh000h8mprttjn34ym","_id":"cizmvz0v8004q8mpraakxex9l"},{"post_id":"cizmvz0sk000i8mpr97ykadjr","tag_id":"cizmvz0t5000l8mprsav5tmuh","_id":"cizmvz0v9004t8mprn908xm91"},{"post_id":"cizmvz0sk000i8mpr97ykadjr","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0va004w8mpr8ff9t7z8"},{"post_id":"cizmvz0t3000j8mprt4lwmiqh","tag_id":"cizmvz0tx001g8mprsnw968fc","_id":"cizmvz0vb004z8mpr8guzt8yf"},{"post_id":"cizmvz0t3000j8mprt4lwmiqh","tag_id":"cizmvz0ue00278mprl58zxbwc","_id":"cizmvz0vd00528mprtw3epg06"},{"post_id":"cizmvz0t3000j8mprt4lwmiqh","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0ve00548mprbtg6rs0u"},{"post_id":"cizmvz0t6000m8mprwp05xgsp","tag_id":"cizmvz0us00398mpr7n0tc1s8","_id":"cizmvz0vi005f8mprz6u4l97k"},{"post_id":"cizmvz0t6000m8mprwp05xgsp","tag_id":"cizmvz0uz003q8mprmsht0zxg","_id":"cizmvz0vj005g8mpryj2g59nq"},{"post_id":"cizmvz0t6000m8mprwp05xgsp","tag_id":"cizmvz0ve00568mprlz2zyns4","_id":"cizmvz0vj005i8mprpz7q2taz"},{"post_id":"cizmvz0t6000m8mprwp05xgsp","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0vk005j8mpr02q80ha1"},{"post_id":"cizmvz0t6000m8mprwp05xgsp","tag_id":"cizmvz0tf000u8mpr65jteyra","_id":"cizmvz0vk005l8mpr9vo9a56i"},{"post_id":"cizmvz0t8000n8mprstl0znz3","tag_id":"cizmvz0us00398mpr7n0tc1s8","_id":"cizmvz0vl005o8mprfuxy959v"},{"post_id":"cizmvz0t8000n8mprstl0znz3","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0vm005p8mprsdzqoyui"},{"post_id":"cizmvz0t8000n8mprstl0znz3","tag_id":"cizmvz0tf000u8mpr65jteyra","_id":"cizmvz0vm005r8mprgn7yjmqw"},{"post_id":"cizmvz0t8000n8mprstl0znz3","tag_id":"cizmvz0uz003q8mprmsht0zxg","_id":"cizmvz0vm005s8mprqoyafb99"},{"post_id":"cizmvz0ta000q8mprx8ksu9s0","tag_id":"cizmvz0s8000d8mpryt4s85hk","_id":"cizmvz0vn005u8mprncjjs3xw"},{"post_id":"cizmvz0ta000q8mprx8ksu9s0","tag_id":"cizmvz0tf000u8mpr65jteyra","_id":"cizmvz0vn005v8mpr2bngr9sm"},{"post_id":"cizmvz0ta000q8mprx8ksu9s0","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0vo005x8mpri3hqm64e"},{"post_id":"cizmvz0ta000q8mprx8ksu9s0","tag_id":"cizmvz0t5000l8mprsav5tmuh","_id":"cizmvz0vo005y8mpr048rtb9u"},{"post_id":"cizmvz0tc000r8mpr7aqmi0d7","tag_id":"cizmvz0vn005t8mprbi5s4wqw","_id":"cizmvz0vo00608mpr4ftd95nb"},{"post_id":"cizmvz0tc000r8mpr7aqmi0d7","tag_id":"cizmvz0sh000h8mprttjn34ym","_id":"cizmvz0vo00618mprk0d5l67v"},{"post_id":"cizmvz0tc000r8mpr7aqmi0d7","tag_id":"cizmvz0ve00568mprlz2zyns4","_id":"cizmvz0vp00638mprnttbxy3g"},{"post_id":"cizmvz0tf000v8mprup1ltn2c","tag_id":"cizmvz0vo005z8mprrx478886","_id":"cizmvz0vp00648mpr0rpoylhy"},{"post_id":"cizmvz0tf000v8mprup1ltn2c","tag_id":"cizmvz0rr00078mprj1b6hmed","_id":"cizmvz0vq00668mprrbko3cfu"},{"post_id":"cizmvz0tf000v8mprup1ltn2c","tag_id":"cizmvz0s8000d8mpryt4s85hk","_id":"cizmvz0vq00678mpru6rkp0su"},{"post_id":"cizmvz0tf000v8mprup1ltn2c","tag_id":"cizmvz0sh000h8mprttjn34ym","_id":"cizmvz0vq00698mpr034f7q2h"},{"post_id":"cizmvz0tf000v8mprup1ltn2c","tag_id":"cizmvz0t5000l8mprsav5tmuh","_id":"cizmvz0vr006a8mprpuk5oywh"},{"post_id":"cizmvz0tf000v8mprup1ltn2c","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0vr006c8mprhrf500ht"},{"post_id":"cizmvz0tg000y8mpry2ekzu0h","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0vr006d8mprcpx8txxu"},{"post_id":"cizmvz0tg000y8mpry2ekzu0h","tag_id":"cizmvz0u0001p8mprwfh4nlfw","_id":"cizmvz0vs006f8mprw3fcyzvs"},{"post_id":"cizmvz0tg000y8mpry2ekzu0h","tag_id":"cizmvz0uz003q8mprmsht0zxg","_id":"cizmvz0vs006g8mprsay145bs"},{"post_id":"cizmvz0tg000y8mpry2ekzu0h","tag_id":"cizmvz0vq00688mpryrhx2j21","_id":"cizmvz0vt006i8mprcvbls648"},{"post_id":"cizmvz0tl00118mprbhzhzztv","tag_id":"cizmvz0tx001g8mprsnw968fc","_id":"cizmvz0vv006m8mpr5d8fhjp3"},{"post_id":"cizmvz0tl00118mprbhzhzztv","tag_id":"cizmvz0uw003m8mprcctq9qig","_id":"cizmvz0vv006n8mprn4nwd5be"},{"post_id":"cizmvz0tl00118mprbhzhzztv","tag_id":"cizmvz0ut003e8mprhgk3u9l5","_id":"cizmvz0vv006p8mpruhp1uphy"},{"post_id":"cizmvz0tl00118mprbhzhzztv","tag_id":"cizmvz0uu003i8mpr7l2h4ovi","_id":"cizmvz0vw006q8mpr6ubc5xdq"},{"post_id":"cizmvz0tl00118mprbhzhzztv","tag_id":"cizmvz0uq00348mprds6tat4s","_id":"cizmvz0vw006s8mprkhi6jzgm"},{"post_id":"cizmvz0tm00148mpr83mg434a","tag_id":"cizmvz0vu006l8mprm03fkcmz","_id":"cizmvz0vw006t8mprjc88zrj1"},{"post_id":"cizmvz0tm00148mpr83mg434a","tag_id":"cizmvz0vq00688mpryrhx2j21","_id":"cizmvz0vx006v8mprucw6x9fb"},{"post_id":"cizmvz0tm00148mpr83mg434a","tag_id":"cizmvz0tk00108mprawfdyufb","_id":"cizmvz0vx006w8mpr0smu94mw"},{"post_id":"cizmvz0tq00198mpr2d13919q","tag_id":"cizmvz0vu006l8mprm03fkcmz","_id":"cizmvz0vz006y8mprztcpj5bb"},{"post_id":"cizmvz0tq00198mpr2d13919q","tag_id":"cizmvz0vq00688mpryrhx2j21","_id":"cizmvz0vz006z8mprqxu4uvpu"},{"post_id":"cizmvz0tv001c8mprxd00482l","tag_id":"cizmvz0uz003q8mprmsht0zxg","_id":"cizmvz0w100728mprwgfq8i1t"},{"post_id":"cizmvz0tv001c8mprxd00482l","tag_id":"cizmvz0us00398mpr7n0tc1s8","_id":"cizmvz0w100738mprmbkhf7vm"},{"post_id":"cizmvz0tv001c8mprxd00482l","tag_id":"cizmvz0s8000d8mpryt4s85hk","_id":"cizmvz0w100758mprpewav9v8"},{"post_id":"cizmvz0tv001c8mprxd00482l","tag_id":"cizmvz0t5000l8mprsav5tmuh","_id":"cizmvz0w200768mprwcd595mz"},{"post_id":"cizmvz0tx001h8mprck4uig82","tag_id":"cizmvz0w000718mprbvp9exp4","_id":"cizmvz0w300788mpruohfg7vq"},{"post_id":"cizmvz0tx001h8mprck4uig82","tag_id":"cizmvz0w100748mprn2zoc7il","_id":"cizmvz0w300798mpr9ntpcg2k"},{"post_id":"cizmvz0ty001k8mprhr4oeaaf","tag_id":"cizmvz0w200778mpr0829xmgc","_id":"cizmvz0w4007c8mprzqx0cteh"},{"post_id":"cizmvz0ty001k8mprhr4oeaaf","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0w4007d8mprbdg6nndd"},{"post_id":"cizmvz0ty001k8mprhr4oeaaf","tag_id":"cizmvz0w3007a8mprtppeucby","_id":"cizmvz0w5007f8mprwqoxlqnb"},{"post_id":"cizmvz0u1001s8mpr9qhtdz9x","tag_id":"cizmvz0rr00078mprj1b6hmed","_id":"cizmvz0w6007i8mprusjwg9lk"},{"post_id":"cizmvz0u1001s8mpr9qhtdz9x","tag_id":"cizmvz0us00398mpr7n0tc1s8","_id":"cizmvz0w6007j8mprt90z3keo"},{"post_id":"cizmvz0u1001s8mpr9qhtdz9x","tag_id":"cizmvz0sh000h8mprttjn34ym","_id":"cizmvz0w7007l8mpruziyv566"},{"post_id":"cizmvz0u1001s8mpr9qhtdz9x","tag_id":"cizmvz0uz003q8mprmsht0zxg","_id":"cizmvz0w7007m8mpr6tsl21ih"},{"post_id":"cizmvz0u1001s8mpr9qhtdz9x","tag_id":"cizmvz0ve00568mprlz2zyns4","_id":"cizmvz0w8007o8mpr1r56itdb"},{"post_id":"cizmvz0u1001s8mpr9qhtdz9x","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0w8007p8mpr59zt5wij"},{"post_id":"cizmvz0u4001w8mprj0xswx11","tag_id":"cizmvz0w5007h8mprls6u5hw7","_id":"cizmvz0w9007r8mprsfq9cdvh"},{"post_id":"cizmvz0u4001w8mprj0xswx11","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0wa007s8mpr0s8thy9t"},{"post_id":"cizmvz0ua00248mpr9et0wyuu","tag_id":"cizmvz0uz003q8mprmsht0zxg","_id":"cizmvz0wb007v8mprs8mhuw53"},{"post_id":"cizmvz0ua00248mpr9et0wyuu","tag_id":"cizmvz0w7007n8mprfd1l4ky1","_id":"cizmvz0wb007w8mpr5087qo1m"},{"post_id":"cizmvz0ua00248mpr9et0wyuu","tag_id":"cizmvz0us00398mpr7n0tc1s8","_id":"cizmvz0wc007y8mprttsz25oa"},{"post_id":"cizmvz0ua00248mpr9et0wyuu","tag_id":"cizmvz0ut003e8mprhgk3u9l5","_id":"cizmvz0wc007z8mprekmmzk4x"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","tag_id":"cizmvz0wa007u8mprqzv2smr1","_id":"cizmvz0wf00848mpr1szvlbw7"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","tag_id":"cizmvz0wb007x8mpru0r4wg80","_id":"cizmvz0wg00858mpre8y6t02o"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","tag_id":"cizmvz0sh000h8mprttjn34ym","_id":"cizmvz0wg00878mprlexxe11c"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","tag_id":"cizmvz0uz003q8mprmsht0zxg","_id":"cizmvz0wh00888mprnlhqgd46"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","tag_id":"cizmvz0ve00568mprlz2zyns4","_id":"cizmvz0wh00898mpr97ne94b1"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0wh008a8mprpisdeki4"},{"post_id":"cizmvz0uf00288mpr7g1zgbl5","tag_id":"cizmvz0us00398mpr7n0tc1s8","_id":"cizmvz0wi008b8mpryxjbwk2k"},{"post_id":"cizmvz0ug002b8mprdivsxr9u","tag_id":"cizmvz0tx001g8mprsnw968fc","_id":"cizmvz0wi008c8mpru2js9k71"},{"post_id":"cizmvz0ug002b8mprdivsxr9u","tag_id":"cizmvz0we00838mprjb7824oq","_id":"cizmvz0wi008d8mprdf4bmtnz"},{"post_id":"cizmvz0ui002g8mprxuyooacd","tag_id":"cizmvz0tx001g8mprsnw968fc","_id":"cizmvz0wi008e8mpry6mrps15"},{"post_id":"cizmvz0ui002g8mprxuyooacd","tag_id":"cizmvz0ue00278mprl58zxbwc","_id":"cizmvz0wj008f8mpr83gc2gmh"},{"post_id":"cizmvz0ui002g8mprxuyooacd","tag_id":"cizmvz0t9000p8mpr5rq9otyb","_id":"cizmvz0wj008g8mprlpfun0k2"},{"post_id":"cizmvz0ui002g8mprxuyooacd","tag_id":"cizmvz0w5007h8mprls6u5hw7","_id":"cizmvz0wj008h8mprhf9d548i"}],"Tag":[{"name":"ShadowSocks","_id":"cizmvz0rr00078mprj1b6hmed"},{"name":"OpenWrt","_id":"cizmvz0s8000d8mpryt4s85hk"},{"name":"科学上网","_id":"cizmvz0sh000h8mprttjn34ym"},{"name":"路由器","_id":"cizmvz0t5000l8mprsav5tmuh"},{"name":"Linux","_id":"cizmvz0t9000p8mpr5rq9otyb"},{"name":"ssh","_id":"cizmvz0tf000u8mpr65jteyra"},{"name":"Android","_id":"cizmvz0tk00108mprawfdyufb"},{"name":"刷机","_id":"cizmvz0tq00188mpr4cn3d5te"},{"name":"macOS","_id":"cizmvz0tx001g8mprsnw968fc"},{"name":"Minecraft","_id":"cizmvz0u0001p8mprwfh4nlfw"},{"name":"下载","_id":"cizmvz0u7001z8mprjgyakfcw"},{"name":"Unix","_id":"cizmvz0ue00278mprl58zxbwc"},{"name":"LEMP","_id":"cizmvz0uq00348mprds6tat4s"},{"name":"VPS","_id":"cizmvz0us00398mpr7n0tc1s8"},{"name":"Nginx","_id":"cizmvz0ut003e8mprhgk3u9l5"},{"name":"MySQL","_id":"cizmvz0uu003i8mpr7l2h4ovi"},{"name":"PHP","_id":"cizmvz0uw003m8mprcctq9qig"},{"name":"服务器","_id":"cizmvz0uz003q8mprmsht0zxg"},{"name":"ChinaDNS","_id":"cizmvz0v0003v8mpr2xd0hzws"},{"name":"代理","_id":"cizmvz0ve00568mprlz2zyns4"},{"name":"GoAgent","_id":"cizmvz0vn005t8mprbi5s4wqw"},{"name":"GFWlist","_id":"cizmvz0vo005z8mprrx478886"},{"name":"游戏","_id":"cizmvz0vq00688mpryrhx2j21"},{"name":"舰队Collection","_id":"cizmvz0vu006l8mprm03fkcmz"},{"name":"Qt","_id":"cizmvz0w000718mprbvp9exp4"},{"name":"Windows","_id":"cizmvz0w100748mprn2zoc7il"},{"name":"树莓派","_id":"cizmvz0w200778mpr0829xmgc"},{"name":"Python","_id":"cizmvz0w3007a8mprtppeucby"},{"name":"shell","_id":"cizmvz0w5007h8mprls6u5hw7"},{"name":"SSL","_id":"cizmvz0w7007n8mprfd1l4ky1"},{"name":"SoftEther","_id":"cizmvz0wa007u8mprqzv2smr1"},{"name":"VPN","_id":"cizmvz0wb007x8mpru0r4wg80"},{"name":"Verilog","_id":"cizmvz0we00838mprjb7824oq"}]}}